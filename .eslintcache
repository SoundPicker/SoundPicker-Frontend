[{"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js":"1","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js":"2","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js":"3","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js":"4","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js":"5","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js":"6","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js":"7","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js":"8","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js":"9","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js":"10","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js":"11","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js":"12","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js":"13","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js":"14","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js":"15","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js":"16","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js":"17","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js":"18","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js":"19","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js":"20","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js":"21","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js":"22","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js":"23","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js":"24","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js":"25","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js":"26","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js":"27","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js":"28","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js":"29","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js":"30","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js":"31","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js":"32","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js":"33","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js":"34","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js":"35","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js":"36","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js":"37","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js":"38","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js":"39","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js":"40","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js":"41","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js":"42","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js":"43","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js":"44","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js":"45","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js":"46","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js":"47","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js":"48","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js":"49","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js":"50","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js":"51","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js":"52","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js":"53","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js":"54","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js":"55","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js":"56","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js":"57","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js":"58","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js":"59","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js":"60","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js":"61","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js":"62","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js":"63","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js":"64","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js":"65","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js":"66","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js":"67","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js":"68","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js":"69","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js":"70","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js":"71","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js":"72","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js":"73","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js":"74","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js":"75","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js":"76","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js":"77","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js":"78","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js":"79","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js":"80","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js":"81","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js":"82","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js":"83","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js":"84","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Player.js":"85","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Button.js":"86","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\ScrollToTop.js":"87","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js":"88","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndBlankTop.js":"89","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndDivider.js":"90","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainBlankTop.js":"91","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js":"92","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js":"93","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js":"94","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js":"95","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainDivider.js":"96","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js":"97","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\UnderLineWrap.js":"98","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js":"99","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js":"100","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js":"101","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js":"102","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js":"103","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button2.js":"104"},{"size":717,"mtime":1610256425150,"results":"105","hashOfConfig":"106"},{"size":1903,"mtime":1610646996450,"results":"107","hashOfConfig":"106"},{"size":160,"mtime":1610256425013,"results":"108","hashOfConfig":"106"},{"size":1768,"mtime":1610650427651,"results":"109","hashOfConfig":"106"},{"size":387,"mtime":1610646997394,"results":"110","hashOfConfig":"106"},{"size":8015,"mtime":1610650458210,"results":"111","hashOfConfig":"106"},{"size":1703,"mtime":1610650013646,"results":"112","hashOfConfig":"106"},{"size":356,"mtime":1610646997434,"results":"113","hashOfConfig":"106"},{"size":450,"mtime":1610646997428,"results":"114","hashOfConfig":"106"},{"size":2644,"mtime":1610646997029,"results":"115","hashOfConfig":"106"},{"size":3081,"mtime":1610650458127,"results":"116","hashOfConfig":"106"},{"size":11113,"mtime":1610650458236,"results":"117","hashOfConfig":"106"},{"size":8314,"mtime":1610650458137,"results":"118","hashOfConfig":"106"},{"size":629,"mtime":1610646996464,"results":"119","hashOfConfig":"106"},{"size":753,"mtime":1610646997006,"results":"120","hashOfConfig":"106"},{"size":1300,"mtime":1610646997407,"results":"121","hashOfConfig":"106"},{"size":718,"mtime":1609826205313,"results":"122","hashOfConfig":"106"},{"size":1178,"mtime":1609398269767,"results":"123","hashOfConfig":"106"},{"size":701,"mtime":1610646997040,"results":"124","hashOfConfig":"106"},{"size":838,"mtime":1610646997026,"results":"125","hashOfConfig":"106"},{"size":796,"mtime":1610646997295,"results":"126","hashOfConfig":"106"},{"size":853,"mtime":1610646997279,"results":"127","hashOfConfig":"106"},{"size":805,"mtime":1610646997298,"results":"128","hashOfConfig":"106"},{"size":797,"mtime":1610646997313,"results":"129","hashOfConfig":"106"},{"size":853,"mtime":1610646997305,"results":"130","hashOfConfig":"106"},{"size":805,"mtime":1610650427646,"results":"131","hashOfConfig":"106"},{"size":2232,"mtime":1610646996460,"results":"132","hashOfConfig":"106"},{"size":1221,"mtime":1610255541668,"results":"133","hashOfConfig":"106"},{"size":800,"mtime":1610650458133,"results":"134","hashOfConfig":"106"},{"size":522,"mtime":1610255541679,"results":"135","hashOfConfig":"106"},{"size":2650,"mtime":1610646997356,"results":"136","hashOfConfig":"106"},{"size":3676,"mtime":1610650013498,"results":"137","hashOfConfig":"106"},{"size":315,"mtime":1610646997349,"results":"138","hashOfConfig":"106"},{"size":1529,"mtime":1610650013513,"results":"139","hashOfConfig":"106"},{"size":40749,"mtime":1610646997376,"results":"140","hashOfConfig":"106"},{"size":293,"mtime":1610646996456,"results":"141","hashOfConfig":"106"},{"size":77,"mtime":1610646997017,"results":"142","hashOfConfig":"106"},{"size":2043,"mtime":1610646997365,"results":"143","hashOfConfig":"106"},{"size":711,"mtime":1610646997205,"results":"144","hashOfConfig":"106"},{"size":4616,"mtime":1610646997048,"results":"145","hashOfConfig":"106"},{"size":3331,"mtime":1610646997156,"results":"146","hashOfConfig":"106"},{"size":19024,"mtime":1610650398191,"results":"147","hashOfConfig":"106"},{"size":896,"mtime":1610650458131,"results":"148","hashOfConfig":"106"},{"size":6763,"mtime":1610646997380,"results":"149","hashOfConfig":"106"},{"size":1662,"mtime":1610646997216,"results":"150","hashOfConfig":"106"},{"size":653,"mtime":1610646997222,"results":"151","hashOfConfig":"106"},{"size":924,"mtime":1610255541686,"results":"152","hashOfConfig":"106"},{"size":544,"mtime":1610646997210,"results":"153","hashOfConfig":"106"},{"size":1334,"mtime":1610255541683,"results":"154","hashOfConfig":"106"},{"size":455,"mtime":1610255541717,"results":"155","hashOfConfig":"106"},{"size":834,"mtime":1610646997255,"results":"156","hashOfConfig":"106"},{"size":596,"mtime":1610255541696,"results":"157","hashOfConfig":"106"},{"size":1023,"mtime":1610646997248,"results":"158","hashOfConfig":"106"},{"size":558,"mtime":1610255541703,"results":"159","hashOfConfig":"106"},{"size":765,"mtime":1610646997244,"results":"160","hashOfConfig":"106"},{"size":1102,"mtime":1610255541702,"results":"161","hashOfConfig":"106"},{"size":415,"mtime":1610255541700,"results":"162","hashOfConfig":"106"},{"size":413,"mtime":1610255541699,"results":"163","hashOfConfig":"106"},{"size":1084,"mtime":1610255541674,"results":"164","hashOfConfig":"106"},{"size":567,"mtime":1610255541676,"results":"165","hashOfConfig":"106"},{"size":826,"mtime":1610646997193,"results":"166","hashOfConfig":"106"},{"size":6547,"mtime":1610646997189,"results":"167","hashOfConfig":"106"},{"size":9149,"mtime":1610646997273,"results":"168","hashOfConfig":"106"},{"size":2778,"mtime":1610646997264,"results":"169","hashOfConfig":"106"},{"size":1249,"mtime":1610650398184,"results":"170","hashOfConfig":"106"},{"size":833,"mtime":1610646997182,"results":"171","hashOfConfig":"106"},{"size":863,"mtime":1610646997147,"results":"172","hashOfConfig":"106"},{"size":607,"mtime":1610255541558,"results":"173","hashOfConfig":"106"},{"size":4768,"mtime":1610646997142,"results":"174","hashOfConfig":"106"},{"size":933,"mtime":1610646997177,"results":"175","hashOfConfig":"106"},{"size":1097,"mtime":1610650398198,"results":"176","hashOfConfig":"106"},{"size":632,"mtime":1610646997133,"results":"177","hashOfConfig":"106"},{"size":788,"mtime":1610255541562,"results":"178","hashOfConfig":"106"},{"size":964,"mtime":1610646997129,"results":"179","hashOfConfig":"106"},{"size":879,"mtime":1610646997044,"results":"180","hashOfConfig":"106"},{"size":7923,"mtime":1610646997078,"results":"181","hashOfConfig":"106"},{"size":3317,"mtime":1610646997081,"results":"182","hashOfConfig":"106"},{"size":19903,"mtime":1610650427623,"results":"183","hashOfConfig":"106"},{"size":3068,"mtime":1610646997068,"results":"184","hashOfConfig":"106"},{"size":1418,"mtime":1610650398152,"results":"185","hashOfConfig":"106"},{"size":3768,"mtime":1610650427620,"results":"186","hashOfConfig":"106"},{"size":589,"mtime":1610646997418,"results":"187","hashOfConfig":"106"},{"size":749,"mtime":1610360405141,"results":"188","hashOfConfig":"106"},{"size":793,"mtime":1609826436588,"results":"189","hashOfConfig":"106"},{"size":5670,"mtime":1610646997261,"results":"190","hashOfConfig":"106"},{"size":910,"mtime":1610256425082,"results":"191","hashOfConfig":"106"},{"size":357,"mtime":1610646997013,"results":"192","hashOfConfig":"106"},{"size":10981,"mtime":1610650013298,"results":"193","hashOfConfig":"106"},{"size":961,"mtime":1610646997168,"results":"194","hashOfConfig":"106"},{"size":794,"mtime":1610646997173,"results":"195","hashOfConfig":"106"},{"size":955,"mtime":1610646997050,"results":"196","hashOfConfig":"106"},{"size":576,"mtime":1610650398155,"results":"197","hashOfConfig":"106"},{"size":1023,"mtime":1610646997102,"results":"198","hashOfConfig":"106"},{"size":1323,"mtime":1610650398159,"results":"199","hashOfConfig":"106"},{"size":557,"mtime":1610646997108,"results":"200","hashOfConfig":"106"},{"size":788,"mtime":1610646997060,"results":"201","hashOfConfig":"106"},{"size":1686,"mtime":1610650013633,"results":"202","hashOfConfig":"106"},{"size":793,"mtime":1610646997422,"results":"203","hashOfConfig":"106"},{"size":743,"mtime":1610646997400,"results":"204","hashOfConfig":"106"},{"size":42116,"mtime":1610646997361,"results":"205","hashOfConfig":"106"},{"size":2045,"mtime":1610650013535,"results":"206","hashOfConfig":"106"},{"size":2809,"mtime":1610650398250,"results":"207","hashOfConfig":"106"},{"size":535,"mtime":1610646997327,"results":"208","hashOfConfig":"106"},{"size":1173,"mtime":1610650427657,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gcv23r",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"214"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"214"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"214"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"214"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"214"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"214"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"214"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"214"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"214"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"214"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"214"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"214"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"214"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"214"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"214"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"214"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"214"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"214"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"214"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"214"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"214"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"214"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"214"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"214"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js",[],["443","444"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js",["445","446"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport default function(SpecificComponent,option,adminRoute=null){\r\n\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    function AuthenticationCheck(props){\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        if(window.localStorage.getItem('isAuth')===null){\r\n            window.localStorage.setItem('isAuth','false');\r\n        }\r\n        \r\n\r\n        useEffect(()=>{\r\n        \r\n            dispatch(()=>{\r\n                if(!window.localStorage.getItem('isAuth')===null){\r\n                console.log(window.localStorage.getItem('isAuth'));\r\n                    //로그인 하지 않은 상태\r\n                    if(window.localStorage.getItem('isAuth')==='false'&&window.location.hash==='#/register'){\r\n                        props.history.push('/register');\r\n                    }else if(window.localStorage.getItem('isAuth')==='false'){\r\n                        props.history.push('/login');\r\n\r\n                    }else{\r\n                        //로그인 한 상태\r\n                        if(adminRoute && window.localStorage.getItem('isAuth')==='true'){\r\n                            props.history.push('/');\r\n                        }else{\r\n                            if(option===false){\r\n                                props.history.push('/');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                    \r\n            })\r\n\r\n        },[])\r\n        \r\n        return(\r\n            <SpecificComponent {...props} user={user}/>\r\n        )\r\n\r\n    }\r\n\r\n    return AuthenticationCheck;\r\n\r\n}","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js",["447","448","449","450"],"import BlankTop from \"../../components/common/BlankTop\";\r\nimport MainContainer from \"../../containers/main/MainContainer\";\r\n\r\nconst MainPage = () => {\r\n  // 여기는 최종 집합소 !\r\n\r\n  return (\r\n    <>\r\n      <MainContainer />\r\n      <BlankTop DesktopMargin=\"20\" TabletMargin=\"10\" MobileMargin=\"5\" />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default MainPage;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js",["451"],"import React from \"react\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from \"styled-components\";\r\nimport BlankTop from '../../components/common/BlankTop';\r\nimport QuizHeader from '../../components/common/QuizHeader';\r\nimport UnderLineWrap from './UnderLineWrap';\r\nimport TextComponent from '../../components/common/TextComponent';\r\nimport Button from './Button';\r\nimport Button2 from './Button2';\r\nimport BoldTextComponent from './BoldTextComponent';\r\nimport Bg1 from '../../assets/images/mypage_background1.jpg';\r\nimport Bg2 from '../../assets/images/mypage_background2.png';\r\nimport logo1 from '../../assets/images/image_watermark.png';\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\nimport {auth, changeName,changePassword,deleteTest} from \"../../_actions/user_action\";\r\nimport { Input } from 'antd';\r\n\r\n\r\nconst Background = styled.div`\r\n    width:100vw;\r\n    height:100%;\r\n    min-height:100vh;\r\n\r\n    border:1px solid rgba(0,0,0,0);\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-color: rgba( 12, 26, 34, 1);\r\n    background-size:contain;\r\n    @media (min-width: 768px) and (max-width:1024px){\r\n      background-image: url(${Bg2});\r\n    }\r\n @media  (min-width:1024px) {\r\n  background-image: url(${Bg1});\r\n    }\r\n    @media (max-width: 768px) {\r\n      background-image: url(${Bg2});\r\n    }\r\n`;\r\n\r\n\r\nconst Wrapper=styled.div`\r\n\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    //between\r\n    margin-top: 3%;\r\n    width: 100%auto;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    //desktop\r\n    margin-top: 3%;\r\n    width: 100%auto;\r\n  }\r\n  @media (max-width: 767px) {\r\n    //iphone\r\n    width: 100%auto;\r\n    margin-top: 3%;\r\n  }\r\n`\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 70%;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Detail=styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst MyIcon = styled.img`\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    //between\r\n    width: 221px;\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    //desktop\r\n    width: 297px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    //iphone\r\n    width: 150px;\r\n  }\r\n`\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo1,\r\n};\r\n\r\n\r\n\r\n\r\nfunction MyPage({props}) {\r\n  \r\n\r\n  const [myState, setMyState] =useState({status: 'idle', member:null});\r\n  const dispatch = useDispatch();\r\n  \r\n  const nameInput = useRef();\r\n  const passwordInput = useRef();\r\n\r\n  useEffect(()=>{\r\n      dispatch(auth()).then(response => {\r\n        setMyState({status:'pending'});\r\n        const data=response.payload.data;\r\n        setTimeout(() => setMyState({ status: 'resolved' , member:data}), 600);\r\n         });\r\n  },[]);\r\n\r\n  const onChangeInputs = async evt => {\r\n    const { name, value } = evt.target\r\n    try {\r\n      await changeName({\r\n        ...myState.member,\r\n        [name]: value,\r\n      })\r\n      setMyState({\r\n        status: 'resolved',\r\n        member: {\r\n          ...myState.member,\r\n          [name]: value,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  const onChangePassword = async evt => {\r\n    const { name, value } = evt.target\r\n    try {\r\n      await changePassword({\r\n        ...myState.member,\r\n        [name]: value,\r\n      })\r\n      setMyState({\r\n        status: 'resolved',\r\n        member: {\r\n          ...myState.member,\r\n          [name]: value,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n\r\n\r\nconst onDeleteTest = async (evt) => {\r\n  console.log(evt);\r\n  try {\r\n      await deleteTest(evt.id);\r\n      console.log(myState)\r\n      const tests = myState.member.Tests.filter(test =>{\r\n          return test.id !== evt.id\r\n      })\r\n      setMyState({\r\n        status: 'resolved',\r\n        member: {\r\n          ...myState.member,\r\n          Tests:tests\r\n        }\r\n    });\r\n  } catch (e) {\r\n      console.error(e);\r\n  }\r\n};\r\n\r\n  const history = useHistory();\r\n\r\nswitch (myState.status) {\r\n  case 'pending':\r\n      return <StartLoading/>;\r\n  case 'resolved':\r\n      return (\r\n        myState.member&&\r\n        <Background>\r\n          <QuizHeader />\r\n            <Wrapper>\r\n              \r\n                <MyIcon></MyIcon>\r\n                <BlankTop DesktopMargin='3' TabletMargin='3' MobileMargin='1' />\r\n                <TextComponent title=\"마이페이지\"  DesktopLength='20' TabletLength='15' MobileLength='13'/>  \r\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\r\n                <Content>\r\n                  <BoldTextComponent title=\"개인정보 수정\"  DesktopLength='25' TabletLength='20' MobileLength='15'/>\r\n                </Content>\r\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\r\n                <Content>\r\n                  <Input  style={{ color: 'white'  }} ref={nameInput} bordered={false} name=\"nickname\" value={myState.member.nickname} onChange={onChangeInputs}/>\r\n                  <Button2 font='12' onClick = {() => {nameInput.current.focus();}}>닉네임 변경</Button2>\r\n                </Content>\r\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='1' />\r\n                <Content>\r\n                <Input  style={{ color: 'white'  }} bordered={false} name=\"email\" value={myState.member.email} disabled={true}/>\r\n                <Button2 font='12' color='gray'>이메일 <div></div>변경불가</Button2>\r\n                </Content>\r\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='1' />\r\n                <Content>\r\n                  <Input placeholder='******'\r\n                    style={{ color: 'white'  }} ref={passwordInput} bordered={false} name=\"password\" onChange={onChangePassword}disabled={true}/>\r\n                  <Button2 font='12' color='gray' onClick = {() => {passwordInput.current.focus(); }} >비밀번호 <div></div> 변경불가</Button2>\r\n                </Content>\r\n                <BlankTop DesktopMargin='8' TabletMargin='7' MobileMargin='5' />\r\n                <Content>\r\n                  <BoldTextComponent title=\"마이테스트 수정\"  DesktopLength='25' TabletLength='20' MobileLength='15'/>\r\n                </Content>\r\n                <BlankTop DesktopMargin='7' TabletMargin='5' MobileMargin='3' />\r\n            \r\n                  {myState.member.Tests && myState?.member?.Tests.map((member,i)=>\r\n                  \r\n                  <div>\r\n                  <Detail>\r\n                  <BoldTextComponent key={i} title={member.title}  DesktopLength='15' TabletLength='12' MobileLength='12'/>\r\n                  <div>\r\n                  <Button font='12' onClick={() => history.push(`/testedit/${member.id}`)}>수정</Button>\r\n                   <Button font='12' onClick={()=>onDeleteTest(member)}>삭제</Button>\r\n                  <Button font='12'  color=\"#60FFDA\" border=\"#60FFDA\"  onClick={() => history.push(`/test/${member.id}`)} > 플레이</Button> </div></Detail>  \r\n                  <Detail>\r\n                    <TextComponent  key={i} title={member.description}  DesktopLength='10' TabletLength='9' MobileLength='7'/>\r\n                  </Detail> \r\n                  <BlankTop DesktopMargin='2' TabletMargin='2' MobileMargin='2' />\r\n                  <UnderLineWrap  DesktopLength='130'BetweenLength='95' TabletLength='70' MobileLength='36' ></UnderLineWrap>\r\n                  <BlankTop DesktopMargin='4' TabletMargin='2' MobileMargin='2' /> \r\n                </div>\r\n                )}\r\n               \r\n              \r\n                </Wrapper>\r\n          </Background> \r\n      )\r\n    case 'rejected':\r\n      return <h1>해당 페이지가 없습니다. </h1>\r\n    case 'idle':\r\n    default:\r\n      return <div></div>\r\n  }\r\n}\r\nexport default MyPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js",["452"],"import BlankTop from '../../components/common/BlankTop'\r\nimport TestCdWrapperContainer from '../../containers/test/TestCd/TestCdWrapperContainer'\r\nimport TestWrapperContainer from '../../containers/test/TestWrapperContainer'\r\n\r\nconst TestPage = ({ match }) => {\r\n  // state\r\n  return (\r\n    <>\r\n      <TestWrapperContainer>\r\n        <TestCdWrapperContainer match={match} />\r\n      </TestWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js",["453"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContentComponent from \"./ContentComponent\";\r\nimport BlankTop from '../common/BlankTop';\r\nimport LoadingComponent from '../common/LoadingComponent';\r\nimport Bg1 from '../../assets/images/startloading_background1.jpg';\r\nimport Bg2 from '../../assets/images/startloading_background2.jpg';\r\nimport logo1 from '../../assets/images/image_watermark.png';\r\nimport Bg3 from '../../assets/images/startloading_background3.png';\r\n\r\nconst Fix =styled.div`\r\nmin-height:100vh;\r\nbackground-color:  #081923;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-color: #081923;\r\n    background-image: url(${Bg1});\r\n    @media  (min-width:1024px) {\r\n      min-height:1080px;\r\n    }\r\n    @media only screen and (max-width: 1024px) {\r\n      background-image: url(${Bg2});\r\n      min-height:1336px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      background-image: url(${Bg3});\r\n      min-height:1024px;\r\n    }\r\n`;\r\n\r\n\r\nconst Wrapper=styled.div`\r\n  width:97.1rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  @media only screen and (max-width: 1024px) {\r\n        width:71.5rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n        width:54.8rem;\r\n  }\r\n    @media only screen and (max-width: 548px) {\r\n        width:100%;\r\n        padding:0 0.5rem;\r\n    }\r\n\r\n`;\r\n\r\n\r\nconst MyIcon = styled.img`\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    width:300px;\r\n    }\r\n\r\n    @media (min-width: 1024px) { //desktop\r\n    }\r\n    @media (max-width: 767px) { //iphone\r\n      width:150px;\r\n  }\r\n`;\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo1,\r\n};\r\n\r\n\r\n\r\n\r\nfunction StartLoading(){\r\n\r\n  const e = Math.floor(Math.random()*5+1);\r\n  var text=\"\";\r\n  if(e===1){\r\n    text=\"모든 테스트를 불러오는 중...\";\r\n  }\r\n  if(e===2){\r\n    text=\"아이돌과 팬미팅 하러 가는 중...\";\r\n  }\r\n  if(e===3){\r\n    text=\"게임 음악 들으러 가는 중...\";\r\n  }\r\n  if(e===4){\r\n    text=\"영화 보고 테스트 만드는 중...\";\r\n  }\r\n  if(e===5){\r\n    text=\"애니 브금 듣고 가슴이 웅장해지는 중...\";\r\n  }\r\n\r\n\r\n    return(\r\n        <div>\r\n          <Fix>\r\n          <Background>\r\n            <Wrapper>\r\n            <BlankTop DesktopMargin='38' TabletMargin='48.5' MobileMargin='38' />\r\n                <ContentComponent title=\"소리로 하는 모든 즐거움\" />\r\n                <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\r\n                <MyIcon></MyIcon>\r\n            <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\r\n            <LoadingComponent></LoadingComponent>\r\n            <BlankTop DesktopMargin='5' TabletMargin='2' MobileMargin='2' />\r\n            <ContentComponent title={`${text}`}/>;\r\n            \r\n            <div></div>\r\n            </Wrapper>\r\n            </Background>\r\n            </Fix>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default StartLoading;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js",["454","455","456"],"import React, { useState } from \"react\";\r\nimport { withRouter,Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form,  Button,  } from 'antd';\r\nimport {UserOutlined,LockOutlined} from '@ant-design/icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\"\r\nimport TextComponent from '../../../components/common/TextComponent';\r\nimport BlankTop from '../../../components/common/BlankTop';\r\nimport QuizHeader from '../../common/QuizHeader';\r\nimport UnderLineComponent from './UnderLineComponent';\r\nimport Bg1 from '../../../assets/images/login_background1.jpg';\r\nimport Bg2 from '../../../assets/images/login_background2.png';\r\nimport Bg3 from '../../../assets/images/login_background3.png';\r\nimport logo1 from '../../../assets/images/image_watermark.png';\r\nimport Text from './Text';\r\nimport ColorButton from './ColorButton';\r\n\r\nconst Fix =styled.div`\r\nmin-height:100vh;\r\nbackground-color:  #081923;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-color:  #081923;\r\n    background-image: url(${Bg1});\r\n    @media  (min-width:1024px) {\r\n      min-height:1080px;\r\n    }\r\n    @media only screen and (max-width: 1024px) {\r\n      background-image: url(${Bg2});\r\n      min-height:1336px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      background-image: url(${Bg3});\r\n      min-height:1024px;\r\n    }\r\n`;\r\nconst Wrapper=styled.div`\r\n  width:97.1rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  @media only screen and (max-width: 1024px) {\r\n        width:71.5rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n        width:54.8rem;\r\n  }\r\n    @media only screen and (max-width: 548px) {\r\n        width:100%;\r\n        padding:0 0.5rem;\r\n    }\r\n\r\n  ` \r\n\r\n\r\nconst MyIcon = styled.img`\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    width:180px;\r\n    }\r\n\r\n    @media (min-width: 1025px) { //desktop\r\n    width:221px;\r\n    }\r\n    @media (max-width: 768px) { //iphone\r\n      width:300px;\r\n  }\r\n  @media (max-width: 767px) { //iphone\r\n    width:150px;\r\n  }\r\n`;\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo1,\r\n};\r\n\r\nconst Input =styled.input`\r\nbackground-color:  rgba( 12, 26, 34, 0);\r\nborder-radius:0px;\r\nborder-color:rgba( 12, 26, 34, 0);\r\nwidth: 400px;\r\ncolor:white;\r\noutline:none;\r\nmargin-bottom:5px;\r\n@media (min-width: 768px) and (max-width:1024px) { //between\r\n    width:300px;\r\n    }\r\n@media (max-width: 768px) { //iphone\r\n      width:200px;\r\n  }\r\n  @media (max-width: 767px) { //iphone\r\n    width:290px;\r\n  }\r\n`\r\n\r\nconst Content=styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  @media (max-width: 768px) { //iphone\r\n    margin-left:15%;\r\n  }\r\n`\r\nconst Center=styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`\r\n\r\n\r\nfunction LoginPage(props) {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n\r\n  const goToMain = () => {\r\n    props.history.push('/register');}\r\n\r\n  return (\r\n    <Fix>\r\n    <Background><QuizHeader/>\r\n    <Wrapper>\r\n      <div>\r\n      <BlankTop DesktopMargin='38' TabletMargin='48.5' MobileMargin='26.5' />\r\n\r\n      <MyIcon></MyIcon>\r\n    </div>\r\n       \r\n  <BlankTop DesktopMargin='3' TabletMargin='3' MobileMargin='3' />\r\n  <TextComponent title=\"로그인\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \r\n  <BlankTop DesktopMargin='5' TabletMargin='3' MobileMargin='3' />\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.success) {\r\n                window.localStorage.setItem('isAuth','true');\r\n                window.localStorage.setItem('jwt',response.payload.data.accessToken);\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again');\r\n                window.localStorage.setItem('isAuth','false');\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          \r\n\r\n            <form onSubmit={handleSubmit} style={{ minWidth: '100px' }}>\r\n\r\n              <Form.Item required>\r\n              <Content>\r\n              <Text title=\"아이디&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='13' MobileLength='15'/> \r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  \r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                \r\n                 </Content>\r\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='25' />\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n              <Content>\r\n              <Text title=\"패스워드&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                </Content>\r\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='25' />\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <div><Center>\r\n                <ColorButton font='12' border=\"#60FFDA\" color=\"#ffffff\"  ><Button onClick={goToMain} ghost='true' type='text'  style={{ minWidth: '100%' }} >\r\n                <p style={{ color: '#ffffff'}}> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;회원가입&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; </p>\r\n                </Button></ColorButton>\r\n\r\n                <ColorButton font='12' background=\"#60FFDA\" color=\"#000000\" border=\"#60FFDA\"  ><Button ghost='true' type='text' htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n              &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 로그인&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;\r\n                </Button></ColorButton>\r\n                </Center> </div>\r\n              </Form.Item>\r\n            </form>\r\n        );\r\n      }}\r\n    </Formik> </Wrapper></Background></Fix>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js",["457","458","459","460"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js",["461"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js",["462"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\nimport TestEnd from \"../../components/test_end/TestEnd\";\r\nimport { useHistory, matchPath } from \"react-router-dom\";\r\n\r\nconst TestEndContainer = ({ match }) => {\r\n  const history = useHistory();\r\n  const parentMatch = matchPath(history.location.pathname, {\r\n    path: \"/test/:id\",\r\n  });\r\n\r\n  const [recommend, setRecommend] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const [title, setTitle] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const url = \"https://soundpicker.ga\";\r\n\r\n  const getRecommendAPI = async () => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}${history.location.pathname}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET RECOMMENDATION\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET RECOMMENDATION\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getRecommendAPI();\r\n      try {\r\n        setRecommend({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setRecommend({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setRecommend({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const getTitleAPI = async (id) => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}/test/${id}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET TITLE\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET TITLE\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getTitleAPI(parentMatch.params.id);\r\n      try {\r\n        setTitle({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setTitle({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setTitle({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, [parentMatch.params.id]);\r\n\r\n  if (recommend.status === \"idle\" || title.status === \"idle\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"rejected\" || title.status === \"rejected\") {\r\n    return <>Error</>;\r\n  } else if (recommend.status === \"pending\" || title.status === \"pending\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"resolved\" && title.status === \"resolved\") {\r\n    return <TestEnd recommendList={recommend.item.data} title={title.item} />;\r\n  }\r\n};\r\n\r\nexport default TestEndContainer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js",["463","464"],"\r\nimport { useState } from \"react\";\r\nimport Main from \"../../components/main/Main\";\r\nimport Background from \"../../components/main/Main\";\r\n\r\nconst MainContainer = () => {\r\n\r\n  return <Background />;\r\n};\r\n\r\nexport default MainContainer;\r\n\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js",["465"],"import React from 'react'\r\nimport TestBackground from '../../components/test/TestBackground'\r\nimport Test from '../../components/test/TestBackground'\r\n\r\nfunction TestContainer({ children, match }) {\r\n  return (\r\n    <>\r\n      <TestBackground children={children} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestContainer\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js",["466","467","468"],"import BlankTop from \"../../../components/common/BlankTop\";\r\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\r\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\r\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\r\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\r\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\r\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\r\nimport TopInner from \"../../../components/testmaking/TopInner\";\r\nimport InputCategoryContainer from \"../InputCategoryContainer\";\r\nimport InputsWrap from '../../../components/testmaking/questionlist/input/InputsWrap';\r\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\r\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\r\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\r\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\r\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\r\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\r\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\r\nimport PlayerContainer from \"../player/PlayerContainer\";\r\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\r\nimport StartTime from \"../../../components/testmaking/questionlist/player/StartTime\";\r\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\r\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\r\nimport React,{useEffect, useState} from 'react';\r\n\r\nexport let player0;\r\nexport let player1;\r\n\r\nconst TestMakingFormContainer = () => {\r\n    const [questions,setQuestions] = useState([{\r\n        questionNumber : 1,\r\n        questionYoutubeURL : \"\",\r\n        questionStartsfrom : \"\",\r\n        hint : \"\",\r\n        answer: \"\",\r\n        answerYoutubeURL: \"\"\r\n    }]);\r\n\r\n    const changeText = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = value;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n\r\n    }\r\n    const addQuestions = () => {\r\n        let data = {\r\n            questionNumber : questions.length +1,\r\n            questionYoutubeURL : \"\",\r\n            questionStartsfrom : \"\",\r\n            hint : \"\",\r\n            answer: \"\",\r\n            answerYoutubeURL: \"\"\r\n\r\n        };\r\n        console.log(questions)\r\n        setQuestions([...questions, data]);\r\n    }\r\n\r\n    const deleteQuestions = questionNumber => () => {\r\n        let tempQuestions = questions.filter(question => {\r\n            return question.questionNumber !== questionNumber + 1;\r\n        })\r\n\r\n        setQuestions(tempQuestions);\r\n    }\r\n\r\n    const getYoutubeId = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        console.log(name,value)\r\n        if(value)  {\r\n            const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n            const matchs = value.match(regExp);\r\n            console.log(matchs);\r\n            if(value!==''&&matchs&&matchs[7].length===11){\r\n\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = matchs[7];\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n            }else{\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = \"\";\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const script = document.createElement('script');\r\n    //     script.src = 'https://www.youtube.com/iframe_api';\r\n    //     const firstScriptTag = document.getElementsByTagName('script')[0];\r\n    //       firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n        \r\n    //     window.onYouTubeIframeAPIReady = () => {\r\n    //       console.error(questionUrl);\r\n    //       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    //       player0 = new window.YT.Player(`player0`, {\r\n    //         height: \"1000\",\r\n    //         width: \"1000\",\r\n    //         videoId: questionUrl,\r\n    //         host: 'https://www.youtube.com',\r\n    //         playerVars: {\r\n    //           autoplay: 0,\r\n    //           controls: 0,\r\n    //           fs: 0,\r\n    //           showinfo:0,\r\n    //           enablejsapi: 1,\r\n    //           origin:'http://localhost:3000'\r\n    //         },\r\n    //         events: {\r\n    //           onReady: onReadyAPI,\r\n    //           onStateChange: playerState,\r\n    //         },\r\n    //       });\r\n    //       console.error('player0', player);\r\n    //     // if (firstScriptTag.id === 'www-widgetapi-script') window.onYouTubeIframeAPIReady();\r\n    //     setTimeout(() => {\r\n    //       const a = document.getElementsByTagName('iframe')[0];\r\n    //       a.src = 'https://www.youtube.com/embed/F9Ex1ESEWN4';\r\n    //     }, 1000)\r\n    //     }\r\n    //     return () => {\r\n    //       // script.remove();\r\n    //       clearInterval(checkCurrentTime);\r\n    //     };\r\n        \r\n    //   }, []);\r\n    \r\n\r\n    return(\r\n        <form>\r\n        <div id='player0'></div>\r\n        <div id='player1'></div>\r\n\r\n            <TopInner>\r\n                <table></table>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='제목'/>\r\n                    <TopInput inputName='title' inputPlaceholder='최대 20자' inputMaxLength='20' />\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='내용'/>\r\n                    <TopInput inputName='description' inputPlaceholder='최대 40자' inputMaxLength='40'/>\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='카테고리'/>\r\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요'/>\r\n                </TopInputWrap>\r\n            </TopInner>\r\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\r\n            <QuestionListTitle/>\r\n\r\n            {questions.length !== 0 && (\r\n            <QuestionListInner>\r\n                {questions.map((d,i)=>(\r\n                 <div key={i}>\r\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\r\n                    <InputsWrap >\r\n                        <QuestionListLeftWrap >\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text={\"Qustion00\"+(i+1)} />\r\n                                <QuestionListInput inputName='answer' inputPlaceholder='정답을 적어주세요'  changeText={changeText(i)} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListHintWrap>\r\n                                <QuestionListInputText text='Hint' />\r\n                                <QuestionListInput inputName='hint' inputPlaceholder='힌트를 자유롭게 적어주세요'  changeText={changeText(i)} />\r\n                            </QuestionListHintWrap>\r\n                        </QuestionListLeftWrap>\r\n\r\n                        <QuestionListRightWrap>\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\r\n\r\n                           {questions[i].questionYoutubeURL ? \r\n                            <PlayerWrap>\r\n                                <PlayerContainer questionUrl={questions[i].questionYoutubeURL} player={player0}/>\r\n                                <StartTime  changeText={changeText(i)}/>\r\n                            </PlayerWrap>\r\n                            : \"\"}\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  changeText={getYoutubeId(i)} />\r\n                            </QuestionListInputWrap>\r\n\r\n                        </QuestionListRightWrap>\r\n                    </InputsWrap>\r\n                </div>\r\n                ))}\r\n\r\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\r\n                <QuestionLustPlusButton addQuestions={addQuestions} />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\r\n                <QuestionSaveButton />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\r\n                <table></table>\r\n            </QuestionListInner>     \r\n\r\n               \r\n            )}\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default TestMakingFormContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js",["469"],"import { useState } from 'react';\r\nimport InputCategory from '../../components/testmaking/Input/InputCategory';\r\n\r\n\r\n\r\n\r\n\r\nconst InputCategoryContainer = ({inputName,inputPlaceholder}) => {\r\n\r\n    const [isCategoryVisible, setIsCategoryVisible] = useState(false);\r\n    const [chooseCategory, setChooseCategory] = useState()\r\n\r\n    const categoryVisibleHandler = () => {\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n    }\r\n\r\n    const chooseCategoryHandler = (e) => {\r\n        const categoryValue = e.target.childNodes[0].data;\r\n        setChooseCategory(categoryValue)\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n\r\n    }\r\n\r\n    return (\r\n        <InputCategory \r\n                isCategoryVisible={isCategoryVisible} \r\n                categoryVisibleHandler={categoryVisibleHandler}\r\n                inputName={inputName}\r\n                inputPlaceholder={inputPlaceholder}\r\n                chooseCategoryHandler={chooseCategoryHandler}\r\n                chooseCategory={chooseCategory}\r\n        />\r\n        )\r\n\r\n\r\n\r\n}\r\n\r\nexport default InputCategoryContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js",["470","471"],"import Background from \"../../components/main/Bg\";\r\nimport Header from \"../../components/main/header/Header\";\r\nimport Banner from \"../main/banner/Banner\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport Category from \"../main/category/Category\";\r\nimport CardList from \"../main/test_card/TestCard\";\r\nimport Footer from \"../main/footer/Footer\";\r\nimport BlankTop from \"../common/BlankTop\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Background>\r\n      <Header />\r\n      <BlankTop DesktopMargin={11} TabletMargin={12} MobileMargin={8.8} />\r\n      <Banner />\r\n      <BlankTop DesktopMargin={8} TabletMargin={5.5} MobileMargin={7.4} />\r\n      <SearchInput />\r\n      <BlankTop DesktopMargin={9.7} TabletMargin={7.3} MobileMargin={7.3} />\r\n      <Category />\r\n      <CardList />\r\n      <Footer />\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js",["472","473"],"import Background from \"../test_end/Bg\";\r\nimport Header from \"../test_end/Header\";\r\nimport BlankTop from \"../common/BlankTop\";\r\nimport LogoTitle from \"./LogoTitle\";\r\nimport TestTitle from \"./TestTitle\";\r\nimport ThankYouText from \"./ThankYouText\";\r\nimport Divider from \"../common/Divider\";\r\nimport TestEndDivider from \"../test_end/TestEndDivider\";\r\nimport RecommendText from \"./RecommendText\";\r\nimport RecommendCardList from \"./RecommendCardList\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TestEndBlankTop from \"../test_end/TestEndBlankTop\";\r\n\r\nconst TestEnd = ({ match, recommendList, title }) => {\r\n  return (\r\n    <Background>\r\n      <Header />\r\n      <TestEndBlankTop\r\n        DesktopMargin={7.5}\r\n        TabletMargin={16.4}\r\n        MobileMargin={4.7}\r\n        SmallMobileMargin={5.6}\r\n      />\r\n      <LogoTitle />\r\n      <TestEndBlankTop\r\n        DesktopMargin={3.1}\r\n        TabletMargin={2.8}\r\n        MobileMargin={2.5}\r\n        SmallMobileMargin={1}\r\n      />\r\n      <TestTitle title={title[\"data\"][0][\"testTitle\"]} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={1.2}\r\n        TabletMargin={1.2}\r\n        MobileMargin={1.0}\r\n      />\r\n      <ThankYouText />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.6}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.3}\r\n        SmallMobileMargin={2.7}\r\n      />\r\n      <TestEndDivider DesktopLength={6} TabletLength={6} MobileLength={0} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.5}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.5}\r\n        SmallMobileMargin={2.7}\r\n      />\r\n      <RecommendText />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.4}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.5}\r\n        SmallMobileMargin={1.9}\r\n      />\r\n      <RecommendCardList recommendList={recommendList} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={2.8}\r\n        TabletMargin={3.7}\r\n        MobileMargin={3}\r\n        SmallMobileMargin={3}\r\n      />\r\n      <>\r\n        <Link to=\"/\">\r\n          <Wrap>\r\n            <BackBtn />\r\n          </Wrap>\r\n        </Link>\r\n      </>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1700ms 1;\r\n  animation-timing-function: ease-in;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 34.9rem;\r\n  height: 4.4rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 10px #60ffcd;\r\n  background: linear-gradient(90.66deg, #60ffcd -8.61%, #60f5ff 112.74%);\r\n\r\n  @keyframes fadeOut {\r\n    from {\r\n      opacity: 1;\r\n    }\r\n    to {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    animation: fadeOut 500ms;\r\n  }\r\n\r\n  &:after {\r\n    content: \"메인으로 돌아가기\";\r\n    font-size: 1.6rem;\r\n    font-weight: 700;\r\n    color: #1a465e;\r\n  }\r\n\r\n  @media (max-width: 1089px) {\r\n    width: 25.5rem;\r\n    height: 4.4rem;\r\n    box-shadow: 0 0 9px #60ffcd;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 20.6rem;\r\n    height: 3.8rem;\r\n    box-shadow: 0 0 9px #60ffcd;\r\n\r\n    &:after {\r\n      content: \"메인으로\";\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TestEnd;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js",["474","475"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport recordImg from '../../../assets/images/test/graphic_black_cd.jpg'\r\nimport cdImg from '../../../assets/images/test/blackcd_house-1.jpg'\r\nimport defaultCdImg from '../../../assets/images/test/blackcd_house.jpg'\r\nimport BlankTop from '../../common/BlankTop'\r\nimport logo from '../../../assets/images/test/image_watermark-1.jpg'\r\nimport TextComponent from '../../common/test/TextComponent'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ProgressBar from '../testcd/ProgressBar'\r\nimport ModalPage from '../../../pages/modal/ModalPage'\r\nimport QuizHeader from '../../common/QuizHeader'\r\n\r\nconst TestCd = ({ newList, match }) => {\r\n  //state정의\r\n  const [hintText, setHintText] = useState('힌트 보기')\r\n  const [buttonText, setButtonText] = useState('정답 보기') //클릭한 버튼명(버튼명으로 현재 상태비교)\r\n  const [rotateSecond, setRotateSecond] = useState(0) //1초재생인지 3초재생인지 상태값(0일때는 애니메이션 없음)\r\n  const [recordInside, isRecordInside] = useState(false) //레코드판을 넣는 애니메이션 트리거\r\n  const [activeIndex, setActiveIndex] = useState(0) //현재 선택된 레코드판 index넘버\r\n  const [answer, setAnswer] = useState() //정답 text state\r\n  const [sound1Url, setSound1Url] = useState()\r\n  const [sound3Url, setSound3Url] = useState()\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [isHint, setIsHint] = useState(false)\r\n  const [modalIn, setModalIn] = useState(false)\r\n  const [modalOut, setModalOut] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    isRecordInside(false)\r\n    setButtonText('정답 보기')\r\n    setAnswer(undefined)\r\n    setSound1Url(newList[activeIndex].sound1URL)\r\n    setSound3Url(newList[activeIndex].sound3URL)\r\n  }, [activeIndex])\r\n\r\n  const openModal = () => {\r\n    setModalVisible(true)\r\n    setModalOut(false)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModalOut(true)\r\n    setModalVisible(false)\r\n  }\r\n\r\n  //다음문제 버튼 이벤트 정의\r\n  const handleHintButton = () => {\r\n    if (hintText === '힌트 보기') {\r\n      setIsHint(true)\r\n      setTimeout(() => {\r\n        setHintText(`${newList[activeIndex].hint}`)\r\n      }, 500)\r\n    } else if (hintText === '관련 영상 보기') {\r\n      setModalIn(true)\r\n      openModal()\r\n    }\r\n  }\r\n\r\n  const handleNextButton = () => {\r\n    //버튼 텍스트가 '정답보기' 일때 버튼명을 '다음문제'로 변경 후 레코드 집어넣는 트리거를true로 바꿔줌 //\r\n    if (buttonText === '정답 보기') {\r\n      isRecordInside(true)\r\n      setHintText('관련 영상 보기')\r\n\r\n      if (activeIndex + 1 < newList.length) {\r\n        setButtonText('다음 문제')\r\n        setAnswer(newList[activeIndex].answer)\r\n        setIsHint(false)\r\n      } else {\r\n        setAnswer(newList[activeIndex].answer)\r\n        setButtonText('테스트 완료')\r\n      }\r\n    } else if (buttonText === '다음 문제') {\r\n      //버튼 텍스트가 '다음문제'일때 선택된 레코드를 1증가하여 다음 레코드를 불러옴\r\n      setHintText('힌트 보기')\r\n      if (activeIndex + 1 < newList.length) {\r\n        setActiveIndex(activeIndex + 1)\r\n      }\r\n    } else if (buttonText === '테스트 완료') {\r\n      history.push(`/test/${match.params.id}/recommendation`)\r\n      console.log(history)\r\n    }\r\n  }\r\n\r\n  //레코드판 돌아가는 애니메이션 핸들러\r\n  const handleRotateAnimation = second => {\r\n    //레코드판 재생시간이 0초일때만 에니메이션 실행을 하여 마구 연타하였을때 애니메이션 꼬이는것을 방지\r\n    console.log(rotateSecond)\r\n    if (rotateSecond === 0) {\r\n      setRotateSecond(second)\r\n      //이곳에 사운드 재생\r\n      if (second === 1) {\r\n        // 1초 사운드\r\n        var audio = new Audio(sound1Url)\r\n        audio.play()\r\n        // setRotateSecond(0)\r\n      } else {\r\n        // 3초 사운드\r\n        var audio = new Audio(sound3Url)\r\n        audio.play()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table></table>\r\n      {modalVisible && (\r\n        <ModalPage\r\n          modalIn={modalIn}\r\n          modalOut={modalOut}\r\n          urlId={newList[activeIndex].answerYoutubeURL}\r\n          visible={modalVisible}\r\n          maskClosable={true}\r\n          closeModal={closeModal}\r\n        />\r\n      )}\r\n      <QuizHeader />\r\n      <BlankTop DesktopMargin=\"15\" TabletMargin=\"32\" MobileMargin=\"21\" />\r\n      <IconWrapper>\r\n        <MyIcon />\r\n      </IconWrapper>\r\n      <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n      <TitleWrapper>\r\n        <TextComponent\r\n          title={newList[activeIndex].testTitle}\r\n          DesktopLength=\"2\"\r\n          TabletLength=\"2\"\r\n          MobileLength=\"1.2\"\r\n        />\r\n      </TitleWrapper>\r\n      <BlankTop DesktopMargin=\"4.2\" TabletMargin=\"5\" MobileMargin=\"9\" />\r\n      <Container>\r\n        <ContentContainer>\r\n          <ProgressBar percentual={(100 / newList.length) * activeIndex} />\r\n          {newList.map((item, index) => {\r\n            return (\r\n              <SwiperContainer\r\n                key={index}\r\n                activeIndex={activeIndex}\r\n                thisIndex={index}\r\n              >\r\n                <CaseImg\r\n                  src={activeIndex === index ? cdImg : defaultCdImg}\r\n                  // src={cdImg}\r\n                />\r\n                {index === activeIndex && (\r\n                  <>\r\n                    <AnswerText inside={recordInside}>\r\n                      {answer ?? '정답은?'}\r\n                    </AnswerText>\r\n\r\n                    <RecordWrapper inside={recordInside}>\r\n                      <RecordImg\r\n                        src={recordImg}\r\n                        rotateSecond={rotateSecond}\r\n                        onAnimationEnd={() => setRotateSecond(0)}\r\n                        // 해당요소의 애니메이션이 종료됐을때 레코드판 돌리는 재생시간을 다시 0초로 초기화\r\n                        // inside={recordInside}\r\n                        //레코드가 들어가는 애니메이션을위한 트리거 변수\r\n                      />\r\n                    </RecordWrapper>\r\n                  </>\r\n                )}\r\n              </SwiperContainer>\r\n            )\r\n          })}\r\n        </ContentContainer>\r\n      </Container>\r\n      <BlankTop DesktopMargin=\"1\" TabletMargin=\"5\" MobileMargin=\"10\" />\r\n\r\n      <ButtonContainer>\r\n        <RowContainer>\r\n          <ListenButtonWrapper>\r\n            <ListenButtonStyle onClick={() => handleRotateAnimation(1)}>\r\n              1초 듣기\r\n            </ListenButtonStyle>\r\n            <ListenButtonDisinguish>/</ListenButtonDisinguish>\r\n            <ListenButtonStyle onClick={() => handleRotateAnimation(3)}>\r\n              3초 듣기\r\n            </ListenButtonStyle>\r\n          </ListenButtonWrapper>\r\n        </RowContainer>\r\n        <BlankTop DesktopMargin=\"3\" TabletMargin=\"1\" MobileMargin=\"3\" />\r\n\r\n        <BigButtonWrapper>\r\n          <HintButtonStyle onClick={handleHintButton} hint={isHint}>\r\n            {hintText}\r\n          </HintButtonStyle>\r\n          <AnswerButtonStyle onClick={handleNextButton}>\r\n            {buttonText}\r\n          </AnswerButtonStyle>\r\n        </BigButtonWrapper>\r\n      </ButtonContainer>\r\n    </>\r\n  )\r\n}\r\n\r\n/**키프레임 시작 */\r\n\r\nconst RecordWrapper = styled.div`\r\n  z-index: 1;\r\n  margin-left: -26%;\r\n  animation-fill-mode: forwards;\r\n  @media only screen and (max-width: 1024px) {\r\n    margin-left: -26%;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    /* width: 18.5rem; */\r\n  }\r\n  ${props =>\r\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${RecordInside};\r\n    `}\r\n`\r\n\r\nconst HintFade = keyframes`\r\n  0% { \r\n   opacity: 1;\r\n  }\r\n  50% {\r\n   width: 0;\r\n   opacity: 0;\r\n  }\r\n  100% {\r\n  opacity: 1;\r\n  }\r\n\r\n`\r\n\r\n//1초 레코드판 돌리는 키프레임\r\nconst Rotate1Record = keyframes`\r\n  0% {\r\n    transform: rotate( 0deg )\r\n  }\r\n  100% {\r\n    transform: rotate( 360deg )\r\n  }\r\n`\r\n//3초 레코드판 돌리는 키프레임\r\nconst Rotate3Record = keyframes`\r\n  0% {\r\n    transform: rotate( 0deg )\r\n  }\r\n  100% {\r\n    transform: rotate( 1080deg )\r\n  }\r\n`\r\n//레코드판을 집어넣는 키프레임\r\nconst RecordInside = keyframes`\r\n  0% {\r\n    margin-left: -25%\r\n  }\r\n  100% {\r\n    margin-left: -50%\r\n  }\r\n  `\r\n\r\nconst TextInside = keyframes`\r\n0% {\r\n  margin-left: -35%\r\n}\r\n100% {\r\n  \r\n  margin-left: 0%;\r\n}\r\n`\r\n\r\n//신규 레코드판이 선택될때 나오는 애니메이션 키프레임\r\nconst ActiveAnimation = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(50%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\nconst ActiveAnimation1024 = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(40%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\nconst ActiveAnimation768 = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(50%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\n\r\n//레코드판이 왼쪽으로 들어갈때 나오는 애니메이션 키프레임\r\nconst UnActiveAnimation = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-65%) scale(0.6);\r\n}\r\n`\r\n\r\nconst UnActiveAnimation1024 = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-68%) scale(0.7);\r\n}\r\n`\r\n\r\nconst UnActiveAnimation768 = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-130%) scale(1);\r\n}\r\n`\r\n/* 키프레임 종료 */\r\n\r\n/* Start Logo */\r\nconst IconWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst MyIcon = styled.img`\r\n  width: 19rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 19rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 18.5rem;\r\n  }\r\n`\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo,\r\n}\r\n/* End Logo */\r\n\r\n/* Start Title  */\r\nconst TitleWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n`\r\n/* End Title */\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: relative;\r\n  display: flex;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 41rem;\r\n  padding-right: 11rem;\r\n  // 1920 기준\u001b\r\n  @media only screen and (max-width: 1024px) {\r\n    height: 38rem;\r\n    padding-right: 8rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    height: 26rem;\r\n    padding-left: 5rem;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    height: 26rem;\r\n    padding-left: 0rem;\r\n  }\r\n`\r\nconst AnswerText = styled.p`\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: #030f2c;\r\n  position: absolute;\r\n  z-index: 10;\r\n  padding-left: 40px;\r\n  object-fit: contain;\r\n  margin-left: -35%;\r\n  animation-fill-mode: forwards;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1.3rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.1rem;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    /* margin-left: -15%; */\r\n  }\r\n  ${props =>\r\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${TextInside};\r\n    `}\r\n`\r\n\r\nconst SwiperContainer = styled.div`\r\n  /* border: 1px solid red; */\r\n  & > img {\r\n    height: 100%;\r\n  }\r\n  display: flex;\r\n  height: 100%;\r\n  position: absolute;\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation-fill-mode: forwards;\r\n  margin-right: 10rem;\r\n  @media only screen and (max-width: 1024px) {\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n  }\r\n  ${({ activeIndex, thisIndex }) => {\r\n    // 선택된 index와 각요소의 index를 비교해서 애니메이션과 위치를 처리해줌\r\n    const compare = Math.abs(activeIndex - thisIndex) //index비교 절대값\r\n    if (activeIndex === thisIndex) {\r\n      //선택된index와 현재요소의 값이 같다면(즉 active상태의 요소일때) 오른쪽에서 가운데로 나오는 애니메이션을 넣어줌\r\n      return css`\r\n        animation-timing-function: ease-in-out;\r\n        animation-duration: 0.5s;\r\n        animation-iteration-count: 1;\r\n        animation-name: ${ActiveAnimation};\r\n        @media only screen and (max-width: 1024px) {\r\n          animation-name: ${ActiveAnimation1024};\r\n        }\r\n        @media only screen and (max-width: 768px) {\r\n          animation-name: ${ActiveAnimation768};\r\n        }\r\n        z-index: 10;\r\n      `\r\n    } else if (activeIndex > thisIndex) {\r\n      //선택된index가 현재요소의 값보다 크다면(즉 active상태의 요소보다 왼쪽에 있을때)\r\n      if (compare === 1) {\r\n        //비교값이 1일때(즉 현재 active상태였다가 왼쪽으로 들어가야 하는 상태) 왼쪽으로 슬라이드되는 애니메이션을 넣어줌\r\n        return css`\r\n          animation-timing-function: ease-in-out;\r\n          animation-duration: 0.5s;\r\n          animation-iteration-count: 1;\r\n          animation-name: ${UnActiveAnimation};\r\n          @media only screen and (max-width: 1024px) {\r\n            animation-name: ${UnActiveAnimation1024};\r\n          }\r\n          @media only screen and (max-width: 768px) {\r\n            animation-name: ${UnActiveAnimation768};\r\n          }\r\n        `\r\n      }\r\n      //그이외 그냥 위치만 잡아줌\r\n      return css`\r\n        opacity: 0.5;\r\n        transform: translateX(-65%) scale(0.6);\r\n        @media only screen and (max-width: 1024px) {\r\n          transform: translateX(-68%) scale(0.7);\r\n        }\r\n        @media only screen and (max-width: 768px) {\r\n          transform: translateX(-130%) scale(1);\r\n        }\r\n      `\r\n    } else if (activeIndex < thisIndex) {\r\n      //선택된index가 현재요소의 값보다 작다면(즉 active상태의 요소보다 오른쪽에 있을때)위치만 잡아줌\r\n      return `\r\n      opacity: .5;\r\n      width: 40rem;\r\n      overflow: hidden;        \r\n      transform: translateX(101%) scale(0.6);\r\n      @media only screen and (max-width: 1024px) {\r\n        transform: translateX(89%) scale(0.68);\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        transform: translateX(100%) scale(0.7);\r\n      }\r\n    `\r\n    }\r\n  }}\r\n`\r\n\r\nconst RecordImg = styled.img`\r\n  object-fit: contain;\r\n  animation-fill-mode: forwards;\r\n\r\n  ${props =>\r\n    props.rotateSecond > 0 && //레코드판을 돌리는 css애니메이션 추가 0초 초과일때만 작동하도록 한다.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: ${props.rotateSecond}s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${props.rotateSecond === 1\r\n        ? Rotate1Record\r\n        : Rotate3Record}; //1초일때 3초일때 분기해서 키프레임을 넣어줌\r\n    `}\r\n  width:45rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 40rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 26rem;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    width: 28rem;\r\n  }\r\n`\r\n\r\nconst CaseImg = styled.img`\r\n  overflow: hidden;\r\n  position: relative;\r\n  object-fit: contain;\r\n  z-index: 2;\r\n  margin-left: 30%;\r\n  @media only screen and (max-width: 1024px) {\r\n    margin-left: 30%;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    margin-left: 30%;\r\n  }\r\n  @media only screen and (max-width: 375px) {\r\n    margin-left: 25%;\r\n  }\r\n`\r\n\r\n/* Start button */\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nconst RowContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n`\r\n\r\nconst ListenButtonWrapper = styled.div`\r\n  width: 100%;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ListenButtonDisinguish = styled.span`\r\n  color: #fff;\r\n  font-weight: 300;\r\n  font-size: 4rem;\r\n  text-align: center;\r\n  padding: 0 6rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 3.2rem;\r\n    padding: 0 6rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 3rem;\r\n    padding: 0 6rem;\r\n  }\r\n`\r\n\r\nconst ListenButtonStyle = styled.button`\r\n  color: #ffffff;\r\n  font-size: 1.8rem;\r\n  font-family: 'Nanum Gothic';\r\n  font-weight: 100;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n  padding: 0px;\r\n  font-size: 1.5rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1.3rem;\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.2rem;\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #60ffc6;\r\n  }\r\n`\r\n\r\nconst BigButtonWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst HintButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n  color: #fff;\r\n  border: 1px solid #ffffff;\r\n  outline: none;\r\n  background: none;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  margin-bottom: 2rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  &:hover {\r\n    color: #49fff2;\r\n    transition: color 0.1s ease-in-out;\r\n  }\r\n  ${props =>\r\n    props.hint &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.6s;\r\n      animation-name: ${HintFade};\r\n    `}\r\n`\r\n\r\nconst AnswerButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  color: #030f2c;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0px 0px 21px -6px #49fff2;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n  }\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(73, 255, 242, 1) 0%,\r\n    rgba(73, 255, 233, 1) 35%,\r\n    rgba(56, 245, 238, 1) 66%,\r\n    rgba(0, 212, 255, 1) 100%\r\n  );\r\n  &:hover {\r\n    transition: box-shadow 0.5s ease-in-out;\r\n    box-shadow: 0px 0px 40px -6px #49fff2;\r\n  }\r\n`\r\n/* End button */\r\nexport default TestCd\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js",["476"],"import React, { useState, useEffect } from \"react\";\r\nimport Player from \"../../../components/testmaking/questionlist/player/Player\";\r\n\r\n\r\nconst PlayerContainer = ({questionUrl,player}) => {\r\n  const [isPlaying, setPlaying] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\r\n  const [totalTime, setTotalTime] = useState(\"0:00\");\r\n  const [mouseDragX, setMouseDragX] = useState(false);\r\n  const [activeButton, setactiveButton] = useState(false);\r\n  const [containerWidth,setContainerWidth] = useState(307);\r\n  let checkCurrentTime;\r\n\r\n  const playerState = (e) => {\r\n    console.log(e)\r\n    console.log(e.data);\r\n    console.log(isLoading)\r\n    if (e.data === 1) {\r\n      setPlaying(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying(false);\r\n    }\r\n  };\r\n\r\n  const transTime = (seconds) => {\r\n    if (!seconds) {\r\n      console.log(seconds);\r\n      return;\r\n    }\r\n    const hour = parseInt(seconds / 3600);\r\n    const min = parseInt((seconds % 3600) / 60);\r\n    const sec = seconds % 60;\r\n\r\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\r\n      sec < 10 ? \"0\" + String(sec) : sec\r\n    }`;\r\n  };\r\n\r\n  const setTime = () => {\r\n    setCurrentTime(transTime(player.getCurrentTime().toFixed()));\r\n  };\r\n\r\n  const onReadyAPI = () => {\r\n    setLoading(true);\r\n    setPlaying(false);\r\n    checkCurrentTime = setInterval(setTime, 1000);\r\n    setTotalTime(() => transTime(player.getDuration()));\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    console.log(e)\r\n    const nowFraction = e.offsetX / containerWidth;\r\n    player.seekTo(player.getDuration() * nowFraction, true);\r\n  };\r\n\r\n  const drag = () => {\r\n    document.addEventListener(\"mousemove\", dragHandler);\r\n    document.addEventListener(\"mouseup\", () => {\r\n      document.removeEventListener(\"mousemove\", dragHandler);\r\n      setMouseDragX(false);\r\n    });\r\n  };\r\n\r\n  const playHandler = () => {\r\n    setPlaying(!isPlaying);\r\n  } \r\n  \r\n  const backClick = () => {\r\n      if(isLoading)player.seekTo(player.getCurrentTime() - 10, true)\r\n\r\n  }\r\n  const clickActiveButtonOver = () => {\r\n     setactiveButton(true)\r\n  }\r\n  const clickActiveButtonOut = () => {\r\n    setactiveButton(false)\r\n}\r\n\r\n  useEffect(() => {\r\n    console.log(questionUrl);\r\n    const script = document.createElement('script');\r\n    script.src = 'https://www.youtube.com/iframe_api';\r\n    var firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n\r\n      console.log(window);\r\n\r\n    if (window.YT) {\r\n      console.log(window.YT);\r\n      console.log(questionUrl);\r\n      window.onYouTubeIframeAPIReady = () => {\r\n        player = new window.YT.Player(`player_${questionUrl}`, {\r\n          height: \"110\",\r\n          width: \"110\",\r\n          videoId: questionUrl,\r\n          host: 'https://www.youtube.com',\r\n          playerVars: {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            fs: 0,\r\n            showinfo:0,\r\n            enablejsapi: 1,\r\n            origin:'http://localhost:3001'\r\n          },\r\n          events: {\r\n            onReady: onReadyAPI,\r\n            onStateChange: playerState,\r\n          },\r\n        });\r\n      };\r\n\r\n    } else {\r\n      console.log(\"can not load player\");\r\n    }\r\n    return () => {\r\n      clearInterval(checkCurrentTime);\r\n    };\r\n  },[questionUrl]);\r\n\r\n  if (isLoading) {\r\n    if (isPlaying) {\r\n      player?.playVideo();\r\n    } else {\r\n      player?.pauseVideo();\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <Player \r\n        isPlaying={isPlaying}\r\n        isLoading={isLoading}\r\n        currentTime={currentTime}\r\n        totalTime={totalTime}\r\n        mouseDragX={mouseDragX}\r\n        activeButton={activeButton}\r\n        containerWidth={containerWidth}\r\n        player={player}\r\n        drag={drag}\r\n        playHandler={playHandler}\r\n        backClick={backClick}\r\n        clickActiveButtonOver={clickActiveButtonOver}\r\n        clickActiveButtonOut={clickActiveButtonOut}\r\n        questionUrl={questionUrl}\r\n            />\r\n  );\r\n};\r\nexport default PlayerContainer;\r\n\r\n\r\n\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js",["477"],"import styled from \"styled-components\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport Divider from \"../../common/Divider\";\r\nimport DesktopMotoText from \"../../../assets/desktop/image_moto.png\";\r\nimport TabletMotoText from \"../../../assets/tablet/image_moto.png\";\r\nimport MobileMotoText from \"../../../assets/mobile/mobile_text_moto.png\";\r\nimport DesktopWaterMark from \"../../../assets/desktop/image_watermark.png\";\r\nimport TabletWaterMark from \"../../../assets/tablet/image_watermark.png\";\r\nimport MobileWaterMark from \"../../../assets/mobile/mobile_image_watermark.png\";\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MotoText = styled.div`\r\n  width: 16.4rem;\r\n  height: 1.6rem;\r\n  background: url(${DesktopMotoText});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  @media (max-width: 1024px) {\r\n    width: 14.5rem;\r\n    height: 1.3rem;\r\n    background: url(${TabletMotoText});\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 14.3rem;\r\n    height: 1.3rem;\r\n    background: url(${MobileMotoText});\r\n  }\r\n`;\r\n\r\nconst WaterMark = styled.div`\r\n  width: 37.5rem;\r\n  height: 6.5rem;\r\n  background: url(${DesktopWaterMark});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  @media (max-width: 1024px) {\r\n    width: 33.2rem;\r\n    height: 5.8rem;\r\n    background: url(${TabletWaterMark});\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 32.3rem;\r\n    height: 4.7rem;\r\n    background: url(${MobileWaterMark});\r\n  }\r\n`;\r\n\r\nconst TextIntroduction = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.6rem;\r\n  color: #ffffff;\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Plan = styled.div`\r\n  width: 8.7rem;\r\n  height: 10.2rem;\r\n`;\r\n\r\nconst Design = styled.div`\r\n  width: 11.7rem;\r\n  height: 13.4rem;\r\n`;\r\n\r\nconst Web = styled.div`\r\n  width: 7.2rem;\r\n  height: 16.6rem;\r\n`;\r\n\r\nconst Server = styled.div`\r\n  width: 8.7rem;\r\n  height: 10.3rem;\r\n`;\r\n\r\nconst PartWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 4.6rem;\r\n`;\r\n\r\nconst PartTitle = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst NameTitle = styled.div`\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Member = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 84.6rem;\r\n  height: 17rem;\r\n  margin: 0 auto;\r\n  @media (max-width: 1024px) {\r\n    width: 59.1rem;\r\n    height: 16.6rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 54.3rem;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    // Desktop은 중간 구분선 없이 BlankTop만 191px 있음 주의\r\n    <>\r\n      <BlankTop DesktopMargin={19.1} TabletMargin={6.2} MobileMargin={5.9} />\r\n      <Divider DesktopLength={0} TabletLength={7.1} MobileLength={6.2} />\r\n      <BlankTop DesktopMargin={0} TabletMargin={5.3} MobileMargin={6} />\r\n      <Wrap>\r\n        <MotoText />\r\n      </Wrap>\r\n      <BlankTop DesktopMargin={4.0} TabletMargin={3.6} MobileMargin={1.7} />\r\n      <Wrap>\r\n        <WaterMark />\r\n      </Wrap>\r\n      <BlankTop DesktopMargin={7.4} TabletMargin={5.3} MobileMargin={4.6} />\r\n      <TextIntroduction>소리로 하는 모든 즐거움을 지향합니다.</TextIntroduction>\r\n      <br />\r\n      <TextIntroduction>\r\n        사운드피커를 통해 함께하는 사람들과의 즐거운 시간을 경험해보세요.\r\n      </TextIntroduction>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <TextIntroduction>contact us. soundpickerrr@gmail.com</TextIntroduction>\r\n      <BlankTop DesktopMargin={17.6} TabletMargin={10.6} MobileMargin={12.5} />\r\n      <Member>\r\n        <Plan>\r\n          <PartWrap>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n            <PartTitle>기획</PartTitle>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n          </PartWrap>\r\n          <NameTitle>권상호</NameTitle>\r\n          <NameTitle>신지훈</NameTitle>\r\n        </Plan>\r\n        <Design>\r\n          <PartWrap>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n            <PartTitle>디자인</PartTitle>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n          </PartWrap>\r\n          <NameTitle>정아린</NameTitle>\r\n          <NameTitle>최혜린</NameTitle>\r\n          <NameTitle>김동우</NameTitle>\r\n        </Design>\r\n        <Web>\r\n          <PartWrap>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n            <PartTitle>웹</PartTitle>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n          </PartWrap>\r\n          <NameTitle>정재현</NameTitle>\r\n          <NameTitle>이재훈</NameTitle>\r\n          <NameTitle>정아연</NameTitle>\r\n          <NameTitle>김승미</NameTitle>\r\n        </Web>\r\n        <Server>\r\n          <PartWrap>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n            <PartTitle>서버</PartTitle>\r\n            <Divider DesktopLength={2} TabletLength={2} MobileLength={2} />\r\n          </PartWrap>\r\n          <NameTitle>강준우</NameTitle>\r\n          <NameTitle>홍혜림</NameTitle>\r\n        </Server>\r\n      </Member>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js",["478","479"],"import styled from \"styled-components\";\r\n\r\nconst HeaderDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100vw;\r\n  height: 9.4rem;\r\n  padding: 2.7rem 5.6rem;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 6.4rem;\r\n    padding: 1.2rem 1.8rem;\r\n  }\r\n`;\r\n\r\nconst LoginDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem\r\n  margin-right: 1.1rem;\r\n  cursor: pointer;\r\n  @media(max-width: 768px){\r\n    margin-right: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst Login = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst SignUpDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SignUp = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderDiv>\r\n      <LoginDiv>\r\n        <Login>로그인</Login>\r\n      </LoginDiv>\r\n      <SignUpDiv>\r\n        <SignUp>회원가입</SignUp>\r\n      </SignUpDiv>\r\n    </HeaderDiv>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js",["480","481","482","483"],"// 카드 크기 때문에 breakpoint - 1440(추가), 768 -> 828로 변경\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PlusDesktop from \"../../../assets/desktop/button_add.png\";\r\nimport PlusTablet from \"../../../assets/tablet/button_add.png\";\r\nimport PlusMobile from \"../../../assets/mobile/button_add.png\";\r\nimport PlusSmallMobile from \"../../../assets/small_mobile/button_add.png\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport PlayImg from \"../../../assets/play.png\";\r\nimport MainBlankTop from \"../MainBlankTop\";\r\n\r\nconst PlusBtn = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  height: 5.6rem;\r\n  position: relative;\r\n  background-image: url(${PlusDesktop});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-radius: 8px;\r\n  border: 3px solid rgba(96, 255, 218, 0.88);\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 4.8rem;\r\n    background-image: url(${PlusTablet});\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    height: 5.5rem;\r\n    background-image: url(${PlusMobile});\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 14.6rem;\r\n    height: 2.8rem;\r\n    border-width: 2px;\r\n    background-image: url(${PlusSmallMobile});\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  position: relative;\r\n  padding: 3.6rem 2.7rem 2rem 2.7rem;\r\n  border-radius: 10px;\r\n  border: 3px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  ${(props) =>\r\n    props.random >= 0 &&\r\n    props.random <= 4 &&\r\n    css`\r\n      border-right-color: rgba(96, 255, 218, 0.88);\r\n      border-left-color: rgba(94, 207, 255, 0.5);\r\n      background: linear-gradient(\r\n            to left,\r\n            rgba(96, 255, 218, 0.88) 0%,\r\n            rgba(94, 207, 255, 0.5) 100%\r\n          )\r\n          top/100% 3px,\r\n        linear-gradient(\r\n            to left,\r\n            rgba(96, 255, 218, 0.88) 0%,\r\n            rgba(94, 207, 255, 0.5) 100%\r\n          )\r\n          bottom/100% 3px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.random >= 5 &&\r\n    props.random <= 9 &&\r\n    css`\r\n      border-right-color: rgba(94, 207, 255, 0.5);\r\n      border-left-color: rgba(96, 255, 218, 0.88);\r\n      background: linear-gradient(\r\n            to left,\r\n            rgba(94, 207, 255, 0.5) 0%,\r\n            rgba(96, 255, 218, 0.88) 100%\r\n          )\r\n          top/100% 3px,\r\n        linear-gradient(\r\n            to left,\r\n            rgba(94, 207, 255, 0.5) 0%,\r\n            rgba(96, 255, 218, 0.88) 100%\r\n          )\r\n          bottom/100% 3px;\r\n    `}\r\n\r\n  background-repeat: no-repeat;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    border: 3px solid transparent;\r\n    border-bottom: 3px solid #071923;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(96, 255, 205, 0.38) 10%,\r\n      rgba(96, 255, 218, 0) 90%\r\n    );\r\n    @media (max-width: 568px) {\r\n      border-width: 2px;\r\n    }\r\n    transition: background 500ms ease-in-out;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    padding: 3.2rem 2.4rem 1.8rem 2.4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    padding: 3.4rem 2.4rem 2.9rem 2.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 14.6rem;\r\n    padding: 1.8rem 1.3rem 1.3rem;\r\n    border-width: 2px;\r\n    background-size: 100% 2px, 100% 2px;\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width: 23.6rem;\r\n  text-align: left;\r\n  font-size: 3.2rem;\r\n  font-weight: 700;\r\n  line-height: 4.65rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 20.8rem;\r\n    font-size: 2.8rem;\r\n    line-height: 4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 22.2rem;\r\n    font-size: 2.4rem;\r\n    line-height: 3.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 11.4rem;\r\n    font-size: 1.4rem;\r\n    line-height: 2.1rem;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 23.6rem;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 20.8rem;\r\n    line-height: 1.8rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 22.2rem;\r\n    line-height: 2.2rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 11.4rem;\r\n    font-size: 0.8rem;\r\n    line-height: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst TestNumber = styled.div`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Play = styled.span`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst PlayBtn = styled.div`\r\n  width: 2.8rem;\r\n  height: 2.8rem;\r\n  background-image: url(${PlayImg});\r\n  background-repeat: no-repeat;\r\n  background-position: right center;\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n  display: flex;\r\n  width: 6.6rem;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayBox = () => {\r\n  return (\r\n    <PlayBtnBox>\r\n      <Play>플레이</Play>\r\n      <PlayBtn />\r\n    </PlayBtnBox>\r\n  );\r\n};\r\n\r\nconst PlayFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapOne = styled.div`\r\n  //카드 테두리때문에\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapTwo = styled.div``;\r\n\r\nconst CardWrapThree = styled.div`\r\n  @media (max-width: 828px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardWrapFour = styled.div`\r\n  @media (max-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardListWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 123.2rem;\r\n  height: ${(props) => props.height}rem;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1700ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 92rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 81.6rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 57rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 30.4rem;\r\n  }\r\n`;\r\n\r\nconst GradientBox = styled.div`\r\n  width: 130.3rem;\r\n  height: 22.2rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: -3.55rem;\r\n  background: linear-gradient(to bottom, transparent, #071923);\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 95.7rem;\r\n    left: -1.85rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 86rem;\r\n    left: -2.2rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 60.1rem;\r\n    left: -1.55rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 32.2rem;\r\n    height: 19.8rem;\r\n    left: -0.9rem;\r\n  }\r\n`;\r\n\r\nconst LoadMoreBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60.7rem;\r\n  height: 6rem;\r\n  margin: 1.4rem auto 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  letter-spacing: 0.025em;\r\n  border-radius: 8px;\r\n  border: 2px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  border-right-color: #00fff0;\r\n  border-left-color: #00c2ff;\r\n  background: linear-gradient(to left, #00fff0 0%, #00c2ff 100%) top/100% 3px,\r\n    linear-gradient(to left, #00fff0 0%, #00c2ff 100%) bottom/100% 3px;\r\n  background-repeat: no-repeat;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 3500ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 29.6rem;\r\n    height: 6rem;\r\n    margin: 0.9rem auto 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 5.2rem;\r\n    margin: 1.5rem auto 0;\r\n    font-size: 1.8rem;\r\n    letter-spacing: 0;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 35.2rem;\r\n    height: 4.8rem;\r\n    margin: 0.7rem auto 0;\r\n    letter-spacing: 0.005em;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 30.4rem;\r\n    height: 3.6rem;\r\n    margin: 1.2rem auto 0;\r\n    font-size: 1.2rem;\r\n    border-width: 2px;\r\n    background-size: 100% 2px, 100% 2px;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CardList = ({ testList, testList2 }) => {\r\n  testList = Object.values(testList);\r\n\r\n  // testList와 testList2에 공통으로 있는 것만 리턴\r\n  let finalList = [];\r\n  testList.forEach((item) => {\r\n    testList2.forEach((item2) => {\r\n      if (\r\n        item.title.toLowerCase().includes(item2.title.toLowerCase()) &&\r\n        item.description.toLowerCase().includes(item2.description.toLowerCase())\r\n      ) {\r\n        finalList.push(item2);\r\n      }\r\n    });\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const [count, setCount] = useState(2);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const divideNum = width > 1440 ? 4 : width > 828 ? 3 : 2;\r\n  const divided = parseInt(finalList.length / divideNum);\r\n  const leftOver = finalList.length % divideNum;\r\n\r\n  let one = divided + leftOver,\r\n    two = divided,\r\n    three = divided,\r\n    four = divided;\r\n  if (leftOver === 2) {\r\n    two += 1;\r\n    one -= 1;\r\n  }\r\n  if (leftOver === 3) {\r\n    two += 1;\r\n    three += 1;\r\n    one -= 2;\r\n  }\r\n  if (leftOver === 4) {\r\n    two += 1;\r\n    three += 1;\r\n    four += 1;\r\n    one -= 3;\r\n  }\r\n\r\n  const defaultHeight = width > 568 ? 116.5 : 65;\r\n  const [height, setHeight] = useState(defaultHeight);\r\n  const countPlus = (e) => {\r\n    setCount(count + 1);\r\n    setHeight(count * defaultHeight);\r\n  };\r\n\r\n  const max = Math.max(one, two, three, four);\r\n\r\n  // divide는 한 번에 나오는 더보기 묶음 개수\r\n  const divide = width > 568 ? Math.round(max / 4) : Math.round(max / 3.5);\r\n\r\n  const maxHeight = width > 568 ? divide * 119 : divide * 65;\r\n\r\n  return (\r\n    <>\r\n      <CardListWrap height={height}>\r\n        <CardWrapOne>\r\n          <Link to=\"/testmaking\">\r\n            <PlusBtn random={Math.floor(Math.random() * 10)} />\r\n          </Link>\r\n          <BlankTop DesktopMargin={1.6} TabletMargin={1.6} MobileMargin={1.8} />\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index < one) {\r\n                return (\r\n                  <div key={index}>\r\n                    <Card\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      random={Math.floor(Math.random() * 10)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <MainBlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                        SmallMobileMargin={1.9}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <MainBlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                        SmallMobileMargin={1.9}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <MainBlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                      SmallMobileMargin={1.2}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapOne>\r\n        <CardWrapTwo>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 828) {\r\n                if (index >= one) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <MainBlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                        SmallMobileMargin={1.2}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one && index < one + two) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <MainBlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                        SmallMobileMargin={1.2}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapTwo>\r\n        <CardWrapThree>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 1440) {\r\n                if (index >= one + two) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one + two && index < one + two + three) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapThree>\r\n        <CardWrapFour>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index >= one + two + three) {\r\n                return (\r\n                  <div key={index}>\r\n                    <Card\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      random={Math.floor(Math.random() * 10)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapFour>\r\n        <GradientBox />\r\n      </CardListWrap>\r\n      {height < maxHeight && (\r\n        <LoadMoreBtn onClick={countPlus}>더보기</LoadMoreBtn>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js",["484","485"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 서버랑 통신해서 카테고리 이름 받아오기\r\nconst CategoryName = styled.span`\r\n  font-size: 1.28rem;\r\n  line-height: 1.035;\r\n  color: #dadada;\r\n  @media (max-width: 1440px) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (max-width: 1047px) {\r\n    font-size: 1.15rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.2rem;\r\n    line-height: 1.035;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst CategoryBtn = styled.button`\r\n  &:hover {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    box-shadow: 0 0 12px 0 #ffffff;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CategoryItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 6.9rem;\r\n  height: 5.3rem;\r\n  margin-right: 4.3rem;\r\n  &:nth-child(9) {\r\n    margin-right: 8rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    &:nth-child(7) {\r\n      margin-right: 1.4rem;\r\n    }\r\n  }\r\n  @media (max-width: 828px) {\r\n    &:nth-child(5) {\r\n      margin-right: 3.2rem;\r\n    }\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 6rem;\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst div = document.getElementsByClassName(\"cateBtn\");\r\n\r\nfunction handleClick(event) {\r\n  if (!event.target.classList.contains(\"cateAll\")) {\r\n    div[0].classList.remove(\"cateAll\");\r\n  }\r\n\r\n  if (event.target.classList[1] === \"clicked\") {\r\n    event.target.classList.remove(\"clicked\");\r\n  } else {\r\n    for (var i = 0; i < div.length; i++) {\r\n      /*\r\n      if (div[0].classList === \"cateAll\") {\r\n        console.log(div[0].classList);\r\n        div[0].classList.remove(\"cateAll\");\r\n      }\r\n      */\r\n      div[i].classList.remove(\"clicked\");\r\n    }\r\n\r\n    event.target.classList.add(\"clicked\");\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  for (var i = 0; i < div.length; i++) {\r\n    div[i].addEventListener(\"click\", handleClick);\r\n  }\r\n}\r\n\r\ninit();\r\n\r\nconst CategoryList = ({ categoryList, startNum, onClickDisplay }) => {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const categoryNum = width > 1024 ? 7 : width > 828 ? 5 : width > 568 ? 3 : 2;\r\n\r\n  return (\r\n    <>\r\n      {categoryList.map((item, index) => {\r\n        if (index === 9) {\r\n          return (\r\n            <CategoryItem key={index}>\r\n              <CategoryName>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn\r\n                className=\"cateBtn cateAll\"\r\n                onClick={(evt) => {\r\n                  onClickDisplay(item[\"id\"]);\r\n                  handleClick(evt);\r\n                }}\r\n              />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n      {categoryList.map((item, index) => {\r\n        if (index < startNum + categoryNum && index >= startNum) {\r\n          return (\r\n            <CategoryItem key={index}>\r\n              <CategoryName>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn\r\n                className=\"cateBtn\"\r\n                onClick={(evt) => {\r\n                  onClickDisplay(item[\"id\"]);\r\n                  handleClick(evt);\r\n                }}\r\n              />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js",["486"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Player.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Button.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\ScrollToTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js",["487"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport ham from '../../assets/images/hammenu/menu.jpg'\r\nimport arrow from '../../assets/images/hammenu/button_back.jpg'\r\nimport BlankTop from './BlankTop'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth } from '../../_actions/user_action'\r\n\r\nfunction QuizHeader() {\r\n  useEffect(() => window.scrollTo({ top: 0, left: 0, behavior: 'auto' }), []) // 처음 들어왔을때만 스크롤 맨위로 + 메뉴 열어도 위치 고정\r\n  const [clickOpenArrow, setClickOpenArrow] = useState(false) // 여는 트리거\r\n  const [clickCloseArrow, setClickCloseArrow] = useState(false) // 닫는 트리거 //\r\n\r\n  const history = useHistory()\r\n  const [myState, setMyState] = useState({ status: 'idle', member: null })\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(() => {\r\n      dispatch(auth()).then(response => {\r\n        setMyState({ status: 'pending' })\r\n        const data = response.payload.data\r\n        setTimeout(() => setMyState({ status: 'resolved', member: data }), 600)\r\n      })\r\n    })\r\n    ;(async () => {\r\n      try {\r\n      } catch (e) {}\r\n    })()\r\n  }, [])\r\n\r\n  switch (myState.status) {\r\n    case 'pending':\r\n      return <></>\r\n\r\n    case 'resolved':\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  {myState.member.nickname ? ( // 로그인 한 경우 : 로그아웃인 상태로 게임 하는경우\r\n                    <span>Hi, {myState.member.nickname}</span>\r\n                  ) : (\r\n                    <span>Hi, User</span>\r\n                  )}\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n    case 'rejected':\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  <span>Hi, User</span>\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n    case 'idle':\r\n    default:\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  <span>Hi, User</span>\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nconst SlideOff = keyframes`\r\n  from {\r\n    width: 20%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\nconst SlideOff1024 = keyframes`\r\n  from {\r\n    width: 30%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\nconst SlideOff768 = keyframes`\r\n  from {\r\n    width: 43%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\n\r\nconst SlideOn = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 20%;\r\n  }\r\n`\r\nconst SlideOn1024 = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 30%;\r\n  }\r\n`\r\nconst SlideOn768 = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 43%;\r\n  }\r\n`\r\n\r\nconst QuizWrapper = styled.div`\r\n  width: 100%;\r\n  height: 4rem;\r\n  position: fixed;\r\n  z-index: 999999;\r\n`\r\nconst HamImg = styled.img`\r\n  display: block;\r\n  margin-left: 2rem;\r\n  margin-top: 1.5rem;\r\n  cursor: pointer;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n`\r\nconst ArrowImg = styled.img`\r\n  overflow: hidden;\r\n  display: block;\r\n  width: 3rem;\r\n  cursor: pointer;\r\n  position: fixed;\r\n`\r\n\r\nconst ArrowWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 2rem;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  padding: 0 4rem;\r\n`\r\n\r\nconst LineWrapper = styled.div`\r\n  overflow: hidden;\r\n  padding: 0 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 0 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0 4rem;\r\n  }\r\n`\r\n\r\nconst ContentLine = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  border: 1px solid #fff;\r\n`\r\n\r\nconst UserInfo = styled.div`\r\n  display: block;\r\n`\r\n\r\nconst PageWrapper = styled.div`\r\n  padding: 0 4rem;\r\n  overflow: ellipsis;\r\n  display: flex;\r\n  white-space: nowrap;\r\n  justify-content: flex-start;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  ul {\r\n    li {\r\n      cursor: pointer;\r\n      margin-bottom: 3rem;\r\n    }\r\n    li:hover {\r\n      margin-bottom: 3rem;\r\n      color: #60ffe2;\r\n    }\r\n  }\r\n`\r\n\r\nconst MenuBox = styled.div`\r\n  overflow: hidden;\r\n  height: 100vh;\r\n  flex: 1;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n\r\n  top: 0;\r\n  width: 0%;\r\n  ${props =>\r\n    props.clickCloseArrow &&\r\n    css`\r\n      width: 0%;\r\n      padding: 0;\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-name: ${SlideOff};\r\n      @media only screen and (max-width: 1024px) {\r\n        animation-name: ${SlideOff1024};\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        animation-name: ${SlideOff768};\r\n      }\r\n    `}\r\n  ${props =>\r\n    props.clickOpenArrow &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-name: ${SlideOn};\r\n      width: 20%;\r\n      @media only screen and (max-width: 1024px) {\r\n        width: 30%;\r\n        animation-name: ${SlideOn1024};\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        width: 43%;\r\n        animation-name: ${SlideOn768};\r\n      }\r\n    `}\r\n`\r\n\r\nexport default QuizHeader\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndBlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndDivider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainBlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js",["488"],"import styled, { css, keyframes } from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n  display: ${props => (props.visible ? 'block' : 'none')};\r\n  /* visibility: ${props => (props.visible ? 'visible' : 'hidden')}; */\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 999;\r\n  transition: all 1s ease-in-out;\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n`\r\n\r\nconst FadeIn = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`\r\n\r\nconst FadeOut = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n`\r\n\r\nconst ModalOverlay = ({ visible, modalIn, modalOut }) => {\r\n  return <Overlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\r\n}\r\n\r\nexport default ModalOverlay\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainDivider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\UnderLineWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js",["489","490","491","492"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BlankTop from \"../../../components/common/BlankTop\";\r\nimport LoadingComponent from \"../../../components/common/LoadingComponent\";\r\nimport TextComponent from \"../../../components/common/TextComponent\";\r\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\r\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\r\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\r\nimport InputsWrap from \"../../../components/testmaking/questionlist/input/InputsWrap\";\r\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\r\nimport TopInner from \"../../../components/testmaking/TopInner\";\r\nimport InputCategoryContainer from \"../../testmaking/InputCategoryContainer\";\r\nimport PlayerContainer from \"../../testmaking/player/PlayerContainer\";\r\nimport StartTimeContainer from \"../../testmaking/player/StartTimeContainer\";\r\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\r\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\r\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\r\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\r\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\r\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\r\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\r\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\r\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\r\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\r\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\r\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\r\n\r\nexport let player0;\r\nexport let player1;\r\nexport let player2;\r\nexport let player3;\r\nexport let player4;\r\nexport let player5;\r\nexport let player6;\r\nexport let player7;\r\nexport let player8;\r\nexport let player9;\r\nexport let send=true ;\r\nexport let viewLoadingCount = 0;\r\n\r\nconst TestEditFormContainer = ({history,match}) => {\r\n    const jwt = window.localStorage.getItem('jwt');\r\n    let checkCurrentTime0;\r\n    let checkCurrentTime1;\r\n    let checkCurrentTime2;\r\n    let checkCurrentTime3;\r\n    let checkCurrentTime4;\r\n    let checkCurrentTime5;\r\n    let checkCurrentTime6;\r\n    let checkCurrentTime7;\r\n    let checkCurrentTime8;\r\n    let checkCurrentTime9;\r\n\r\n    const [testTitle,setTestTitle] = useState('');\r\n    const [testDescription,setTestDescription] = useState('');\r\n    const [testCategory,setTestCategory] = useState('');\r\n\r\n    const [questions,setQuestions] = useState([{\r\n        questionNumber : 1,\r\n        questionYoutubeURL : \"\",\r\n        questionStartsfrom : \"\",\r\n        hint : \"\",\r\n        answer: \"\",\r\n        answerYoutubeURL: \"\",\r\n    }]);\r\n    const [links,setLinks] = useState();\r\n\r\n    const [viewLoading,setViewLoading] = useState(false);\r\n    const [serverLoading,setServerLoading] = useState(true);\r\n\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    const [isPlaying0, setPlaying0] = useState(false);\r\n    const [isLoading0, setLoading0] = useState(false);\r\n    const [currentTime0, setCurrentTime0] = useState(\"00:00\");\r\n    const [totalTime0, setTotalTime0] = useState(\"00:00\");\r\n\r\n    const [isPlaying1, setPlaying1] = useState(false);\r\n    const [isLoading1, setLoading1] = useState(false);\r\n    const [currentTime1, setCurrentTime1] = useState(\"00:00\");\r\n    const [totalTime1, setTotalTime1] = useState(\"00:00\");\r\n\r\n    const [isPlaying2, setPlaying2] = useState(false);\r\n    const [isLoading2, setLoading2] = useState(false);\r\n    const [currentTime2, setCurrentTime2] = useState(\"00:00\");\r\n    const [totalTime2, setTotalTime2] = useState(\"00:00\");\r\n\r\n    const [isPlaying3, setPlaying3] = useState(false);\r\n    const [isLoading3, setLoading3] = useState(false);\r\n    const [currentTime3, setCurrentTime3] = useState(\"00:00\");\r\n    const [totalTime3, setTotalTime3] = useState(\"00:00\");\r\n\r\n    const [isPlaying4, setPlaying4] = useState(false);\r\n    const [isLoading4, setLoading4] = useState(false);\r\n    const [currentTime4, setCurrentTime4] = useState(\"00:00\");\r\n    const [totalTime4, setTotalTime4] = useState(\"00:00\");\r\n\r\n    const [isPlaying5, setPlaying5] = useState(false);\r\n    const [isLoading5, setLoading5] = useState(false);\r\n    const [currentTime5, setCurrentTime5] = useState(\"00:00\");\r\n    const [totalTime5, setTotalTime5] = useState(\"00:00\");\r\n\r\n    const [isPlaying6, setPlaying6] = useState(false);\r\n    const [isLoading6, setLoading6] = useState(false);\r\n    const [currentTime6, setCurrentTime6] = useState(\"00:00\");\r\n    const [totalTime6, setTotalTime6] = useState(\"00:00\");\r\n\r\n    const [isPlaying7, setPlaying7] = useState(false);\r\n    const [isLoading7, setLoading7] = useState(false);\r\n    const [currentTime7, setCurrentTime7] = useState(\"00:00\");\r\n    const [totalTime7, setTotalTime7] = useState(\"00:00\");\r\n\r\n    const [isPlaying8, setPlaying8] = useState(false);\r\n    const [isLoading8, setLoading8] = useState(false);\r\n    const [currentTime8, setCurrentTime8] = useState(\"00:00\");\r\n    const [totalTime8, setTotalTime8] = useState(\"00:00\");\r\n\r\n    const [isPlaying9, setPlaying9] = useState(false);\r\n    const [isLoading9, setLoading9] = useState(false);\r\n    const [currentTime9, setCurrentTime9] = useState(\"00:00\");\r\n    const [totalTime9, setTotalTime9] = useState(\"00:00\");\r\n\r\n    const changeTitle = e => {\r\n      const {target: {value}} = e;\r\n      setTestTitle(value);\r\n    }\r\n    const changeDescription = e => {\r\n      const {target: {value}} = e;\r\n      setTestDescription(value);\r\n    }\r\n\r\n    const changeCategory = e => {\r\n      setTestCategory(e);\r\n    }\r\n\r\n    const changeText = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = value;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n\r\n    }\r\n\r\n    const changeStartTime = questionNumber => e => {\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[\"questionStartsfrom\"] = e;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n    }\r\n\r\n    \r\n\r\n    const addQuestions = () => {\r\n        if(questions.length === 10) return\r\n        let data = {\r\n            questionNumber : questions.length +1,\r\n            questionYoutubeURL : \"\",\r\n            questionStartsfrom : \"\",\r\n            hint : \"\",\r\n            answer: \"\",\r\n            answerYoutubeURL: \"\"\r\n\r\n        };\r\n\r\n        setQuestions([...questions, data]);\r\n        let data2 = {\r\n          questionNumber : questions.length +1,\r\n          questionYoutubeURL : \"\",\r\n          answerYoutubeURL: \"\"\r\n        }\r\n        setLinks([...links,data2]);\r\n    }\r\n\r\n    const deleteQuestions = questionNumber => () => {\r\n      let tempQuestions = questions.filter(question => {\r\n          return question.questionNumber !== questionNumber + 1;\r\n      })\r\n      let i = 1;\r\n      const reTempQuestions = tempQuestions.map(question => {\r\n          question.questionNumber = i;\r\n          i++;\r\n          return question;\r\n      })\r\n\r\n      setQuestions(reTempQuestions);\r\n      let tempLinks = links.filter(link => {\r\n        return link.questionNumber !== questionNumber + 1;\r\n    })\r\n    let l = 1;\r\n    const reTempLinks = tempLinks.map(link => {\r\n        link.questionNumber = l;\r\n        l++;\r\n        return link;\r\n    })\r\n\r\n    setLinks(reTempLinks);\r\n  }\r\n\r\n  const getYoutubeId = questionNumber => e => {\r\n    const { target: { value } } = e;\r\n    const { target: { name } } = e;\r\n    if(value)  {\r\n        const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n        const matchs = value.match(regExp);\r\n        if(value!==''&&matchs&&matchs[7].length===11){\r\n\r\n            const tempsQustios = questions.map(question => {\r\n                if( question.questionNumber === questionNumber+1 ){\r\n                    question[name] = matchs[7];\r\n                }\r\n    \r\n                return question;\r\n    \r\n            });  \r\n            setQuestions(tempsQustios);\r\n            const tempsLinks = links.map(link => {\r\n              if( link.questionNumber === questionNumber+1 ){\r\n                link[name] = matchs.input;\r\n              }\r\n  \r\n              return link;\r\n  \r\n          });  \r\n          setLinks(tempsLinks);\r\n    \r\n        }else{\r\n            const tempsQustios = questions.map(question => {\r\n                if( question.questionNumber === questionNumber+1 ){\r\n                    question[name] = \"\";\r\n                }\r\n    \r\n                return question;\r\n    \r\n            });  \r\n            setQuestions(tempsQustios); \r\n            const tempsLinks = links.map(link => {\r\n              if( link.questionNumber === questionNumber+1 ){\r\n                link[name] = value;\r\n              }\r\n  \r\n              return link;\r\n  \r\n          });  \r\n          setLinks(tempsLinks);\r\n            \r\n\r\n        }\r\n    }else{\r\n      const tempsQustios = questions.map(question => {\r\n        if( question.questionNumber === questionNumber+1 ){\r\n            question[name] = \"\";\r\n        }\r\n\r\n        return question;\r\n\r\n      });  \r\n    const tempsLinks = links.map(link => {\r\n      if( link.questionNumber === questionNumber+1 ){\r\n        link[name] = \"\";\r\n      }\r\n\r\n      return link;\r\n\r\n      });  \r\n    setLinks(tempsLinks);\r\n    setQuestions(tempsQustios);\r\n    }\r\n    \r\n}\r\n\r\n  const playerState0 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying0(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying0(false);\r\n    }\r\n  };\r\n  const playerState1 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying1(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying1(false);\r\n    }\r\n  };\r\n  const playerState2 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying2(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying2(false);\r\n    }\r\n  };\r\n  const playerState3 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying3(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying3(false);\r\n    }\r\n  };\r\n  const playerState4 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying4(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying4(false);\r\n    }\r\n  };\r\n  const playerState5 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying5(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying5(false);\r\n    }\r\n  };\r\n  const playerState6 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying6(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying6(false);\r\n    }\r\n  };\r\n  const playerState7 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying7(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying7(false);\r\n    }\r\n  };\r\n  const playerState8 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying8(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying8(false);\r\n    }\r\n  };\r\n  const playerState9 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying9(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying9(false);\r\n    }\r\n  };\r\n\r\n  const transTime = (seconds) => {\r\n    if (!seconds) {      return;\r\n    }\r\n    const hour = parseInt(seconds / 3600);\r\n    const min = parseInt((seconds % 3600) / 60);\r\n    const sec = seconds % 60;\r\n\r\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\r\n      sec < 10 ? \"0\" + String(sec) : sec\r\n    }`;\r\n  };\r\n  const onSubmitHandler = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const variable ={\r\n        title: testTitle,\r\n        description: testDescription,\r\n        CategoryId: testCategory,\r\n        questions: questions,\r\n\r\n    }\r\n    const config = {\r\n      headers : {\"jwt\":jwt}\r\n  }\r\n  setServerLoading(false);\r\n  if(testTitle.length !== 0 && testDescription.length !== 0 && testCategory.length !== 0){\r\n    for(let i = 0; i < questions.length; i++ ){\r\n      if(questions[i].questionYoutubeURL.length === 0 ||questions[i].questionStartsfrom.length === 0 ||questions[i].hint.length === 0 ||\r\n      questions[i].answer.length === 0 ||questions[i].answerYoutubeURL.length === 0){\r\n        send = false;\r\n      }\r\n    }\r\n    if(send===true){\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n        }\r\n        const newTimer = setTimeout(async () => {\r\n            try {\r\n                axios.put(`https://soundpicker.ga/test/${match.params.id}`,variable,config)\r\n                .then(response=> {\r\n                    if(response.data.success){\r\n                      history.push(\"/\");\r\n                    }\r\n                })\r\n            } catch (e) {\r\n              setServerLoading(true);\r\n\r\n            }\r\n          }, 5000);\r\n          setTimer(newTimer);\r\n\r\n    }else{\r\n      setServerLoading(true);\r\n    }\r\n\r\n  }else{\r\n    setServerLoading(true);\r\n  }\r\n\r\n}\r\n\r\n  const setTime0 = () => {\r\n    setCurrentTime0(transTime(player0.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime1 = () => {\r\n    setCurrentTime1(transTime(player1.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime2 = () => {\r\n    setCurrentTime2(transTime(player2.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime3 = () => {\r\n    setCurrentTime3(transTime(player3.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime4 = () => {\r\n    setCurrentTime4(transTime(player4.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime5 = () => {\r\n    setCurrentTime5(transTime(player5.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime6 = () => {\r\n    setCurrentTime6(transTime(player6.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime7 = () => {\r\n    setCurrentTime7(transTime(player7.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime8 = () => {\r\n    setCurrentTime8(transTime(player8.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime9 = () => {\r\n    setCurrentTime9(transTime(player9.getCurrentTime().toFixed()));\r\n  };\r\n\r\n  const onReadyAPI0 = () => {\r\n      setLoading0(true);\r\n      setPlaying0(false);\r\n      checkCurrentTime0 = setInterval(setTime0, 1000);\r\n      setTotalTime0(player0.getDuration());\r\n\r\n  };\r\n  const onReadyAPI1 = () => {\r\n    setLoading1(true);\r\n    setPlaying1(false);\r\n    checkCurrentTime1 = setInterval(setTime1, 1000);\r\n    setTotalTime1(player1.getDuration());\r\n  };\r\n  const onReadyAPI2 = () => {\r\n    setLoading2(true);\r\n    setPlaying2(false);\r\n    checkCurrentTime2 = setInterval(setTime2, 1000);\r\n    setTotalTime2(player2.getDuration());\r\n  };\r\n  const onReadyAPI3 = () => {\r\n    setLoading3(true);\r\n    setPlaying3(false);\r\n    checkCurrentTime3 = setInterval(setTime3, 1000);\r\n    setTotalTime3(player3.getDuration());\r\n  };\r\n  const onReadyAPI4 = () => {\r\n    setLoading4(true);\r\n    setPlaying4(false);\r\n    checkCurrentTime4 = setInterval(setTime4, 1000);\r\n    setTotalTime4(player4.getDuration());\r\n  };\r\n  const onReadyAPI5 = () => {\r\n    setLoading5(true);\r\n    setPlaying5(false);\r\n    checkCurrentTime5 = setInterval(setTime5, 1000);\r\n    setTotalTime5(player5.getDuration());\r\n  };\r\n  const onReadyAPI6 = () => {\r\n    setLoading6(true);\r\n    setPlaying6(false);\r\n    checkCurrentTime6 = setInterval(setTime6, 1000);\r\n    setTotalTime6(player6.getDuration());\r\n  };\r\n  const onReadyAPI7 = () => {\r\n    setLoading7(true);\r\n    setPlaying7(false);\r\n    checkCurrentTime7 = setInterval(setTime7, 1000);\r\n    setTotalTime7(player7.getDuration());\r\n  };\r\n  const onReadyAPI8 = () => {\r\n    setLoading8(true);\r\n    setPlaying8(false);\r\n    checkCurrentTime8 = setInterval(setTime8, 1000);\r\n    setTotalTime8(player8.getDuration());\r\n  };\r\n  const onReadyAPI9 = () => {\r\n    setLoading9(true);\r\n    setPlaying9(false);\r\n    checkCurrentTime9 = setInterval(setTime9, 1000);\r\n    setTotalTime9(player9.getDuration());\r\n  };\r\n\r\n\r\n    const playHandler0 = () => {\r\n    setPlaying0(!isPlaying0);\r\n    } \r\n\r\n    const playHandler1 = () => {\r\n    setPlaying1(!isPlaying1);\r\n    } \r\n    const playHandler2 = () => {\r\n    setPlaying2(!isPlaying2);\r\n    } \r\n    const playHandler3 = () => {\r\n        setPlaying3(!isPlaying3);\r\n    } \r\n    const playHandler4 = () => {\r\n        setPlaying4(!isPlaying4);\r\n    } \r\n    const playHandler5 = () => {\r\n        setPlaying5(!isPlaying5);\r\n    } \r\n    const playHandler6 = () => {\r\n        setPlaying6(!isPlaying6);\r\n    } \r\n    const playHandler7 = () => {\r\n        setPlaying7(!isPlaying7);\r\n    } \r\n    const playHandler8 = () => {\r\n        setPlaying8(!isPlaying8);\r\n    } \r\n    const playHandler9 = () => {\r\n        setPlaying9(!isPlaying9);\r\n    } \r\n    \r\n\r\n    const backClick0 = () => {\r\n        if(isLoading0)player0.seekTo(player0.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick1 = () => {\r\n        if(isLoading1)player1.seekTo(player1.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick2 = () => {\r\n        if(isLoading2)player2.seekTo(player2.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick3 = () => {\r\n        if(isLoading3)player3.seekTo(player3.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick4 = () => {\r\n        if(isLoading4)player4.seekTo(player4.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick5 = () => {\r\n        if(isLoading5)player5.seekTo(player5.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick6 = () => {\r\n        if(isLoading6)player6.seekTo(player6.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick7 = () => {\r\n        if(isLoading7)player7.seekTo(player7.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick8 = () => {\r\n        if(isLoading8)player8.seekTo(player8.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick9 = () => {\r\n        if(isLoading9)player9.seekTo(player9.getCurrentTime() - 10, true)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const script = document.createElement('script');\r\n        script.src = 'https://www.youtube.com/iframe_api';\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n\r\n        window.onYouTubeIframeAPIReady = () => {\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n          player0 = new window.YT.Player(`player0`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI0,\r\n              onStateChange: playerState0,\r\n            },\r\n          });\r\n          player1 = new window.YT.Player(`player1`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI1,\r\n              onStateChange: playerState1,\r\n            },\r\n          });\r\n          player2 = new window.YT.Player(`player2`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI2,\r\n              onStateChange: playerState2,\r\n            },\r\n          });\r\n          player3 = new window.YT.Player(`player3`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI3,\r\n              onStateChange: playerState3,\r\n            },\r\n          });\r\n          player4 = new window.YT.Player(`player4`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI4,\r\n              onStateChange: playerState4,\r\n            },\r\n          });\r\n          player5 = new window.YT.Player(`player5`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI5,\r\n              onStateChange: playerState5,\r\n            },\r\n          });\r\n          player6 = new window.YT.Player(`player6`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI6,\r\n              onStateChange: playerState6,\r\n            },\r\n          });\r\n          player7 = new window.YT.Player(`player7`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI7,\r\n              onStateChange: playerState7,\r\n            },\r\n          });\r\n          player8 = new window.YT.Player(`player8`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI8,\r\n              onStateChange: playerState8,\r\n            },\r\n          });\r\n          player9 = new window.YT.Player(`player9`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'https://soundpicker.kr'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI9,\r\n              onStateChange: playerState9,\r\n            },\r\n          });\r\n\r\n        }\r\n        return () => {\r\n          clearInterval(checkCurrentTime0);\r\n          clearInterval(checkCurrentTime1);\r\n          clearInterval(checkCurrentTime2);\r\n          clearInterval(checkCurrentTime3);\r\n          clearInterval(checkCurrentTime4);\r\n          clearInterval(checkCurrentTime5);\r\n          clearInterval(checkCurrentTime6);\r\n          clearInterval(checkCurrentTime7);\r\n          clearInterval(checkCurrentTime8);\r\n          clearInterval(checkCurrentTime9);\r\n        };\r\n        \r\n      }, []);\r\n      const getTestData = async id =>{\r\n          try{\r\n              await axios.get(`https://soundpicker.ga/test/${id}/updatepage`)\r\n              .then(response=> {\r\n                  if(response.data.success){\r\n                    setTestTitle(response.data.data.test.title);\r\n                    setTestDescription(response.data.data.test.description);\r\n                    setTestCategory(response.data.data.test.CategoryId)\r\n                    setQuestions(response.data.data.questions)\r\n                    const linkArray=[]\r\n                    for(let i=0; i<response.data.data.questions.length; i++){\r\n                      let data2 = {\r\n                        questionNumber : response.data.data.questions[i].questionNumber,\r\n                        questionYoutubeURL : `https://www.youtube.com/watch?v=${response.data.data.questions[i].questionYoutubeURL}`,\r\n                        answerYoutubeURL:`https://www.youtube.com/watch?v=${response.data.data.questions[i].answerYoutubeURL}`\r\n                      }\r\n                      linkArray.push(data2)\r\n                    }\r\n                    setLinks(linkArray);       \r\n\r\n                  \r\n                    setViewLoading(true)\r\n                    viewLoadingCount++;   \r\n                  }else{\r\n                    history.push(\"/\");\r\n                  }\r\n              })\r\n          }catch(e){\r\n\r\n          }\r\n      }\r\n\r\n      useEffect(()=>{\r\n        if(viewLoadingCount===0){\r\n          if(isLoading0&&\r\n            isLoading1&&\r\n            isLoading2&&\r\n            isLoading3&&\r\n            isLoading4&&\r\n            isLoading5&&\r\n            isLoading6&&\r\n            isLoading7&&\r\n            isLoading8&&\r\n            isLoading9){\r\n              setLoading0(false);\r\n              setLoading1(false);\r\n              setLoading2(false);\r\n              setLoading3(false);\r\n              setLoading4(false);\r\n              setLoading5(false);\r\n              setLoading6(false);\r\n              setLoading7(false);\r\n              setLoading8(false);\r\n              setLoading9(false);\r\n              getTestData(match.params.id)\r\n              }\r\n            }\r\n        },[isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9]);\r\n\r\n\r\n      if (isLoading0) {\r\n        if (isPlaying0) {\r\n          player0?.playVideo();\r\n        } else {\r\n          player0?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading1) {    \r\n        if (isPlaying1) {\r\n          player1?.playVideo();\r\n\r\n        } else {\r\n          player1?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading2) {\r\n          if (isPlaying2) {\r\n              player2?.playVideo();\r\n            } else {\r\n             player2?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading3) {\r\n        if (isPlaying3) {\r\n            player3?.playVideo();\r\n          } else {\r\n           player3?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading4) {\r\n        if (isPlaying4) {\r\n            player4?.playVideo();\r\n          } else {\r\n           player4?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading5) {\r\n        if (isPlaying5) {\r\n            player5?.playVideo();\r\n          } else {\r\n           player5?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading6) {\r\n        if (isPlaying6) {\r\n            player6?.playVideo();\r\n          } else {\r\n           player6?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading7) {\r\n        if (isPlaying7) {\r\n            player7?.playVideo();\r\n          } else {\r\n           player7?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading8) {\r\n        if (isPlaying8) {\r\n            player8?.playVideo();\r\n          } else {\r\n           player8?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading9) {\r\n        if (isPlaying9) {\r\n            player9?.playVideo();\r\n          } else {\r\n           player9?.pauseVideo();\r\n      }\r\n    }\r\n\r\n    return(\r\n      !viewLoading ?  \r\n      <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center',flexDirection:\"column\"}}>\r\n         <LoadingComponent/>\r\n         <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n         <TextComponent title={\"로딩중...\"} DesktopLength=\"14\" TabletLength=\"14\" MobileLength='14'/>\r\n      </div>\r\n       : \r\n      \r\n      <form method='post' onSubmit={onSubmitHandler} >\r\n            <TopInner>\r\n                <table></table>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='제목'/>\r\n                    <TopInput inputName='title' inputPlaceholder='최대 25자' inputMaxLength='25' changeHandler={changeTitle} value={testTitle} />\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='내용'/>\r\n                    <TopInput inputName='description' inputPlaceholder='최대 45자' inputMaxLength='45' changeHandler={changeDescription} value={testDescription}/>\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='카테고리'/>\r\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요' changeCategory={changeCategory} testCategory={testCategory}/>\r\n                </TopInputWrap>\r\n            </TopInner>\r\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\r\n            <QuestionListTitle/>\r\n\r\n            {questions.length !== 0 && (\r\n            <QuestionListInner>\r\n                {questions.map((d,i)=>(\r\n                 <div key={i}>\r\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\r\n                    <InputsWrap >\r\n                        <QuestionListLeftWrap >\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text={i!==9?\"Qustion00\"+(i+1):\"Qustion010\"} />\r\n                                <QuestionListInput inputName='answer' inputMaxLength=\"20\" inputPlaceholder='정답을 적어주세요(최대20자)'  changeText={changeText(i)} value={d.answer}/>\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListHintWrap>\r\n                                <QuestionListInputText text='Hint' />\r\n                                <QuestionListInput inputName='hint' inputMaxLength=\"10\" inputPlaceholder='힌트를 적어주세요(최대10자)'  changeText={changeText(i)} value={d.hint} />\r\n                            </QuestionListHintWrap>\r\n                        </QuestionListLeftWrap>\r\n\r\n                        <QuestionListRightWrap>\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].questionYoutubeURL} questionURL={links[i]?.questionYoutubeURL} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\r\n\r\n                           {questions[i].questionYoutubeURL!==\"\"||questions[i].questionYoutubeURL ? \r\n                            <PlayerWrap>\r\n                               <PlayerContainer questionUrl={questions[i].questionYoutubeURL} \r\n                                                        player={\r\n                                                            i===0?player0:\r\n                                                            i===1?player1:\r\n                                                            i===2?player2:\r\n                                                            i===3?player3:\r\n                                                            i===4?player4:\r\n                                                            i===5?player5:\r\n                                                            i===6?player6:\r\n                                                            i===7?player7:\r\n                                                            i===8?player8:\r\n                                                            player9\r\n\r\n                                                        } \r\n                                                        i={i} \r\n                                                        isPlaying={\r\n                                                            i===0?isPlaying0:\r\n                                                            i===1?isPlaying1:\r\n                                                            i===2?isPlaying2:\r\n                                                            i===3?isPlaying3:\r\n                                                            i===4?isPlaying4:\r\n                                                            i===5?isPlaying5:\r\n                                                            i===6?isPlaying6:\r\n                                                            i===7?isPlaying7:\r\n                                                            i===8?isPlaying8:\r\n                                                                  isPlaying9\r\n                                                            }\r\n                                                        isLoading={\r\n                                                            i===0?isLoading0:\r\n                                                            i===1?isLoading1:\r\n                                                            i===2?isLoading2:\r\n                                                            i===3?isLoading3:\r\n                                                            i===4?isLoading4:\r\n                                                            i===5?isLoading5:\r\n                                                            i===6?isLoading6:\r\n                                                            i===7?isLoading7:\r\n                                                            i===8?isLoading8:\r\n                                                            isLoading9\r\n\r\n                                                        }\r\n                                                        currentTime={\r\n                                                            i===0?currentTime0:\r\n                                                            i===1?currentTime1:\r\n                                                            i===2?currentTime2:\r\n                                                            i===3?currentTime3:\r\n                                                            i===4?currentTime4:\r\n                                                            i===5?currentTime5:\r\n                                                            i===6?currentTime6:\r\n                                                            i===7?currentTime7:\r\n                                                            i===8?currentTime8:\r\n                                                            currentTime9\r\n\r\n                                                        }\r\n                                                        totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9\r\n\r\n                                                        }\r\n                                                        playHandler={\r\n                                                            i===0?playHandler0:\r\n                                                            i===1?playHandler1:\r\n                                                            i===2?playHandler2:\r\n                                                            i===3?playHandler3:\r\n                                                            i===4?playHandler4:\r\n                                                            i===5?playHandler5:\r\n                                                            i===6?playHandler6:\r\n                                                            i===7?playHandler7:\r\n                                                            i===8?playHandler8:\r\n                                                            playHandler9\r\n                                                        }\r\n                                                        backClick={\r\n                                                            i===0?backClick0:\r\n                                                            i===1?backClick1:\r\n                                                            i===2?backClick2:\r\n                                                            i===3?backClick3:\r\n                                                            i===4?backClick4:\r\n                                                            i===5?backClick5:\r\n                                                            i===6?backClick6:\r\n                                                            i===7?backClick7:\r\n                                                            i===8?backClick8:\r\n                                                            backClick9\r\n\r\n                                                        }\r\n                                                        /> \r\n                                                            \r\n                                                      \r\n                                <StartTimeContainer  changeStartTime={changeStartTime(i)} \r\n                                                      totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9 }\r\n                                                      questionStartsfrom={\r\n                                                         questions[i].questionStartsfrom\r\n                                                            }/>\r\n                            </PlayerWrap>\r\n                            : \"\"}\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].answerYoutubeURL} questionURL={links[i]?.answerYoutubeURL}/>\r\n                            </QuestionListInputWrap>\r\n\r\n                        </QuestionListRightWrap>\r\n                    </InputsWrap>\r\n                </div>\r\n                ))}\r\n\r\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\r\n                <QuestionLustPlusButton addQuestions={addQuestions} />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\r\n                { serverLoading? \r\n                    <QuestionSaveButton onSubmitHandler={onSubmitHandler} /> \r\n                  :\r\n                  <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center'}}>\r\n                    <LoadingComponent/>\r\n                  </div>\r\n\r\n                }                    <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\r\n                <table></table>\r\n            </QuestionListInner>     \r\n\r\n               \r\n            )}\r\n\r\n        </form>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default TestEditFormContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js",["493","494"],"import { useEffect, useState } from \"react\";\r\nimport StartTime from \"../../../components/testmaking/questionlist/player/StartTime\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StartTimeContainer = ({questionStartsfrom,changeStartTime,totalTime}) => {\r\n\r\n    const [minutes,setMinutes] = useState(0);\r\n    const [seconds,setSeconds] = useState(0);\r\n    const onChangeMinutes = e => {\r\n        const minute = e.target.value;\r\n        if(!minute){\r\n            setMinutes(0);\r\n        }else{\r\n            setMinutes(minute);\r\n        }\r\n    }\r\n\r\n    const onChangeSeconds = e => {\r\n        const second = e.target.value;\r\n\r\n        if(!second){\r\n            setSeconds(0);\r\n\r\n        }else{\r\n            if(second >= 60){\r\n                if(parseInt(totalTime-4) >= parseInt(minutes*60) + parseInt(second)){\r\n                    setMinutes(minutes+1);\r\n                    setSeconds(second%60);\r\n                }else{\r\n                    setSeconds(second%60);\r\n                }\r\n\r\n            }else{\r\n                setSeconds(second);\r\n            }\r\n        }\r\n    }\r\n    const maxLengthCheck = (object) => {\r\n        if (object.target.value.length > object.target.maxLength) {\r\n         object.target.value = object.target.value.slice(0, object.target.maxLength)\r\n          }\r\n        }\r\n    \r\n    useEffect(()=>{\r\n        if (questionStartsfrom){\r\n            setMinutes( parseInt(questionStartsfrom/60));\r\n            setSeconds( parseInt(questionStartsfrom%60));\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n\r\n        const inputTime =  parseInt(minutes*60) + parseInt(seconds);\r\n        if(parseInt(totalTime-4) >= inputTime){\r\n            changeStartTime(inputTime);\r\n        }else if(totalTime===170){\r\n            changeStartTime(inputTime);\r\n        }else{\r\n            setMinutes(String(minutes).slice(0,1))\r\n        }\r\n    },[minutes,seconds])\r\n\r\n    return <StartTime questionStartsfrom={questionStartsfrom} maxLengthCheck={maxLengthCheck} onChangeMinutes={onChangeMinutes} onChangeSeconds={onChangeSeconds}/>\r\n}\r\n\r\nexport default StartTimeContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js",["495"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport ModalContent from '../../components/modal/ModalContent.js'\r\nimport ModalInner from '../../components/modal/ModalInner'\r\nimport ModalOverlay from '../../components/modal/ModalOverlay'\r\nimport ModalWrapperContainer from '../../containers/modal/ModalWrapperContainer.js'\r\n\r\nfunction ModalPage({\r\n  visible,\r\n  closeModal,\r\n  maskClosable,\r\n  urlId,\r\n  modalIn,\r\n  modalOut,\r\n}) {\r\n  const [data, setData] = useState('')\r\n  useEffect(() => {\r\n    setData(urlId)\r\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`\r\n    return () => {\r\n      const scrollY = document.body.style.top\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`\r\n      window.scrollTo(0, parseInt(scrollY || '0') * -1)\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <ModalOverlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\r\n\r\n      <ModalWrapperContainer\r\n        closeModal={closeModal}\r\n        maskClosable={maskClosable}\r\n        visible={visible}\r\n      >\r\n        <ModalInner modalIn={modalIn}>\r\n          <ModalContent data={data} />\r\n        </ModalInner>\r\n\r\n        <AnswerButtonStyle\r\n          modalOut={modalOut}\r\n          modalIn={modalIn}\r\n          onClick={e => {\r\n            closeModal(e)\r\n          }}\r\n        >\r\n          돌아가기\r\n        </AnswerButtonStyle>\r\n      </ModalWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FadeIn = keyframes`{\r\n    0% { \r\n     opacity: 0;\r\n    }\r\n    100% {\r\n    opacity: 1;\r\n    }\r\n  `\r\n\r\nconst FadeOut = keyframes`{\r\n    0% { \r\n     opacity: 1;\r\n    }\r\n    100% {\r\n    opacity: 0;\r\n    }\r\n  `\r\n\r\nconst AnswerButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  color: #030f2c;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0px 0px 21px -6px #49fff2;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  display: block;\r\n  margin: 0 auto;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n  }\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(73, 255, 242, 1) 0%,\r\n    rgba(73, 255, 233, 1) 35%,\r\n    rgba(56, 245, 238, 1) 66%,\r\n    rgba(0, 212, 255, 1) 100%\r\n  );\r\n  &:hover {\r\n    transition: box-shadow 0.5s ease-in-out;\r\n    box-shadow: 0px 0px 40px -6px #49fff2;\r\n  }\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n\r\n  ${props =>\r\n    props.modalOut &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeOut};\r\n    `}\r\n`\r\n\r\nexport default ModalPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button2.js",[],{"ruleId":"496","replacedBy":"497"},{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":5,"column":1,"nodeType":"502","endLine":54,"endColumn":2},{"ruleId":"503","severity":1,"message":"504","line":44,"column":11,"nodeType":"505","endLine":44,"endColumn":13,"suggestions":"506"},{"ruleId":"507","severity":1,"message":"508","line":1,"column":10,"nodeType":"509","messageId":"510","endLine":1,"endColumn":19},{"ruleId":"507","severity":1,"message":"511","line":1,"column":21,"nodeType":"509","messageId":"510","endLine":1,"endColumn":29},{"ruleId":"507","severity":1,"message":"512","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"507","severity":1,"message":"513","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":14},{"ruleId":"503","severity":1,"message":"514","line":121,"column":5,"nodeType":"505","endLine":121,"endColumn":7,"suggestions":"515"},{"ruleId":"507","severity":1,"message":"512","line":1,"column":8,"nodeType":"509","messageId":"510","endLine":1,"endColumn":16},{"ruleId":"507","severity":1,"message":"508","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"516","line":2,"column":21,"nodeType":"509","messageId":"510","endLine":2,"endColumn":25},{"ruleId":"507","severity":1,"message":"517","line":189,"column":11,"nodeType":"509","messageId":"510","endLine":189,"endColumn":16},{"ruleId":"507","severity":1,"message":"518","line":194,"column":11,"nodeType":"509","messageId":"510","endLine":194,"endColumn":22},{"ruleId":"500","severity":1,"message":"501","line":4,"column":1,"nodeType":"502","endLine":23,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":8,"column":13,"nodeType":"521","messageId":"522","endLine":8,"endColumn":19},{"ruleId":"519","severity":1,"message":"520","line":11,"column":13,"nodeType":"521","messageId":"522","endLine":11,"endColumn":19},{"ruleId":"519","severity":1,"message":"520","line":14,"column":13,"nodeType":"521","messageId":"522","endLine":14,"endColumn":19},{"ruleId":"523","severity":1,"message":"524","line":50,"column":27,"nodeType":"525","messageId":"526","endLine":50,"endColumn":29},{"ruleId":"503","severity":1,"message":"527","line":55,"column":6,"nodeType":"505","endLine":55,"endColumn":8,"suggestions":"528"},{"ruleId":"507","severity":1,"message":"529","line":47,"column":10,"nodeType":"509","messageId":"510","endLine":47,"endColumn":14},{"ruleId":"503","severity":1,"message":"530","line":114,"column":5,"nodeType":"505","endLine":114,"endColumn":11,"suggestions":"531"},{"ruleId":"507","severity":1,"message":"532","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":12},{"ruleId":"533","severity":1,"message":"534","line":219,"column":95,"nodeType":"535","messageId":"536","endLine":219,"endColumn":96,"suggestions":"537"},{"ruleId":"533","severity":1,"message":"538","line":219,"column":97,"nodeType":"535","messageId":"536","endLine":219,"endColumn":98,"suggestions":"539"},{"ruleId":"503","severity":1,"message":"540","line":782,"column":10,"nodeType":"505","endLine":782,"endColumn":12,"suggestions":"541"},{"ruleId":"503","severity":1,"message":"542","line":45,"column":6,"nodeType":"505","endLine":45,"endColumn":8,"suggestions":"543"},{"ruleId":"507","severity":1,"message":"512","line":7,"column":8,"nodeType":"509","messageId":"510","endLine":7,"endColumn":16},{"ruleId":"503","severity":1,"message":"544","line":163,"column":6,"nodeType":"505","endLine":163,"endColumn":14,"suggestions":"545"},{"ruleId":"507","severity":1,"message":"512","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":16},{"ruleId":"507","severity":1,"message":"546","line":7,"column":8,"nodeType":"509","messageId":"510","endLine":7,"endColumn":15},{"ruleId":"503","severity":1,"message":"547","line":37,"column":6,"nodeType":"505","endLine":37,"endColumn":19,"suggestions":"548"},{"ruleId":"549","severity":1,"message":"550","line":102,"column":13,"nodeType":"509","messageId":"551","endLine":102,"endColumn":18},{"ruleId":"507","severity":1,"message":"552","line":9,"column":25,"nodeType":"509","messageId":"510","endLine":9,"endColumn":42},{"ruleId":"507","severity":1,"message":"512","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":16},{"ruleId":"507","severity":1,"message":"553","line":107,"column":10,"nodeType":"509","messageId":"510","endLine":107,"endColumn":17},{"ruleId":"554","severity":1,"message":"555","line":117,"column":3,"nodeType":"556","messageId":"557","endLine":150,"endColumn":4},{"ruleId":"558","severity":1,"message":"559","line":478,"column":42,"nodeType":"560","messageId":"561","endLine":478,"endColumn":44},{"ruleId":"558","severity":1,"message":"559","line":519,"column":42,"nodeType":"560","messageId":"561","endLine":519,"endColumn":44},{"ruleId":"558","severity":1,"message":"559","line":598,"column":42,"nodeType":"560","messageId":"561","endLine":598,"endColumn":44},{"ruleId":"558","severity":1,"message":"559","line":671,"column":42,"nodeType":"560","messageId":"561","endLine":671,"endColumn":44},{"ruleId":"558","severity":1,"message":"559","line":130,"column":39,"nodeType":"560","messageId":"561","endLine":130,"endColumn":41},{"ruleId":"558","severity":1,"message":"559","line":146,"column":39,"nodeType":"560","messageId":"561","endLine":146,"endColumn":41},{"ruleId":"507","severity":1,"message":"513","line":2,"column":8,"nodeType":"509","messageId":"510","endLine":2,"endColumn":14},{"ruleId":"503","severity":1,"message":"514","line":30,"column":6,"nodeType":"505","endLine":30,"endColumn":8,"suggestions":"562"},{"ruleId":"507","severity":1,"message":"563","line":32,"column":7,"nodeType":"509","messageId":"510","endLine":32,"endColumn":14},{"ruleId":"533","severity":1,"message":"534","line":217,"column":91,"nodeType":"535","messageId":"536","endLine":217,"endColumn":92,"suggestions":"564"},{"ruleId":"533","severity":1,"message":"538","line":217,"column":93,"nodeType":"535","messageId":"536","endLine":217,"endColumn":94,"suggestions":"565"},{"ruleId":"503","severity":1,"message":"540","line":790,"column":10,"nodeType":"505","endLine":790,"endColumn":12,"suggestions":"566"},{"ruleId":"503","severity":1,"message":"567","line":848,"column":11,"nodeType":"505","endLine":848,"endColumn":131,"suggestions":"568"},{"ruleId":"503","severity":1,"message":"569","line":54,"column":7,"nodeType":"505","endLine":54,"endColumn":9,"suggestions":"570"},{"ruleId":"503","severity":1,"message":"571","line":66,"column":7,"nodeType":"505","endLine":66,"endColumn":24,"suggestions":"572"},{"ruleId":"503","severity":1,"message":"573","line":25,"column":6,"nodeType":"505","endLine":25,"endColumn":8,"suggestions":"574"},"no-native-reassign",["575"],"no-negated-in-lhs",["576"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["577"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'BlankTop' is defined but never used.","'styled' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["578"],"'Link' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'getRecommendAPI'. Either include it or remove the dependency array.",["579"],"'test' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'sort'. Either exclude it or remove the dependency array.",["580"],"'Test' is defined but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["581","582"],"Unnecessary escape character: \\?.",["583","584"],"React Hook useEffect has missing dependencies: 'checkCurrentTime0', 'checkCurrentTime1', 'checkCurrentTime2', 'checkCurrentTime3', 'checkCurrentTime4', 'checkCurrentTime5', 'checkCurrentTime6', 'checkCurrentTime7', 'checkCurrentTime8', 'checkCurrentTime9', 'onReadyAPI0', 'onReadyAPI1', 'onReadyAPI2', 'onReadyAPI3', 'onReadyAPI4', 'onReadyAPI5', 'onReadyAPI6', 'onReadyAPI7', 'onReadyAPI8', and 'onReadyAPI9'. Either include them or remove the dependency array.",["585"],"React Hook useEffect has a missing dependency: 'testCategory'. Either include it or remove the dependency array.",["586"],"React Hook useEffect has a missing dependency: 'first'. Either include it or remove the dependency array.",["587"],"'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'newList'. Either include it or remove the dependency array. If 'setSound1Url' needs the current value of 'newList', you can also switch to useReducer instead of useState and read 'newList' in the reducer.",["588"],"no-redeclare","'audio' is already defined.","redeclared","'setContainerWidth' is assigned a value but never used.","'myState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["589"],"'FadeOut' is assigned a value but never used.",["590","591"],["592","593"],["594"],"React Hook useEffect has missing dependencies: 'getTestData' and 'match.params.id'. Either include them or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'questionStartsfrom'. Either include it or remove the dependency array. If 'setMinutes' needs the current value of 'questionStartsfrom', you can also switch to useReducer instead of useState and read 'questionStartsfrom' in the reducer.",["596"],"React Hook useEffect has missing dependencies: 'changeStartTime' and 'totalTime'. Either include them or remove the dependency array. If 'changeStartTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["597"],"React Hook useEffect has a missing dependency: 'urlId'. Either include it or remove the dependency array. If 'setData' needs the current value of 'urlId', you can also switch to useReducer instead of useState and read 'urlId' in the reducer.",["598"],"no-global-assign","no-unsafe-negation",{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"messageId":"607","fix":"608","desc":"609"},{"messageId":"610","fix":"611","desc":"612"},{"messageId":"607","fix":"613","desc":"609"},{"messageId":"610","fix":"614","desc":"612"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"601","fix":"623"},{"messageId":"607","fix":"624","desc":"609"},{"messageId":"610","fix":"625","desc":"612"},{"messageId":"607","fix":"626","desc":"609"},{"messageId":"610","fix":"627","desc":"612"},{"desc":"615","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"637","text":"638"},"Update the dependencies array to be: [dispatch]",{"range":"639","text":"640"},"Update the dependencies array to be: [getRecommendAPI]",{"range":"641","text":"642"},"Update the dependencies array to be: []",{"range":"643","text":"644"},"removeEscape",{"range":"645","text":"646"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"647","text":"648"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"649","text":"646"},{"range":"650","text":"648"},"Update the dependencies array to be: [checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",{"range":"651","text":"652"},"Update the dependencies array to be: [testCategory]",{"range":"653","text":"654"},"Update the dependencies array to be: [first, search]",{"range":"655","text":"656"},"Update the dependencies array to be: [activeIndex, newList]",{"range":"657","text":"658"},{"range":"659","text":"640"},{"range":"660","text":"646"},{"range":"661","text":"648"},{"range":"662","text":"646"},{"range":"663","text":"648"},{"range":"664","text":"652"},"Update the dependencies array to be: [getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",{"range":"665","text":"666"},"Update the dependencies array to be: [questionStartsfrom]",{"range":"667","text":"668"},"Update the dependencies array to be: [changeStartTime, minutes, seconds, totalTime]",{"range":"669","text":"670"},"Update the dependencies array to be: [urlId]",{"range":"671","text":"672"},[1503,1505],"[dispatch, props.history]",[2974,2976],"[dispatch]",[1388,1390],"[getRecommendAPI]",[2518,2524],"[]",[8562,8563],"",[8562,8562],"\\",[8564,8565],[8564,8564],[24693,24695],"[checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",[1448,1450],"[testCategory]",[3491,3499],"[first, search]",[1747,1760],"[activeIndex, newList]",[1189,1191],[8452,8453],[8452,8452],[8454,8455],[8454,8454],[24703,24705],[26872,26992],"[getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",[1467,1469],"[questionStartsfrom]",[1819,1836],"[changeStartTime, minutes, seconds, totalTime]",[856,858],"[urlId]"]