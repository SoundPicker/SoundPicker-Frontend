[{"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js":"1","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js":"2","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js":"3","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js":"4","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js":"5","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js":"6","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js":"7","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js":"8","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js":"9","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js":"10","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js":"11","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js":"12","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js":"13","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js":"14","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js":"15","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js":"16","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js":"17","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js":"18","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js":"19","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js":"20","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js":"21","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js":"22","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js":"23","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js":"24","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js":"25","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js":"26","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js":"27","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js":"28","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js":"29","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js":"30","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js":"31","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js":"32","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js":"33","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js":"34","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js":"35","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js":"36","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js":"37","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js":"38","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js":"39","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js":"40","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js":"41","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Button.js":"42","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js":"43","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js":"44","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js":"45","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js":"46","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js":"47","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js":"48","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js":"49","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js":"50","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js":"51","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js":"52","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js":"53","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js":"54","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js":"55","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js":"56","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js":"57","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js":"58","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js":"59","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js":"60","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js":"61","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js":"62","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js":"63","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js":"64","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js":"65","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js":"66","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js":"67","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js":"68","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js":"69","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js":"70","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js":"71","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js":"72","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\BackToMain.js":"73","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js":"74","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js":"75","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js":"76","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js":"77","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js":"78","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js":"79","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js":"80","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js":"81","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js":"82","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js":"83","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js":"84","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js":"85","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js":"86","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js":"87","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js":"88","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js":"89","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js":"90","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js":"91","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js":"92","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js":"93","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js":"94","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js":"95","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js":"96","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\MenuIcon.js":"97","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js":"98"},{"size":717,"mtime":1610256425150,"results":"99","hashOfConfig":"100"},{"size":1687,"mtime":1610462325323,"results":"101","hashOfConfig":"100"},{"size":160,"mtime":1610256425013,"results":"102","hashOfConfig":"100"},{"size":1783,"mtime":1610461580485,"results":"103","hashOfConfig":"100"},{"size":374,"mtime":1610453770090,"results":"104","hashOfConfig":"100"},{"size":1363,"mtime":1610453770173,"results":"105","hashOfConfig":"100"},{"size":7821,"mtime":1610541358359,"results":"106","hashOfConfig":"100"},{"size":356,"mtime":1610453770164,"results":"107","hashOfConfig":"100"},{"size":450,"mtime":1610453770149,"results":"108","hashOfConfig":"100"},{"size":1370,"mtime":1610453770169,"results":"109","hashOfConfig":"100"},{"size":2552,"mtime":1610540567266,"results":"110","hashOfConfig":"100"},{"size":2017,"mtime":1610540306919,"results":"111","hashOfConfig":"100"},{"size":8556,"mtime":1610462325392,"results":"112","hashOfConfig":"100"},{"size":7915,"mtime":1610456274213,"results":"113","hashOfConfig":"100"},{"size":629,"mtime":1610456274122,"results":"114","hashOfConfig":"100"},{"size":1037,"mtime":1610456274215,"results":"115","hashOfConfig":"100"},{"size":838,"mtime":1610540306918,"results":"116","hashOfConfig":"100"},{"size":420,"mtime":1610453150551,"results":"117","hashOfConfig":"100"},{"size":701,"mtime":1610456274209,"results":"118","hashOfConfig":"100"},{"size":805,"mtime":1610256425141,"results":"119","hashOfConfig":"100"},{"size":835,"mtime":1610256425095,"results":"120","hashOfConfig":"100"},{"size":694,"mtime":1610256425101,"results":"121","hashOfConfig":"100"},{"size":805,"mtime":1610256425113,"results":"122","hashOfConfig":"100"},{"size":835,"mtime":1610256425131,"results":"123","hashOfConfig":"100"},{"size":694,"mtime":1610256425137,"results":"124","hashOfConfig":"100"},{"size":793,"mtime":1609826436588,"results":"125","hashOfConfig":"100"},{"size":707,"mtime":1609398026939,"results":"126","hashOfConfig":"100"},{"size":718,"mtime":1609826205313,"results":"127","hashOfConfig":"100"},{"size":749,"mtime":1610360405141,"results":"128","hashOfConfig":"100"},{"size":1178,"mtime":1609398269767,"results":"129","hashOfConfig":"100"},{"size":1221,"mtime":1610255541668,"results":"130","hashOfConfig":"100"},{"size":522,"mtime":1610255541679,"results":"131","hashOfConfig":"100"},{"size":800,"mtime":1610462325378,"results":"132","hashOfConfig":"100"},{"size":2232,"mtime":1610456274121,"results":"133","hashOfConfig":"100"},{"size":2719,"mtime":1610453770062,"results":"134","hashOfConfig":"100"},{"size":1510,"mtime":1610453770040,"results":"135","hashOfConfig":"100"},{"size":3915,"mtime":1610453770019,"results":"136","hashOfConfig":"100"},{"size":315,"mtime":1610453770051,"results":"137","hashOfConfig":"100"},{"size":40774,"mtime":1610462325402,"results":"138","hashOfConfig":"100"},{"size":42512,"mtime":1610462325397,"results":"139","hashOfConfig":"100"},{"size":293,"mtime":1610456274119,"results":"140","hashOfConfig":"100"},{"size":910,"mtime":1610256425082,"results":"141","hashOfConfig":"100"},{"size":78,"mtime":1610256425084,"results":"142","hashOfConfig":"100"},{"size":2043,"mtime":1610453770070,"results":"143","hashOfConfig":"100"},{"size":711,"mtime":1610453769964,"results":"144","hashOfConfig":"100"},{"size":1421,"mtime":1610453769946,"results":"145","hashOfConfig":"100"},{"size":1901,"mtime":1610462325405,"results":"146","hashOfConfig":"100"},{"size":3505,"mtime":1610453769842,"results":"147","hashOfConfig":"100"},{"size":6753,"mtime":1610453770077,"results":"148","hashOfConfig":"100"},{"size":1662,"mtime":1610453769973,"results":"149","hashOfConfig":"100"},{"size":544,"mtime":1610453769968,"results":"150","hashOfConfig":"100"},{"size":653,"mtime":1610453769974,"results":"151","hashOfConfig":"100"},{"size":924,"mtime":1610255541686,"results":"152","hashOfConfig":"100"},{"size":1334,"mtime":1610255541683,"results":"153","hashOfConfig":"100"},{"size":1098,"mtime":1610462325385,"results":"154","hashOfConfig":"100"},{"size":596,"mtime":1610255541696,"results":"155","hashOfConfig":"100"},{"size":834,"mtime":1610453769988,"results":"156","hashOfConfig":"100"},{"size":1102,"mtime":1610255541702,"results":"157","hashOfConfig":"100"},{"size":558,"mtime":1610255541703,"results":"158","hashOfConfig":"100"},{"size":413,"mtime":1610255541699,"results":"159","hashOfConfig":"100"},{"size":415,"mtime":1610255541700,"results":"160","hashOfConfig":"100"},{"size":765,"mtime":1610453769978,"results":"161","hashOfConfig":"100"},{"size":567,"mtime":1610255541676,"results":"162","hashOfConfig":"100"},{"size":455,"mtime":1610255541717,"results":"163","hashOfConfig":"100"},{"size":1084,"mtime":1610255541674,"results":"164","hashOfConfig":"100"},{"size":826,"mtime":1610453769959,"results":"165","hashOfConfig":"100"},{"size":17928,"mtime":1610540588273,"results":"166","hashOfConfig":"100"},{"size":876,"mtime":1610540588269,"results":"167","hashOfConfig":"100"},{"size":6547,"mtime":1610453769956,"results":"168","hashOfConfig":"100"},{"size":9149,"mtime":1610453769996,"results":"169","hashOfConfig":"100"},{"size":720,"mtime":1610453769834,"results":"170","hashOfConfig":"100"},{"size":2761,"mtime":1610453769931,"results":"171","hashOfConfig":"100"},{"size":1125,"mtime":1610453769928,"results":"172","hashOfConfig":"100"},{"size":2778,"mtime":1610462325389,"results":"173","hashOfConfig":"100"},{"size":639,"mtime":1610255541662,"results":"174","hashOfConfig":"100"},{"size":10986,"mtime":1610541412424,"results":"175","hashOfConfig":"100"},{"size":1158,"mtime":1610540588271,"results":"176","hashOfConfig":"100"},{"size":5381,"mtime":1610459561355,"results":"177","hashOfConfig":"100"},{"size":18358,"mtime":1610462325371,"results":"178","hashOfConfig":"100"},{"size":918,"mtime":1610255541586,"results":"179","hashOfConfig":"100"},{"size":2446,"mtime":1610453769846,"results":"180","hashOfConfig":"100"},{"size":2540,"mtime":1610456274211,"results":"181","hashOfConfig":"100"},{"size":2868,"mtime":1610540588275,"results":"182","hashOfConfig":"100"},{"size":788,"mtime":1610255541562,"results":"183","hashOfConfig":"100"},{"size":607,"mtime":1610255541558,"results":"184","hashOfConfig":"100"},{"size":575,"mtime":1610453769865,"results":"185","hashOfConfig":"100"},{"size":535,"mtime":1610453770024,"results":"186","hashOfConfig":"100"},{"size":2912,"mtime":1610453769852,"results":"187","hashOfConfig":"100"},{"size":1142,"mtime":1610453769875,"results":"188","hashOfConfig":"100"},{"size":1023,"mtime":1610453769882,"results":"189","hashOfConfig":"100"},{"size":557,"mtime":1610453769897,"results":"190","hashOfConfig":"100"},{"size":746,"mtime":1610453769949,"results":"191","hashOfConfig":"100"},{"size":465,"mtime":1610255541667,"results":"192","hashOfConfig":"100"},{"size":379,"mtime":1610255541657,"results":"193","hashOfConfig":"100"},{"size":355,"mtime":1610255541655,"results":"194","hashOfConfig":"100"},{"size":834,"mtime":1610255541653,"results":"195","hashOfConfig":"100"},{"size":490,"mtime":1610255541559,"results":"196","hashOfConfig":"100"},{"size":743,"mtime":1610456274214,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"gcv23r",{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"200"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"200"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"200"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"200"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"200"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"200"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"200"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"200"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"200"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"200"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"200"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"200"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"200"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"200"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js",[],["415","416"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js",["417","418"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport default function(SpecificComponent,option,adminRoute=null){\r\n\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    function AuthenticationCheck(props){\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        if(window.localStorage.getItem('isAuth')===null){\r\n            window.localStorage.setItem('isAuth','false');\r\n        }\r\n        \r\n\r\n        useEffect(()=>{\r\n        \r\n            dispatch(()=>{\r\n                console.log(window.localStorage.getItem('isAuth'));\r\n                    //로그인 하지 않은 상태\r\n                    if(window.localStorage.getItem('isAuth')==='false'&&window.location.pathname==='/register'){\r\n                        props.history.push('/register');\r\n                    }else if(window.localStorage.getItem('isAuth')==='false'){\r\n                        props.history.push('/login');\r\n                    }else{\r\n                        //로그인 한 상태\r\n                        if(adminRoute && window.localStorage.getItem('isAuth')==='true'){\r\n                            props.history.push('/');\r\n                        }else{\r\n                            if(option===false){\r\n                                props.history.push('/');\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n            })\r\n\r\n        },[])\r\n        \r\n        return(\r\n            <SpecificComponent {...props} user={user}/>\r\n        )\r\n\r\n    }\r\n\r\n    return AuthenticationCheck;\r\n\r\n}","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js",["419"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js",["420"],"import BlankTop from '../../components/common/BlankTop'\r\nimport TestCdWrapperContainer from '../../containers/test/TestCd/TestCdWrapperContainer'\r\nimport TestWrapperContainer from '../../containers/test/TestWrapperContainer'\r\n\r\nconst TestPage = ({ match }) => {\r\n  // state\r\n  return (\r\n    <>\r\n      <TestWrapperContainer>\r\n        <TestCdWrapperContainer match={match} />\r\n      </TestWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js",["421"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js",["422","423","424"],"import React, { useState } from \"react\";\r\nimport { withRouter,Link } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_action\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form,  Button,  } from 'antd';\r\nimport {UserOutlined,LockOutlined} from '@ant-design/icons';\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\"\r\nimport TextComponent from '../../../components/common/TextComponent';\r\nimport BlankTop from '../../../components/common/BlankTop';\r\nimport UnderLineComponent from './UnderLineComponent';\r\nimport Bg1 from '../../../assets/images/login_background1.jpg';\r\nimport Bg2 from '../../../assets/images/login_background2.jpg';\r\nimport Bg3 from '../../../assets/images/login_background3.jpg';\r\nimport logo1 from '../../../assets/images/image_watermark.png';\r\nimport Text from './Text';\r\nimport ColorButton from './ColorButton';\r\n\r\nconst Background = styled.div`\r\n    width:100vw;\r\n    height:1000vh;\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-color:  rgba( 12, 26, 34, 1);\r\n    background-size:contain;\r\n    @media (min-width: 768px) and (max-width:1024px){\r\n      background-image: url(${Bg2});\r\n    }\r\n @media  (min-width:1024px) {\r\n  background-image: url(${Bg1});\r\n    }\r\n    @media (max-width: 768px) {\r\n      background-image: url(${Bg3});\r\n    }\r\n`;\r\nconst Wrapper=styled.div`\r\n position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    margin-top:50%;\r\n      width:100%auto;\r\n    }\r\n\r\n    @media (min-width: 1024px) { //desktop \r\n      margin-top:17%;\r\n      width:100%auto;\r\n    }\r\n    @media (max-width: 767px) { //iphone\r\n      width:100%auto;\r\n        margin-top:30%;\r\n  }` \r\n\r\n\r\nconst MyIcon = styled.img`\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    width:180px;\r\n    }\r\n\r\n    @media (min-width: 1024px) { //desktop\r\n    width:221px;\r\n    }\r\n    @media (max-width: 767px) { //iphone\r\n      width:300px;\r\n  }\r\n`;\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo1,\r\n};\r\n\r\nconst Input =styled.input`\r\nbackground-color:  rgba( 12, 26, 34, 0);\r\nborder-radius:0px;\r\nborder-color:rgba( 12, 26, 34, 0);\r\nwidth: 400px;\r\ncolor:white;\r\noutline:none;\r\n@media (max-width: 767px) { //iphone\r\n      width:200px;\r\n  }\r\n`\r\n\r\nconst Content=styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  @media (max-width: 767px) { //iphone\r\n    margin-left:20%;\r\n  }\r\n`\r\n\r\n\r\nfunction LoginPage(props) {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n\r\n  const goToMain = () => {\r\n    props.history.push('/register');}\r\n\r\n  return (\r\n    <Background><Wrapper>\r\n       <MyIcon></MyIcon>\r\n  <BlankTop DesktopMargin='3' TabletMargin='3' MobileMargin='3' />\r\n  <TextComponent title=\"로그인\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \r\n  <BlankTop DesktopMargin='5' TabletMargin='3' MobileMargin='5' />\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.success) {\r\n                window.localStorage.setItem('isAuth','true');\r\n                window.localStorage.setItem('jwt',response.payload.data.accessToken);\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again');\r\n                window.localStorage.setItem('isAuth','false');\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          \r\n\r\n            <form onSubmit={handleSubmit} style={{ minWidth: '100px' }}>\r\n\r\n              <Form.Item required>\r\n              <Content>\r\n              <Text title=\"아이디&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  \r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                \r\n                 </Content>\r\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='30' />\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n              <Content>\r\n              <Text title=\"패스워드&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                </Content>\r\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='30' />\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <div>\r\n                <ColorButton font='12' border=\"#60FFDA\" color=\"#ffffff\"  ><Button onClick={goToMain} ghost='true' type='text'  style={{ minWidth: '100%' }} >\r\n                <p style={{ color: '#ffffff'}}>&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;회원가입&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;</p>\r\n                </Button></ColorButton>\r\n\r\n                <ColorButton font='12' background=\"#60FFDA\" color=\"#000000\" border=\"#60FFDA\"  ><Button ghost='true' type='text' htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 로그인&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                </Button></ColorButton>\r\n                </div>\r\n              </Form.Item>\r\n            </form>\r\n        );\r\n      }}\r\n    </Formik> </Wrapper></Background>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js",["425","426","427","428"],"import{LOGIN_USER,REGISTER_USER, AUTH_USER, LOGOUT_USER,} from '../_actions/types'\r\n\r\n\r\nexport default function (state={},action){\r\n    switch (action.type){\r\n        case LOGIN_USER:\r\n                return {...state,loginSuccess:action.payload};\r\n            break;\r\n        case REGISTER_USER:\r\n                return {...state,register:action.payload};\r\n            break;\r\n            case AUTH_USER:\r\n                return {...state,userData:action.payload};\r\n            break; \r\n            case LOGOUT_USER:\r\n                return { }       \r\n        \r\n        default:\r\n            return state;\r\n\r\n        \r\n    }\r\n}","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js",["429"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/common/Button\";\r\n\r\n\r\n\r\nconst MyPageButton = () => { \r\n\r\n\r\n    return(\r\n        <div>\r\n        <Button font='12' >수정</Button>\r\n        <Button font='12' >삭제</Button>\r\n        <Button font='12' color=\"#60FFDA\" border=\"#60FFDA\"> 플레이</Button>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\nexport default MyPageButton;",["430","431"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js",["432"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst CircleBorder = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background: linear-gradient( rgba(96,255,205,1) ,rgba(96,255,205,0.2) ,rgba(96,255,205,0.01) );\r\n  box-shadow:  5px 0px 20px -5px  rgba(96,255,205,0.5);\r\n  animation: spin .8s linear 0s infinite;\r\n\r\n  @media  (max-width:1024px) { \r\n    width: 30px;\r\n  height: 30px;\r\n  padding: 4px;\r\n    }\r\n    \r\n    @media (min-width: 1024px) {\r\n      width: 65px;\r\n     height: 65px;\r\n     padding: 7px;\r\n    }\r\n`;\r\n\r\n\r\nconst CircleCore =styled.div`\r\n width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(12,28,48,1);\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst SpinnerBox = styled.div`\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(359deg);\r\n  }\r\n  to{\r\n    transform: rotate(0);\r\n  }\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n`;\r\n\r\nconst LoadingComponent = ({}) => {\r\n    return(\r\n   \r\n        <SpinnerBox>\r\n        <CircleBorder>\r\n            <CircleCore></CircleCore>\r\n        </CircleBorder>\r\n    </SpinnerBox>\r\n\r\n    );\r\n\r\n};\r\nexport default LoadingComponent;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js",["433"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\nimport TestEnd from \"../../components/test_end/TestEnd\";\r\nimport { useHistory, matchPath } from \"react-router-dom\";\r\n\r\nconst TestEndContainer = ({ match }) => {\r\n  const history = useHistory();\r\n  const parentMatch = matchPath(history.location.pathname, {\r\n    path: \"/test/:id\",\r\n  });\r\n  console.log(parentMatch);\r\n  console.log(parentMatch.params.id);\r\n\r\n  const [recommend, setRecommend] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const [title, setTitle] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const url = \"http://3.35.187.65:3000\";\r\n\r\n  const getRecommendAPI = async () => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}${history.location.pathname}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET RECOMMENDATION\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET RECOMMENDATION\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getRecommendAPI();\r\n      try {\r\n        setRecommend({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setRecommend({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setRecommend({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const getTitleAPI = async (id) => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}/test/${id}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET TITLE\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET TITLE\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getTitleAPI(parentMatch.params.id);\r\n      try {\r\n        setTitle({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setTitle({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setTitle({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, [parentMatch.params.id]);\r\n\r\n  if (recommend.status === \"idle\" || title.status === \"idle\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"rejected\" || title.status === \"rejected\") {\r\n    return <>Error</>;\r\n  } else if (recommend.status === \"pending\" || title.status === \"pending\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"resolved\" && title.status === \"resolved\") {\r\n    return <TestEnd recommendList={recommend.item.data} title={title.item} />;\r\n  }\r\n};\r\n\r\nexport default TestEndContainer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js",["434"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Background from \"../../components/main/Main\";\r\nimport axios from \"axios\";\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\n\r\nconst MainContainer = ({ match }) => {\r\n  const [category, setCategory] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const url = \"http://3.35.187.65:3000\";\r\n\r\n  // categoryList\r\n  const getCategoryAPI = async () => {\r\n    const { data } = await axios.get(`${url}/main/`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET CATEGORY\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET CATEGORY\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getCategoryAPI();\r\n      try {\r\n        setCategory({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setCategory({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setCategory({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // testList\r\n  const [test, setTest] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const getTestAPI = async () => {\r\n    const { data } = await axios.get(`${url}/main/`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET TEST\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET TEST\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getTestAPI();\r\n      try {\r\n        setTest({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setTest({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setTest({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const [sort, setSort] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n    onClick: false,\r\n  });\r\n\r\n  const onClickDisplay = useCallback(\r\n    (id) => {\r\n      const sortId = id;\r\n      console.log(\"최상위 컴포넌트\", sortId);\r\n      (async () => {\r\n        const finalData = { ...(await getSortAPI(sortId)) };\r\n        console.log(finalData);\r\n        try {\r\n          setSort({\r\n            status: \"pending\",\r\n            item: null,\r\n            onClick: false,\r\n          });\r\n          setSort({\r\n            status: \"resolved\",\r\n            item: finalData,\r\n            onClick: true,\r\n          });\r\n        } catch (e) {\r\n          setSort({\r\n            status: \"rejected\",\r\n            item: null,\r\n            onClick: false,\r\n          });\r\n        }\r\n      })();\r\n\r\n      console.log(sort.item);\r\n    },\r\n    [sort]\r\n  );\r\n\r\n  // 클릭한 카테고리 id를 받아와서, 해당하는 테스트만 return하는 메소드\r\n  const getSortAPI = async (sortId) => {\r\n    const { data } = await axios.get(`${url}/main`);\r\n    console.log(data);\r\n    let finalData = [];\r\n    data.data.tests.forEach((req) => {\r\n      if (req.Category.id === sortId) {\r\n        finalData.push(req);\r\n      }\r\n    });\r\n    if (sortId === 10) {\r\n      finalData = data.data.tests;\r\n    }\r\n    try {\r\n      console.log(\"[SUCCESS] GET SORT\", finalData, finalData.length);\r\n      return finalData;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET SORT\");\r\n    }\r\n  };\r\n\r\n  // input 관련 state\r\n\r\n  switch (category.status) {\r\n    case \"idle\":\r\n      return <StartLoading />;\r\n    case \"rejected\":\r\n      return <>Error</>;\r\n    case \"pending\":\r\n      return <StartLoading />;\r\n    case \"resolved\":\r\n    default:\r\n      // ={category.item.data.tests}\r\n\r\n      return (\r\n        <Background\r\n          categoryList={category.item.data.categories}\r\n          testList={!sort.onClick ? category.item.data.tests : sort.item}\r\n          allList={category.item.data.tests}\r\n          onClickDisplay={onClickDisplay}\r\n        />\r\n      );\r\n  }\r\n};\r\n\r\nexport default MainContainer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js",["435"],"import React from 'react'\r\nimport TestBackground from '../../components/test/TestBackground'\r\nimport Test from '../../components/test/TestBackground'\r\n\r\nfunction TestContainer({ children, match }) {\r\n  return (\r\n    <>\r\n      <TestBackground children={children} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestContainer\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js",["436","437","438"],"import BlankTop from \"../../../components/common/BlankTop\";\r\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\r\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\r\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\r\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\r\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\r\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\r\nimport TopInner from \"../../../components/testmaking/TopInner\";\r\nimport InputCategoryContainer from \"../InputCategoryContainer\";\r\nimport InputsWrap from '../../../components/testmaking/questionlist/input/InputsWrap';\r\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\r\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\r\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\r\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\r\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\r\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\r\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\r\nimport PlayerContainer from \"../player/PlayerContainer\";\r\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\r\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\r\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\r\nimport React,{useEffect, useState} from 'react';\r\nimport StartTimeContainer from \"../player/StartTimeContainer\";\r\nimport axios from \"axios\";\r\nimport LoadingComponent from \"../../../components/common/LoadingComponent\";\r\nimport TextComponent from \"../../../components/common/TextComponent\";\r\n\r\nexport let player0;\r\nexport let player1;\r\nexport let player2;\r\nexport let player3;\r\nexport let player4;\r\nexport let player5;\r\nexport let player6;\r\nexport let player7;\r\nexport let player8;\r\nexport let player9;\r\nexport let send=true ;\r\nexport let viewLoadingCount = 0;\r\nconst TestMakingFormContainer = ({history}) => {\r\n  const jwt = window.localStorage.getItem('jwt');\r\n    let checkCurrentTime0;\r\n    let checkCurrentTime1;\r\n    let checkCurrentTime2;\r\n    let checkCurrentTime3;\r\n    let checkCurrentTime4;\r\n    let checkCurrentTime5;\r\n    let checkCurrentTime6;\r\n    let checkCurrentTime7;\r\n    let checkCurrentTime8;\r\n    let checkCurrentTime9;\r\n\r\n    const [timer, setTimer] = useState(0);\r\n    const [testTitle,setTestTitle] = useState('');\r\n    const [testDescription,setTestDescription] = useState('');\r\n    const [testCategory,setTestCategory] = useState('');\r\n\r\n    const [questions,setQuestions] = useState([{\r\n        questionNumber : 1,\r\n        questionYoutubeURL : \"\",\r\n        questionStartsfrom : \"\",\r\n        hint : \"\",\r\n        answer: \"\",\r\n        answerYoutubeURL: \"\",\r\n    }]);\r\n    const [links,setLinks] = useState([{\r\n      questionNumber : 1,\r\n      questionYoutubeURL : \"\",\r\n      answerYoutubeURL: \"\",\r\n    }]);\r\n\r\n    const [viewLoading,setViewLoading] = useState(false);\r\n    const [serverLoading,setServerLoading] = useState(true);\r\n\r\n    const [isPlaying0, setPlaying0] = useState(false);\r\n    const [isLoading0, setLoading0] = useState(false);\r\n    const [currentTime0, setCurrentTime0] = useState(\"00:00\");\r\n    const [totalTime0, setTotalTime0] = useState(\"00:00\");\r\n\r\n    const [isPlaying1, setPlaying1] = useState(false);\r\n    const [isLoading1, setLoading1] = useState(false);\r\n    const [currentTime1, setCurrentTime1] = useState(\"00:00\");\r\n    const [totalTime1, setTotalTime1] = useState(\"00:00\");\r\n\r\n    const [isPlaying2, setPlaying2] = useState(false);\r\n    const [isLoading2, setLoading2] = useState(false);\r\n    const [currentTime2, setCurrentTime2] = useState(\"00:00\");\r\n    const [totalTime2, setTotalTime2] = useState(\"00:00\");\r\n\r\n    const [isPlaying3, setPlaying3] = useState(false);\r\n    const [isLoading3, setLoading3] = useState(false);\r\n    const [currentTime3, setCurrentTime3] = useState(\"00:00\");\r\n    const [totalTime3, setTotalTime3] = useState(\"00:00\");\r\n\r\n    const [isPlaying4, setPlaying4] = useState(false);\r\n    const [isLoading4, setLoading4] = useState(false);\r\n    const [currentTime4, setCurrentTime4] = useState(\"00:00\");\r\n    const [totalTime4, setTotalTime4] = useState(\"00:00\");\r\n\r\n    const [isPlaying5, setPlaying5] = useState(false);\r\n    const [isLoading5, setLoading5] = useState(false);\r\n    const [currentTime5, setCurrentTime5] = useState(\"00:00\");\r\n    const [totalTime5, setTotalTime5] = useState(\"00:00\");\r\n\r\n    const [isPlaying6, setPlaying6] = useState(false);\r\n    const [isLoading6, setLoading6] = useState(false);\r\n    const [currentTime6, setCurrentTime6] = useState(\"00:00\");\r\n    const [totalTime6, setTotalTime6] = useState(\"00:00\");\r\n\r\n    const [isPlaying7, setPlaying7] = useState(false);\r\n    const [isLoading7, setLoading7] = useState(false);\r\n    const [currentTime7, setCurrentTime7] = useState(\"00:00\");\r\n    const [totalTime7, setTotalTime7] = useState(\"00:00\");\r\n\r\n    const [isPlaying8, setPlaying8] = useState(false);\r\n    const [isLoading8, setLoading8] = useState(false);\r\n    const [currentTime8, setCurrentTime8] = useState(\"00:00\");\r\n    const [totalTime8, setTotalTime8] = useState(\"00:00\");\r\n\r\n    const [isPlaying9, setPlaying9] = useState(false);\r\n    const [isLoading9, setLoading9] = useState(false);\r\n    const [currentTime9, setCurrentTime9] = useState(\"00:00\");\r\n    const [totalTime9, setTotalTime9] = useState(\"00:00\");\r\n\r\n    const changeTitle = e => {\r\n      const {target: {value}} = e;\r\n      setTestTitle(value);\r\n    }\r\n    const changeDescription = e => {\r\n      const {target: {value}} = e;\r\n      setTestDescription(value);\r\n    }\r\n\r\n    const changeCategory = e => {\r\n      setTestCategory(e);\r\n    }\r\n\r\n    const changeText = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = value;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n\r\n    }\r\n\r\n    const changeStartTime = questionNumber => e => {\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[\"questionStartsfrom\"] = e;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n    }\r\n\r\n    \r\n\r\n    const addQuestions = () => {\r\n        if(questions.length === 10) return\r\n        let data = {\r\n            questionNumber : questions.length +1,\r\n            questionYoutubeURL : \"\",\r\n            questionStartsfrom : \"\",\r\n            hint : \"\",\r\n            answer: \"\",\r\n            answerYoutubeURL: \"\"\r\n\r\n        };\r\n\r\n        setQuestions([...questions, data]);\r\n        let data2 = {\r\n          questionNumber : questions.length +1,\r\n          questionYoutubeURL : \"\",\r\n          answerYoutubeURL: \"\"\r\n        }\r\n        setLinks([...links,data2]);\r\n    }\r\n\r\n    const deleteQuestions = questionNumber => () => {\r\n        let tempQuestions = questions.filter(question => {\r\n            return question.questionNumber !== questionNumber + 1;\r\n        })\r\n        let i = 1;\r\n        const reTempQuestions = tempQuestions.map(question => {\r\n            question.questionNumber = i;\r\n            i++;\r\n            return question;\r\n        })\r\n\r\n        setQuestions(reTempQuestions);\r\n        let tempLinks = links.filter(link => {\r\n          return link.questionNumber !== questionNumber + 1;\r\n      })\r\n      let l = 1;\r\n      const reTempLinks = tempLinks.map(link => {\r\n          link.questionNumber = l;\r\n          l++;\r\n          return link;\r\n      })\r\n\r\n      setLinks(reTempLinks);\r\n    }\r\n\r\n    const getYoutubeId = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        if(value)  {\r\n            const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n            const matchs = value.match(regExp);\r\n            if(value!==''&&matchs&&matchs[7].length===11){\r\n\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = matchs[7];\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n            }else{\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = \"\";\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n                const tempsLinks = links.map(link => {\r\n                  if( link.questionNumber === questionNumber+1 ){\r\n                    link[name] = value;\r\n                  }\r\n      \r\n                  return link;\r\n      \r\n              });  \r\n              setLinks(tempsLinks);\r\n            }\r\n        }else{\r\n          const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = \"\";\r\n            }\r\n\r\n            return question;\r\n\r\n        }\r\n        \r\n        );  \r\n        const tempsLinks = links.map(link => {\r\n          if( link.questionNumber === questionNumber+1 ){\r\n            link[name] = \"\";\r\n          }\r\n\r\n          return link;\r\n\r\n      });  \r\n      setLinks(tempsLinks);\r\n        setQuestions(tempsQustios);\r\n        }\r\n        \r\n    }\r\n\r\n  const playerState0 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying0(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying0(false);\r\n    }\r\n  };\r\n  const playerState1 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying1(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying1(false);\r\n    }\r\n  };\r\n  const playerState2 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying2(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying2(false);\r\n    }\r\n  };\r\n  const playerState3 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying3(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying3(false);\r\n    }\r\n  };\r\n  const playerState4 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying4(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying4(false);\r\n    }\r\n  };\r\n  const playerState5 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying5(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying5(false);\r\n    }\r\n  };\r\n  const playerState6 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying6(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying6(false);\r\n    }\r\n  };\r\n  const playerState7 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying7(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying7(false);\r\n    }\r\n  };\r\n  const playerState8 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying8(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying8(false);\r\n    }\r\n  };\r\n  const playerState9 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying9(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying9(false);\r\n    }\r\n  };\r\n\r\n  const transTime = (seconds) => {\r\n    if (!seconds) {      return;\r\n    }\r\n    const hour = parseInt(seconds / 3600);\r\n    const min = parseInt((seconds % 3600) / 60);\r\n    const sec = seconds % 60;\r\n\r\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\r\n      sec < 10 ? \"0\" + String(sec) : sec\r\n    }`;\r\n  };\r\n  const onSubmitHandler = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const variable ={\r\n        title: testTitle,\r\n        description: testDescription,\r\n        CategoryId: testCategory,\r\n        questions: questions,\r\n\r\n    }\r\n    const config = {\r\n      headers : {\"jwt\":jwt}\r\n  }\r\n  setServerLoading(false);\r\n  if(testTitle.length !== 0 && testDescription.length !== 0 && testCategory.length !== 0){\r\n    for(let i = 0; i < questions.length; i++ ){\r\n      if(questions[i].questionYoutubeURL.length === 0 ||questions[i].questionStartsfrom.length === 0 ||questions[i].hint.length === 0 ||\r\n      questions[i].answer.length === 0 ||questions[i].answerYoutubeURL.length === 0){\r\n        send = false;\r\n      }\r\n    }\r\n    if(send===true){\r\n      if (timer) {\r\n        console.log('clear timer');\r\n        clearTimeout(timer);\r\n      }\r\n      const newTimer = setTimeout(async () => {\r\n        try {\r\n          axios.post('http://3.35.187.65:3000/test',variable,config)\r\n        .then(response=> {\r\n            if(response.data.success){\r\n              history.push(\"/\");\r\n            }\r\n        })\r\n        } catch (e) {\r\n          console.error('error', e);\r\n          setServerLoading(true);\r\n        }\r\n      }, 5000);\r\n      setTimer(newTimer);\r\n      \r\n    }else{\r\n      setServerLoading(true);\r\n    }\r\n\r\n  }else{\r\n    setServerLoading(true);\r\n  }\r\n\r\n}\r\n\r\n  const setTime0 = () => {\r\n    setCurrentTime0(transTime(player0.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime1 = () => {\r\n    setCurrentTime1(transTime(player1.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime2 = () => {\r\n    setCurrentTime2(transTime(player2.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime3 = () => {\r\n    setCurrentTime3(transTime(player3.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime4 = () => {\r\n    setCurrentTime4(transTime(player4.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime5 = () => {\r\n    setCurrentTime5(transTime(player5.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime6 = () => {\r\n    setCurrentTime6(transTime(player6.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime7 = () => {\r\n    setCurrentTime7(transTime(player7.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime8 = () => {\r\n    setCurrentTime8(transTime(player8.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime9 = () => {\r\n    setCurrentTime9(transTime(player9.getCurrentTime().toFixed()));\r\n  };\r\n  const onReadyAPI0 = () => {\r\n      setLoading0(true);\r\n      setPlaying0(false);\r\n      checkCurrentTime0 = setInterval(setTime0, 1000);\r\n      setTotalTime0(player0.getDuration());\r\n\r\n  };\r\n  const onReadyAPI1 = () => {\r\n    setLoading1(true);\r\n    setPlaying1(false);\r\n    checkCurrentTime1 = setInterval(setTime1, 1000);\r\n    setTotalTime1(player1.getDuration());\r\n  };\r\n  const onReadyAPI2 = () => {\r\n    setLoading2(true);\r\n    setPlaying2(false);\r\n    checkCurrentTime2 = setInterval(setTime2, 1000);\r\n    setTotalTime2(player2.getDuration());\r\n  };\r\n  const onReadyAPI3 = () => {\r\n    setLoading3(true);\r\n    setPlaying3(false);\r\n    checkCurrentTime3 = setInterval(setTime3, 1000);\r\n    setTotalTime3(player3.getDuration());\r\n  };\r\n  const onReadyAPI4 = () => {\r\n    setLoading4(true);\r\n    setPlaying4(false);\r\n    checkCurrentTime4 = setInterval(setTime4, 1000);\r\n    setTotalTime4(player4.getDuration());\r\n  };\r\n  const onReadyAPI5 = () => {\r\n    setLoading5(true);\r\n    setPlaying5(false);\r\n    checkCurrentTime5 = setInterval(setTime5, 1000);\r\n    setTotalTime5(player5.getDuration());\r\n  };\r\n  const onReadyAPI6 = () => {\r\n    setLoading6(true);\r\n    setPlaying6(false);\r\n    checkCurrentTime6 = setInterval(setTime6, 1000);\r\n    setTotalTime6(player6.getDuration());\r\n  };\r\n  const onReadyAPI7 = () => {\r\n    setLoading7(true);\r\n    setPlaying7(false);\r\n    checkCurrentTime7 = setInterval(setTime7, 1000);\r\n    setTotalTime7(player7.getDuration());\r\n  };\r\n  const onReadyAPI8 = () => {\r\n    setLoading8(true);\r\n    setPlaying8(false);\r\n    checkCurrentTime8 = setInterval(setTime8, 1000);\r\n    setTotalTime8(player8.getDuration());\r\n  };\r\n  const onReadyAPI9 = () => {\r\n    setLoading9(true);\r\n    setPlaying9(false);\r\n    checkCurrentTime9 = setInterval(setTime9, 1000);\r\n    setTotalTime9(player9.getDuration());\r\n  };\r\n\r\n\r\n    const playHandler0 = () => {\r\n    setPlaying0(!isPlaying0);\r\n    } \r\n\r\n    const playHandler1 = () => {\r\n    setPlaying1(!isPlaying1);\r\n    } \r\n    const playHandler2 = () => {\r\n    setPlaying2(!isPlaying2);\r\n    } \r\n    const playHandler3 = () => {\r\n        setPlaying3(!isPlaying3);\r\n    } \r\n    const playHandler4 = () => {\r\n        setPlaying4(!isPlaying4);\r\n    } \r\n    const playHandler5 = () => {\r\n        setPlaying5(!isPlaying5);\r\n    } \r\n    const playHandler6 = () => {\r\n        setPlaying6(!isPlaying6);\r\n    } \r\n    const playHandler7 = () => {\r\n        setPlaying7(!isPlaying7);\r\n    } \r\n    const playHandler8 = () => {\r\n        setPlaying8(!isPlaying8);\r\n    } \r\n    const playHandler9 = () => {\r\n        setPlaying9(!isPlaying9);\r\n    } \r\n    \r\n\r\n    const backClick0 = () => {\r\n        if(isLoading0)player0.seekTo(player0.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick1 = () => {\r\n        if(isLoading1)player1.seekTo(player1.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick2 = () => {\r\n        if(isLoading2)player2.seekTo(player2.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick3 = () => {\r\n        if(isLoading3)player3.seekTo(player3.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick4 = () => {\r\n        if(isLoading4)player4.seekTo(player4.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick5 = () => {\r\n        if(isLoading5)player5.seekTo(player5.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick6 = () => {\r\n        if(isLoading6)player6.seekTo(player6.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick7 = () => {\r\n        if(isLoading7)player7.seekTo(player7.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick8 = () => {\r\n        if(isLoading8)player8.seekTo(player8.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick9 = () => {\r\n        if(isLoading9)player9.seekTo(player9.getCurrentTime() - 10, true)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://www.youtube.com/iframe_api';\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n        \r\n        window.onYouTubeIframeAPIReady = () => {\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n          player0 = new window.YT.Player(`player0`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3001'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI0,\r\n              onStateChange: playerState0,\r\n            },\r\n          });\r\n          player1 = new window.YT.Player(`player1`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI1,\r\n              onStateChange: playerState1,\r\n            },\r\n          });\r\n          player2 = new window.YT.Player(`player2`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI2,\r\n              onStateChange: playerState2,\r\n            },\r\n          });\r\n          player3 = new window.YT.Player(`player3`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI3,\r\n              onStateChange: playerState3,\r\n            },\r\n          });\r\n          player4 = new window.YT.Player(`player4`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI4,\r\n              onStateChange: playerState4,\r\n            },\r\n          });\r\n          player5 = new window.YT.Player(`player5`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI5,\r\n              onStateChange: playerState5,\r\n            },\r\n          });\r\n          player6 = new window.YT.Player(`player6`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI6,\r\n              onStateChange: playerState6,\r\n            },\r\n          });\r\n          player7 = new window.YT.Player(`player7`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI7,\r\n              onStateChange: playerState7,\r\n            },\r\n          });\r\n          player8 = new window.YT.Player(`player8`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI8,\r\n              onStateChange: playerState8,\r\n            },\r\n          });\r\n          player9 = new window.YT.Player(`player9`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI9,\r\n              onStateChange: playerState9,\r\n            },\r\n          });\r\n\r\n        }\r\n        return () => {\r\n          clearInterval(checkCurrentTime0);\r\n          clearInterval(checkCurrentTime1);\r\n          clearInterval(checkCurrentTime2);\r\n          clearInterval(checkCurrentTime3);\r\n          clearInterval(checkCurrentTime4);\r\n          clearInterval(checkCurrentTime5);\r\n          clearInterval(checkCurrentTime6);\r\n          clearInterval(checkCurrentTime7);\r\n          clearInterval(checkCurrentTime8);\r\n          clearInterval(checkCurrentTime9);\r\n\r\n        };\r\n        \r\n      }, []);\r\n\r\n      useEffect(()=>{\r\n        if(viewLoadingCount===0){\r\n          if(isLoading0&&\r\n            isLoading1&&\r\n            isLoading2&&\r\n            isLoading3&&\r\n            isLoading4&&\r\n            isLoading5&&\r\n            isLoading6&&\r\n            isLoading7&&\r\n            isLoading8&&\r\n            isLoading9){\r\n              setViewLoading(true)\r\n              viewLoadingCount++;   \r\n              setLoading0(false);\r\n              setLoading1(false);\r\n              setLoading2(false);\r\n              setLoading3(false);\r\n              setLoading4(false);\r\n              setLoading5(false);\r\n              setLoading6(false);\r\n              setLoading7(false);\r\n              setLoading8(false);\r\n              setLoading9(false);\r\n\r\n              }\r\n            }\r\n        },[isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9]);\r\n\r\n\r\n      if (isLoading0) {\r\n        if (isPlaying0) {\r\n          player0?.playVideo();\r\n        } else {\r\n          player0?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading1) {    \r\n        if (isPlaying1) {\r\n          player1?.playVideo();\r\n\r\n        } else {\r\n          player1?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading2) {\r\n          if (isPlaying2) {\r\n              player2?.playVideo();\r\n            } else {\r\n             player2?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading3) {\r\n        if (isPlaying3) {\r\n            player3?.playVideo();\r\n          } else {\r\n           player3?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading4) {\r\n        if (isPlaying4) {\r\n            player4?.playVideo();\r\n          } else {\r\n           player4?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading5) {\r\n        if (isPlaying5) {\r\n            player5?.playVideo();\r\n          } else {\r\n           player5?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading6) {\r\n        if (isPlaying6) {\r\n            player6?.playVideo();\r\n          } else {\r\n           player6?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading7) {\r\n        if (isPlaying7) {\r\n            player7?.playVideo();\r\n          } else {\r\n           player7?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading8) {\r\n        if (isPlaying8) {\r\n            player8?.playVideo();\r\n          } else {\r\n           player8?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading9) {\r\n        if (isPlaying9) {\r\n            player9?.playVideo();\r\n          } else {\r\n           player9?.pauseVideo();\r\n      }\r\n    }\r\n\r\n    return(\r\n      !viewLoading ?  \r\n      <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center',flexDirection:\"column\"}}>\r\n         <LoadingComponent/>\r\n         <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n         <TextComponent title={\"로딩중...\"} DesktopLength=\"14\" TabletLength=\"14\" MobileLength='14'/>\r\n      </div>\r\n       : \r\n      \r\n      <form method='post' onSubmit={onSubmitHandler} >\r\n            <TopInner>\r\n                <table></table>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='제목'/>\r\n                    <TopInput inputName='title' inputPlaceholder='최대 25자' inputMaxLength='25' changeHandler={changeTitle} value={testTitle} />\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='내용'/>\r\n                    <TopInput inputName='description' inputPlaceholder='최대 45자' inputMaxLength='45' changeHandler={changeDescription} value={testDescription}/>\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='카테고리'/>\r\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요' changeCategory={changeCategory} testCategory={testCategory}/>\r\n                </TopInputWrap>\r\n            </TopInner>\r\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\r\n            <QuestionListTitle/>\r\n\r\n            {questions.length !== 0 && (\r\n            <QuestionListInner>\r\n                {questions.map((d,i)=>(\r\n                 <div key={i}>\r\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\r\n                    <InputsWrap >\r\n                        <QuestionListLeftWrap >\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text={i!==9?\"Qustion00\"+(i+1):\"Qustion010\"} />\r\n                                <QuestionListInput inputName='answer' inputMaxLength=\"20\" inputPlaceholder='정답을 적어주세요 (최대 20자)'  changeText={changeText(i)} value={d.answer}/>\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListHintWrap>\r\n                                <QuestionListInputText text='Hint' />\r\n                                <QuestionListInput inputName='hint' inputMaxLength=\"10\" inputPlaceholder='힌트를 적어주세요 (최대 10자)'  changeText={changeText(i)} value={d.hint} />\r\n                            </QuestionListHintWrap>\r\n                        </QuestionListLeftWrap>\r\n\r\n                        <QuestionListRightWrap>\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].questionYoutubeURL} questionURL={links[i].questionYoutubeURL} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\r\n\r\n                           {questions[i].questionYoutubeURL!==\"\"||questions[i].questionYoutubeURL ? \r\n                            <PlayerWrap>\r\n                               <PlayerContainer questionUrl={questions[i].questionYoutubeURL} \r\n                                                        player={\r\n                                                            i===0?player0:\r\n                                                            i===1?player1:\r\n                                                            i===2?player2:\r\n                                                            i===3?player3:\r\n                                                            i===4?player4:\r\n                                                            i===5?player5:\r\n                                                            i===6?player6:\r\n                                                            i===7?player7:\r\n                                                            i===8?player8:\r\n                                                            player9\r\n\r\n                                                        } \r\n                                                        i={i} \r\n                                                        isPlaying={\r\n                                                            i===0?isPlaying0:\r\n                                                            i===1?isPlaying1:\r\n                                                            i===2?isPlaying2:\r\n                                                            i===3?isPlaying3:\r\n                                                            i===4?isPlaying4:\r\n                                                            i===5?isPlaying5:\r\n                                                            i===6?isPlaying6:\r\n                                                            i===7?isPlaying7:\r\n                                                            i===8?isPlaying8:\r\n                                                                  isPlaying9\r\n                                                            }\r\n                                                        isLoading={\r\n                                                            i===0?isLoading0:\r\n                                                            i===1?isLoading1:\r\n                                                            i===2?isLoading2:\r\n                                                            i===3?isLoading3:\r\n                                                            i===4?isLoading4:\r\n                                                            i===5?isLoading5:\r\n                                                            i===6?isLoading6:\r\n                                                            i===7?isLoading7:\r\n                                                            i===8?isLoading8:\r\n                                                            isLoading9\r\n\r\n                                                        }\r\n                                                        currentTime={\r\n                                                            i===0?currentTime0:\r\n                                                            i===1?currentTime1:\r\n                                                            i===2?currentTime2:\r\n                                                            i===3?currentTime3:\r\n                                                            i===4?currentTime4:\r\n                                                            i===5?currentTime5:\r\n                                                            i===6?currentTime6:\r\n                                                            i===7?currentTime7:\r\n                                                            i===8?currentTime8:\r\n                                                            currentTime9\r\n\r\n                                                        }\r\n                                                        totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9\r\n\r\n                                                        }\r\n                                                        playHandler={\r\n                                                            i===0?playHandler0:\r\n                                                            i===1?playHandler1:\r\n                                                            i===2?playHandler2:\r\n                                                            i===3?playHandler3:\r\n                                                            i===4?playHandler4:\r\n                                                            i===5?playHandler5:\r\n                                                            i===6?playHandler6:\r\n                                                            i===7?playHandler7:\r\n                                                            i===8?playHandler8:\r\n                                                            playHandler9\r\n                                                        }\r\n                                                        backClick={\r\n                                                            i===0?backClick0:\r\n                                                            i===1?backClick1:\r\n                                                            i===2?backClick2:\r\n                                                            i===3?backClick3:\r\n                                                            i===4?backClick4:\r\n                                                            i===5?backClick5:\r\n                                                            i===6?backClick6:\r\n                                                            i===7?backClick7:\r\n                                                            i===8?backClick8:\r\n                                                            backClick9\r\n\r\n                                                        }\r\n                                                        /> \r\n                                                            \r\n                                                      \r\n                                 <StartTimeContainer  changeStartTime={changeStartTime(i)} \r\n                                                      totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9 }\r\n                                                      questionStartsfrom={\r\n                                                         questions[i].questionStartsfrom\r\n                                                            }/>\r\n                            </PlayerWrap>\r\n                            : \"\"}\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].answerYoutubeURL} questionURL={links[i].answerYoutubeURL}/>\r\n                            </QuestionListInputWrap>\r\n\r\n                        </QuestionListRightWrap>\r\n                    </InputsWrap>\r\n                </div>\r\n                ))}\r\n\r\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\r\n                <QuestionLustPlusButton addQuestions={addQuestions} />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\r\n\r\n                { serverLoading? \r\n                    <QuestionSaveButton onSubmitHandler={onSubmitHandler} /> \r\n                  :\r\n                  <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center'}}>\r\n                    <LoadingComponent/>\r\n                  </div>\r\n\r\n                }                \r\n                <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\r\n                <table></table>\r\n            </QuestionListInner>     \r\n\r\n               \r\n            )}\r\n\r\n        </form>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default TestMakingFormContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js",["439","440","441","442"],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BlankTop from \"../../../components/common/BlankTop\";\r\nimport LoadingComponent from \"../../../components/common/LoadingComponent\";\r\nimport TextComponent from \"../../../components/common/TextComponent\";\r\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\r\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\r\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\r\nimport InputsWrap from \"../../../components/testmaking/questionlist/input/InputsWrap\";\r\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\r\nimport TopInner from \"../../../components/testmaking/TopInner\";\r\nimport InputCategoryContainer from \"../../testmaking/InputCategoryContainer\";\r\nimport PlayerContainer from \"../../testmaking/player/PlayerContainer\";\r\nimport StartTimeContainer from \"../../testmaking/player/StartTimeContainer\";\r\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\r\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\r\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\r\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\r\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\r\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\r\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\r\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\r\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\r\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\r\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\r\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\r\n\r\nexport let player0;\r\nexport let player1;\r\nexport let player2;\r\nexport let player3;\r\nexport let player4;\r\nexport let player5;\r\nexport let player6;\r\nexport let player7;\r\nexport let player8;\r\nexport let player9;\r\nexport let send=true ;\r\nexport let viewLoadingCount = 0;\r\n\r\nconst TestEditFormContainer = ({history,match}) => {\r\n    const jwt = window.localStorage.getItem('jwt');\r\n    let checkCurrentTime0;\r\n    let checkCurrentTime1;\r\n    let checkCurrentTime2;\r\n    let checkCurrentTime3;\r\n    let checkCurrentTime4;\r\n    let checkCurrentTime5;\r\n    let checkCurrentTime6;\r\n    let checkCurrentTime7;\r\n    let checkCurrentTime8;\r\n    let checkCurrentTime9;\r\n\r\n    const [testTitle,setTestTitle] = useState('');\r\n    const [testDescription,setTestDescription] = useState('');\r\n    const [testCategory,setTestCategory] = useState('');\r\n\r\n    const [questions,setQuestions] = useState([{\r\n        questionNumber : 1,\r\n        questionYoutubeURL : \"\",\r\n        questionStartsfrom : \"\",\r\n        hint : \"\",\r\n        answer: \"\",\r\n        answerYoutubeURL: \"\",\r\n    }]);\r\n    const [links,setLinks] = useState();\r\n\r\n    const [viewLoading,setViewLoading] = useState(false);\r\n    const [serverLoading,setServerLoading] = useState(true);\r\n\r\n    const [timer, setTimer] = useState(0);\r\n\r\n    const [isPlaying0, setPlaying0] = useState(false);\r\n    const [isLoading0, setLoading0] = useState(false);\r\n    const [currentTime0, setCurrentTime0] = useState(\"00:00\");\r\n    const [totalTime0, setTotalTime0] = useState(\"00:00\");\r\n\r\n    const [isPlaying1, setPlaying1] = useState(false);\r\n    const [isLoading1, setLoading1] = useState(false);\r\n    const [currentTime1, setCurrentTime1] = useState(\"00:00\");\r\n    const [totalTime1, setTotalTime1] = useState(\"00:00\");\r\n\r\n    const [isPlaying2, setPlaying2] = useState(false);\r\n    const [isLoading2, setLoading2] = useState(false);\r\n    const [currentTime2, setCurrentTime2] = useState(\"00:00\");\r\n    const [totalTime2, setTotalTime2] = useState(\"00:00\");\r\n\r\n    const [isPlaying3, setPlaying3] = useState(false);\r\n    const [isLoading3, setLoading3] = useState(false);\r\n    const [currentTime3, setCurrentTime3] = useState(\"00:00\");\r\n    const [totalTime3, setTotalTime3] = useState(\"00:00\");\r\n\r\n    const [isPlaying4, setPlaying4] = useState(false);\r\n    const [isLoading4, setLoading4] = useState(false);\r\n    const [currentTime4, setCurrentTime4] = useState(\"00:00\");\r\n    const [totalTime4, setTotalTime4] = useState(\"00:00\");\r\n\r\n    const [isPlaying5, setPlaying5] = useState(false);\r\n    const [isLoading5, setLoading5] = useState(false);\r\n    const [currentTime5, setCurrentTime5] = useState(\"00:00\");\r\n    const [totalTime5, setTotalTime5] = useState(\"00:00\");\r\n\r\n    const [isPlaying6, setPlaying6] = useState(false);\r\n    const [isLoading6, setLoading6] = useState(false);\r\n    const [currentTime6, setCurrentTime6] = useState(\"00:00\");\r\n    const [totalTime6, setTotalTime6] = useState(\"00:00\");\r\n\r\n    const [isPlaying7, setPlaying7] = useState(false);\r\n    const [isLoading7, setLoading7] = useState(false);\r\n    const [currentTime7, setCurrentTime7] = useState(\"00:00\");\r\n    const [totalTime7, setTotalTime7] = useState(\"00:00\");\r\n\r\n    const [isPlaying8, setPlaying8] = useState(false);\r\n    const [isLoading8, setLoading8] = useState(false);\r\n    const [currentTime8, setCurrentTime8] = useState(\"00:00\");\r\n    const [totalTime8, setTotalTime8] = useState(\"00:00\");\r\n\r\n    const [isPlaying9, setPlaying9] = useState(false);\r\n    const [isLoading9, setLoading9] = useState(false);\r\n    const [currentTime9, setCurrentTime9] = useState(\"00:00\");\r\n    const [totalTime9, setTotalTime9] = useState(\"00:00\");\r\n\r\n    const changeTitle = e => {\r\n      const {target: {value}} = e;\r\n      setTestTitle(value);\r\n    }\r\n    const changeDescription = e => {\r\n      const {target: {value}} = e;\r\n      setTestDescription(value);\r\n    }\r\n\r\n    const changeCategory = e => {\r\n      setTestCategory(e);\r\n    }\r\n\r\n    const changeText = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = value;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n\r\n    }\r\n\r\n    const changeStartTime = questionNumber => e => {\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[\"questionStartsfrom\"] = e;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n    }\r\n\r\n    \r\n\r\n    const addQuestions = () => {\r\n        if(questions.length === 10) return\r\n        let data = {\r\n            questionNumber : questions.length +1,\r\n            questionYoutubeURL : \"\",\r\n            questionStartsfrom : \"\",\r\n            hint : \"\",\r\n            answer: \"\",\r\n            answerYoutubeURL: \"\"\r\n\r\n        };\r\n\r\n        setQuestions([...questions, data]);\r\n        let data2 = {\r\n          questionNumber : questions.length +1,\r\n          questionYoutubeURL : \"\",\r\n          answerYoutubeURL: \"\"\r\n        }\r\n        setLinks([...links,data2]);\r\n    }\r\n\r\n    const deleteQuestions = questionNumber => () => {\r\n      let tempQuestions = questions.filter(question => {\r\n          return question.questionNumber !== questionNumber + 1;\r\n      })\r\n      let i = 1;\r\n      const reTempQuestions = tempQuestions.map(question => {\r\n          question.questionNumber = i;\r\n          i++;\r\n          return question;\r\n      })\r\n\r\n      setQuestions(reTempQuestions);\r\n      let tempLinks = links.filter(link => {\r\n        return link.questionNumber !== questionNumber + 1;\r\n    })\r\n    let l = 1;\r\n    const reTempLinks = tempLinks.map(link => {\r\n        link.questionNumber = l;\r\n        l++;\r\n        return link;\r\n    })\r\n\r\n    setLinks(reTempLinks);\r\n  }\r\n\r\n  const getYoutubeId = questionNumber => e => {\r\n    const { target: { value } } = e;\r\n    const { target: { name } } = e;\r\n    console.log(value)\r\n    if(value)  {\r\n        const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n        const matchs = value.match(regExp);\r\n        console.log(\"matches:\",matchs)\r\n        if(value!==''&&matchs&&matchs[7].length===11){\r\n\r\n            const tempsQustios = questions.map(question => {\r\n                if( question.questionNumber === questionNumber+1 ){\r\n                    question[name] = matchs[7];\r\n                }\r\n    \r\n                return question;\r\n    \r\n            });  \r\n            setQuestions(tempsQustios);\r\n            const tempsLinks = links.map(link => {\r\n              if( link.questionNumber === questionNumber+1 ){\r\n                link[name] = matchs.input;\r\n              }\r\n  \r\n              return link;\r\n  \r\n          });  \r\n          setLinks(tempsLinks);\r\n          console.log(\"links2\" ,tempsLinks);\r\n          console.log(\"questions2\" ,tempsQustios)\r\n        }else{\r\n            const tempsQustios = questions.map(question => {\r\n                if( question.questionNumber === questionNumber+1 ){\r\n                    question[name] = \"\";\r\n                }\r\n    \r\n                return question;\r\n    \r\n            });  \r\n            setQuestions(tempsQustios); \r\n            const tempsLinks = links.map(link => {\r\n              if( link.questionNumber === questionNumber+1 ){\r\n                link[name] = value;\r\n              }\r\n  \r\n              return link;\r\n  \r\n          });  \r\n          setLinks(tempsLinks);\r\n            \r\n          console.log(\"links\" ,tempsLinks);\r\n          console.log(\"questions\" ,tempsQustios)\r\n        }\r\n    }else{\r\n      const tempsQustios = questions.map(question => {\r\n        if( question.questionNumber === questionNumber+1 ){\r\n            question[name] = \"\";\r\n        }\r\n\r\n        return question;\r\n\r\n      });  \r\n    const tempsLinks = links.map(link => {\r\n      if( link.questionNumber === questionNumber+1 ){\r\n        link[name] = \"\";\r\n      }\r\n\r\n      return link;\r\n\r\n      });  \r\n    setLinks(tempsLinks);\r\n    setQuestions(tempsQustios);\r\n    }\r\n    \r\n}\r\n\r\n  const playerState0 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying0(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying0(false);\r\n    }\r\n  };\r\n  const playerState1 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying1(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying1(false);\r\n    }\r\n  };\r\n  const playerState2 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying2(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying2(false);\r\n    }\r\n  };\r\n  const playerState3 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying3(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying3(false);\r\n    }\r\n  };\r\n  const playerState4 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying4(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying4(false);\r\n    }\r\n  };\r\n  const playerState5 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying5(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying5(false);\r\n    }\r\n  };\r\n  const playerState6 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying6(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying6(false);\r\n    }\r\n  };\r\n  const playerState7 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying7(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying7(false);\r\n    }\r\n  };\r\n  const playerState8 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying8(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying8(false);\r\n    }\r\n  };\r\n  const playerState9 = (e) => {\r\n    if (e.data === 1) {\r\n      setPlaying9(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying9(false);\r\n    }\r\n  };\r\n\r\n  const transTime = (seconds) => {\r\n    if (!seconds) {      return;\r\n    }\r\n    const hour = parseInt(seconds / 3600);\r\n    const min = parseInt((seconds % 3600) / 60);\r\n    const sec = seconds % 60;\r\n\r\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\r\n      sec < 10 ? \"0\" + String(sec) : sec\r\n    }`;\r\n  };\r\n  const onSubmitHandler = (e) =>{\r\n    e.preventDefault();\r\n\r\n    const variable ={\r\n        title: testTitle,\r\n        description: testDescription,\r\n        CategoryId: testCategory,\r\n        questions: questions,\r\n\r\n    }\r\n    const config = {\r\n      headers : {\"jwt\":jwt}\r\n  }\r\n  setServerLoading(false);\r\n  if(testTitle.length !== 0 && testDescription.length !== 0 && testCategory.length !== 0){\r\n    for(let i = 0; i < questions.length; i++ ){\r\n      if(questions[i].questionYoutubeURL.length === 0 ||questions[i].questionStartsfrom.length === 0 ||questions[i].hint.length === 0 ||\r\n      questions[i].answer.length === 0 ||questions[i].answerYoutubeURL.length === 0){\r\n        send = false;\r\n      }\r\n    }\r\n    if(send===true){\r\n        if (timer) {\r\n            console.log('clear timer');\r\n            clearTimeout(timer);\r\n        }\r\n        const newTimer = setTimeout(async () => {\r\n            try {\r\n                axios.put(`http://3.35.187.65:3000/test/${match.params.id}`,variable,config)\r\n                .then(response=> {\r\n                    if(response.data.success){\r\n                      history.push(\"/\");\r\n                    }\r\n                })\r\n            } catch (e) {\r\n              console.error('error', e);\r\n              setServerLoading(true);\r\n\r\n            }\r\n          }, 5000);\r\n          setTimer(newTimer);\r\n\r\n    }else{\r\n      setServerLoading(true);\r\n    }\r\n\r\n  }else{\r\n    setServerLoading(true);\r\n  }\r\n\r\n}\r\n\r\n  const setTime0 = () => {\r\n    setCurrentTime0(transTime(player0.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime1 = () => {\r\n    setCurrentTime1(transTime(player1.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime2 = () => {\r\n    setCurrentTime2(transTime(player2.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime3 = () => {\r\n    setCurrentTime3(transTime(player3.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime4 = () => {\r\n    setCurrentTime4(transTime(player4.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime5 = () => {\r\n    setCurrentTime5(transTime(player5.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime6 = () => {\r\n    setCurrentTime6(transTime(player6.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime7 = () => {\r\n    setCurrentTime7(transTime(player7.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime8 = () => {\r\n    setCurrentTime8(transTime(player8.getCurrentTime().toFixed()));\r\n  };\r\n  const setTime9 = () => {\r\n    setCurrentTime9(transTime(player9.getCurrentTime().toFixed()));\r\n  };\r\n\r\n  const onReadyAPI0 = () => {\r\n      setLoading0(true);\r\n      setPlaying0(false);\r\n      checkCurrentTime0 = setInterval(setTime0, 1000);\r\n      setTotalTime0(player0.getDuration());\r\n\r\n  };\r\n  const onReadyAPI1 = () => {\r\n    setLoading1(true);\r\n    setPlaying1(false);\r\n    checkCurrentTime1 = setInterval(setTime1, 1000);\r\n    setTotalTime1(player1.getDuration());\r\n  };\r\n  const onReadyAPI2 = () => {\r\n    setLoading2(true);\r\n    setPlaying2(false);\r\n    checkCurrentTime2 = setInterval(setTime2, 1000);\r\n    setTotalTime2(player2.getDuration());\r\n  };\r\n  const onReadyAPI3 = () => {\r\n    setLoading3(true);\r\n    setPlaying3(false);\r\n    checkCurrentTime3 = setInterval(setTime3, 1000);\r\n    setTotalTime3(player3.getDuration());\r\n  };\r\n  const onReadyAPI4 = () => {\r\n    setLoading4(true);\r\n    setPlaying4(false);\r\n    checkCurrentTime4 = setInterval(setTime4, 1000);\r\n    setTotalTime4(player4.getDuration());\r\n  };\r\n  const onReadyAPI5 = () => {\r\n    setLoading5(true);\r\n    setPlaying5(false);\r\n    checkCurrentTime5 = setInterval(setTime5, 1000);\r\n    setTotalTime5(player5.getDuration());\r\n  };\r\n  const onReadyAPI6 = () => {\r\n    setLoading6(true);\r\n    setPlaying6(false);\r\n    checkCurrentTime6 = setInterval(setTime6, 1000);\r\n    setTotalTime6(player6.getDuration());\r\n  };\r\n  const onReadyAPI7 = () => {\r\n    setLoading7(true);\r\n    setPlaying7(false);\r\n    checkCurrentTime7 = setInterval(setTime7, 1000);\r\n    setTotalTime7(player7.getDuration());\r\n  };\r\n  const onReadyAPI8 = () => {\r\n    setLoading8(true);\r\n    setPlaying8(false);\r\n    checkCurrentTime8 = setInterval(setTime8, 1000);\r\n    setTotalTime8(player8.getDuration());\r\n  };\r\n  const onReadyAPI9 = () => {\r\n    setLoading9(true);\r\n    setPlaying9(false);\r\n    checkCurrentTime9 = setInterval(setTime9, 1000);\r\n    setTotalTime9(player9.getDuration());\r\n  };\r\n\r\n\r\n    const playHandler0 = () => {\r\n    setPlaying0(!isPlaying0);\r\n    } \r\n\r\n    const playHandler1 = () => {\r\n    setPlaying1(!isPlaying1);\r\n    } \r\n    const playHandler2 = () => {\r\n    setPlaying2(!isPlaying2);\r\n    } \r\n    const playHandler3 = () => {\r\n        setPlaying3(!isPlaying3);\r\n    } \r\n    const playHandler4 = () => {\r\n        setPlaying4(!isPlaying4);\r\n    } \r\n    const playHandler5 = () => {\r\n        setPlaying5(!isPlaying5);\r\n    } \r\n    const playHandler6 = () => {\r\n        setPlaying6(!isPlaying6);\r\n    } \r\n    const playHandler7 = () => {\r\n        setPlaying7(!isPlaying7);\r\n    } \r\n    const playHandler8 = () => {\r\n        setPlaying8(!isPlaying8);\r\n    } \r\n    const playHandler9 = () => {\r\n        setPlaying9(!isPlaying9);\r\n    } \r\n    \r\n\r\n    const backClick0 = () => {\r\n        if(isLoading0)player0.seekTo(player0.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick1 = () => {\r\n        if(isLoading1)player1.seekTo(player1.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick2 = () => {\r\n        if(isLoading2)player2.seekTo(player2.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick3 = () => {\r\n        if(isLoading3)player3.seekTo(player3.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick4 = () => {\r\n        if(isLoading4)player4.seekTo(player4.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick5 = () => {\r\n        if(isLoading5)player5.seekTo(player5.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick6 = () => {\r\n        if(isLoading6)player6.seekTo(player6.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick7 = () => {\r\n        if(isLoading7)player7.seekTo(player7.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick8 = () => {\r\n        if(isLoading8)player8.seekTo(player8.getCurrentTime() - 10, true)\r\n\r\n    }\r\n    const backClick9 = () => {\r\n        if(isLoading9)player9.seekTo(player9.getCurrentTime() - 10, true)\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://www.youtube.com/iframe_api';\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n        \r\n        window.onYouTubeIframeAPIReady = () => {\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n          player0 = new window.YT.Player(`player0`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3001'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI0,\r\n              onStateChange: playerState0,\r\n            },\r\n          });\r\n          player1 = new window.YT.Player(`player1`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI1,\r\n              onStateChange: playerState1,\r\n            },\r\n          });\r\n          player2 = new window.YT.Player(`player2`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI2,\r\n              onStateChange: playerState2,\r\n            },\r\n          });\r\n          player3 = new window.YT.Player(`player3`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI3,\r\n              onStateChange: playerState3,\r\n            },\r\n          });\r\n          player4 = new window.YT.Player(`player4`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI4,\r\n              onStateChange: playerState4,\r\n            },\r\n          });\r\n          player5 = new window.YT.Player(`player5`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI5,\r\n              onStateChange: playerState5,\r\n            },\r\n          });\r\n          player6 = new window.YT.Player(`player6`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI6,\r\n              onStateChange: playerState6,\r\n            },\r\n          });\r\n          player7 = new window.YT.Player(`player7`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI7,\r\n              onStateChange: playerState7,\r\n            },\r\n          });\r\n          player8 = new window.YT.Player(`player8`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI8,\r\n              onStateChange: playerState8,\r\n            },\r\n          });\r\n          player9 = new window.YT.Player(`player9`, {\r\n            height: \"0\",\r\n            width: \"0\",\r\n            videoId: \"7y7roXhpK-8\",\r\n            host: 'https://www.youtube.com',\r\n            playerVars: {\r\n              autoplay: 0,\r\n              controls: 0,\r\n              fs: 0,\r\n              showinfo:0,\r\n              enablejsapi: 1,\r\n              origin:'http://localhost:3000'\r\n            },\r\n            events: {\r\n              onReady: onReadyAPI9,\r\n              onStateChange: playerState9,\r\n            },\r\n          });\r\n\r\n        }\r\n        return () => {\r\n          clearInterval(checkCurrentTime0);\r\n          clearInterval(checkCurrentTime1);\r\n          clearInterval(checkCurrentTime2);\r\n          clearInterval(checkCurrentTime3);\r\n          clearInterval(checkCurrentTime4);\r\n          clearInterval(checkCurrentTime5);\r\n          clearInterval(checkCurrentTime6);\r\n          clearInterval(checkCurrentTime7);\r\n          clearInterval(checkCurrentTime8);\r\n          clearInterval(checkCurrentTime9);\r\n        };\r\n        \r\n      }, []);\r\n      const getTestData = async id =>{\r\n          try{\r\n              await axios.get(`http://3.35.187.65:3000/test/${id}/updatepage`)\r\n              .then(response=> {\r\n                  if(response.data.success){\r\n                    setTestTitle(response.data.data.test.title);\r\n                    setTestDescription(response.data.data.test.description);\r\n                    setTestCategory(response.data.data.test.CategoryId)\r\n                    setQuestions(response.data.data.questions)\r\n                    console.log(response.data.data.questions)\r\n                    const linkArray=[]\r\n                    for(let i=0; i<response.data.data.questions.length; i++){\r\n                      let data2 = {\r\n                        questionNumber : response.data.data.questions[i].questionNumber,\r\n                        questionYoutubeURL : `https://www.youtube.com/watch?v=${response.data.data.questions[i].questionYoutubeURL}`,\r\n                        answerYoutubeURL:`https://www.youtube.com/watch?v=${response.data.data.questions[i].answerYoutubeURL}`\r\n                      }\r\n                      linkArray.push(data2)\r\n                    }\r\n                    setLinks(linkArray);       \r\n\r\n                  \r\n                    setViewLoading(true)\r\n                    viewLoadingCount++;   \r\n                  }else{\r\n                    history.push(\"/\");\r\n                  }\r\n              })\r\n          }catch(e){\r\n\r\n          }\r\n      }\r\n\r\n      useEffect(()=>{\r\n        if(viewLoadingCount===0){\r\n          if(isLoading0&&\r\n            isLoading1&&\r\n            isLoading2&&\r\n            isLoading3&&\r\n            isLoading4&&\r\n            isLoading5&&\r\n            isLoading6&&\r\n            isLoading7&&\r\n            isLoading8&&\r\n            isLoading9){\r\n              setLoading0(false);\r\n              setLoading1(false);\r\n              setLoading2(false);\r\n              setLoading3(false);\r\n              setLoading4(false);\r\n              setLoading5(false);\r\n              setLoading6(false);\r\n              setLoading7(false);\r\n              setLoading8(false);\r\n              setLoading9(false);\r\n              getTestData(match.params.id)\r\n              }\r\n            }\r\n        },[isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9]);\r\n\r\n\r\n      if (isLoading0) {\r\n        if (isPlaying0) {\r\n          player0?.playVideo();\r\n        } else {\r\n          player0?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading1) {    \r\n        if (isPlaying1) {\r\n          player1?.playVideo();\r\n\r\n        } else {\r\n          player1?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading2) {\r\n          if (isPlaying2) {\r\n              player2?.playVideo();\r\n            } else {\r\n             player2?.pauseVideo();\r\n        }\r\n      }\r\n\r\n      if (isLoading3) {\r\n        if (isPlaying3) {\r\n            player3?.playVideo();\r\n          } else {\r\n           player3?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading4) {\r\n        if (isPlaying4) {\r\n            player4?.playVideo();\r\n          } else {\r\n           player4?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading5) {\r\n        if (isPlaying5) {\r\n            player5?.playVideo();\r\n          } else {\r\n           player5?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading6) {\r\n        if (isPlaying6) {\r\n            player6?.playVideo();\r\n          } else {\r\n           player6?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading7) {\r\n        if (isPlaying7) {\r\n            player7?.playVideo();\r\n          } else {\r\n           player7?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading8) {\r\n        if (isPlaying8) {\r\n            player8?.playVideo();\r\n          } else {\r\n           player8?.pauseVideo();\r\n      }\r\n    }\r\n    if (isLoading9) {\r\n        if (isPlaying9) {\r\n            player9?.playVideo();\r\n          } else {\r\n           player9?.pauseVideo();\r\n      }\r\n    }\r\n\r\n    return(\r\n      !viewLoading ?  \r\n      <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center',flexDirection:\"column\"}}>\r\n         <LoadingComponent/>\r\n         <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n         <TextComponent title={\"로딩중...\"} DesktopLength=\"14\" TabletLength=\"14\" MobileLength='14'/>\r\n      </div>\r\n       : \r\n      \r\n      <form method='post' onSubmit={onSubmitHandler} >\r\n            <TopInner>\r\n                <table></table>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='제목'/>\r\n                    <TopInput inputName='title' inputPlaceholder='최대 25자' inputMaxLength='25' changeHandler={changeTitle} value={testTitle} />\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='내용'/>\r\n                    <TopInput inputName='description' inputPlaceholder='최대 45자' inputMaxLength='45' changeHandler={changeDescription} value={testDescription}/>\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='카테고리'/>\r\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요' changeCategory={changeCategory} testCategory={testCategory}/>\r\n                </TopInputWrap>\r\n            </TopInner>\r\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\r\n            <QuestionListTitle/>\r\n\r\n            {questions.length !== 0 && (\r\n            <QuestionListInner>\r\n                {questions.map((d,i)=>(\r\n                 <div key={i}>\r\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\r\n                    <InputsWrap >\r\n                        <QuestionListLeftWrap >\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text={i!==9?\"Qustion00\"+(i+1):\"Qustion010\"} />\r\n                                <QuestionListInput inputName='answer' inputMaxLength=\"20\" inputPlaceholder='정답을 적어주세요 (최대 20자)'  changeText={changeText(i)} value={d.answer}/>\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListHintWrap>\r\n                                <QuestionListInputText text='Hint' />\r\n                                <QuestionListInput inputName='hint' inputMaxLength=\"10\" inputPlaceholder='힌트를 적어주세요 (최대 10자)'  changeText={changeText(i)} value={d.hint} />\r\n                            </QuestionListHintWrap>\r\n                        </QuestionListLeftWrap>\r\n\r\n                        <QuestionListRightWrap>\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].questionYoutubeURL} questionURL={links[i]?.questionYoutubeURL} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\r\n\r\n                           {questions[i].questionYoutubeURL!==\"\"||questions[i].questionYoutubeURL ? \r\n                            <PlayerWrap>\r\n                               <PlayerContainer questionUrl={questions[i].questionYoutubeURL} \r\n                                                        player={\r\n                                                            i===0?player0:\r\n                                                            i===1?player1:\r\n                                                            i===2?player2:\r\n                                                            i===3?player3:\r\n                                                            i===4?player4:\r\n                                                            i===5?player5:\r\n                                                            i===6?player6:\r\n                                                            i===7?player7:\r\n                                                            i===8?player8:\r\n                                                            player9\r\n\r\n                                                        } \r\n                                                        i={i} \r\n                                                        isPlaying={\r\n                                                            i===0?isPlaying0:\r\n                                                            i===1?isPlaying1:\r\n                                                            i===2?isPlaying2:\r\n                                                            i===3?isPlaying3:\r\n                                                            i===4?isPlaying4:\r\n                                                            i===5?isPlaying5:\r\n                                                            i===6?isPlaying6:\r\n                                                            i===7?isPlaying7:\r\n                                                            i===8?isPlaying8:\r\n                                                                  isPlaying9\r\n                                                            }\r\n                                                        isLoading={\r\n                                                            i===0?isLoading0:\r\n                                                            i===1?isLoading1:\r\n                                                            i===2?isLoading2:\r\n                                                            i===3?isLoading3:\r\n                                                            i===4?isLoading4:\r\n                                                            i===5?isLoading5:\r\n                                                            i===6?isLoading6:\r\n                                                            i===7?isLoading7:\r\n                                                            i===8?isLoading8:\r\n                                                            isLoading9\r\n\r\n                                                        }\r\n                                                        currentTime={\r\n                                                            i===0?currentTime0:\r\n                                                            i===1?currentTime1:\r\n                                                            i===2?currentTime2:\r\n                                                            i===3?currentTime3:\r\n                                                            i===4?currentTime4:\r\n                                                            i===5?currentTime5:\r\n                                                            i===6?currentTime6:\r\n                                                            i===7?currentTime7:\r\n                                                            i===8?currentTime8:\r\n                                                            currentTime9\r\n\r\n                                                        }\r\n                                                        totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9\r\n\r\n                                                        }\r\n                                                        playHandler={\r\n                                                            i===0?playHandler0:\r\n                                                            i===1?playHandler1:\r\n                                                            i===2?playHandler2:\r\n                                                            i===3?playHandler3:\r\n                                                            i===4?playHandler4:\r\n                                                            i===5?playHandler5:\r\n                                                            i===6?playHandler6:\r\n                                                            i===7?playHandler7:\r\n                                                            i===8?playHandler8:\r\n                                                            playHandler9\r\n                                                        }\r\n                                                        backClick={\r\n                                                            i===0?backClick0:\r\n                                                            i===1?backClick1:\r\n                                                            i===2?backClick2:\r\n                                                            i===3?backClick3:\r\n                                                            i===4?backClick4:\r\n                                                            i===5?backClick5:\r\n                                                            i===6?backClick6:\r\n                                                            i===7?backClick7:\r\n                                                            i===8?backClick8:\r\n                                                            backClick9\r\n\r\n                                                        }\r\n                                                        /> \r\n                                                            \r\n                                                      \r\n                                <StartTimeContainer  changeStartTime={changeStartTime(i)} \r\n                                                      totalTime={\r\n                                                            i===0?totalTime0:\r\n                                                            i===1?totalTime1:\r\n                                                            i===2?totalTime2:\r\n                                                            i===3?totalTime3:\r\n                                                            i===4?totalTime4:\r\n                                                            i===5?totalTime5:\r\n                                                            i===6?totalTime6:\r\n                                                            i===7?totalTime7:\r\n                                                            i===8?totalTime8:\r\n                                                            totalTime9 }\r\n                                                      questionStartsfrom={\r\n                                                         questions[i].questionStartsfrom\r\n                                                            }/>\r\n                            </PlayerWrap>\r\n                            : \"\"}\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  getYoutubeId={getYoutubeId(i)} videoId={questions[i].answerYoutubeURL} questionURL={links[i]?.answerYoutubeURL}/>\r\n                            </QuestionListInputWrap>\r\n\r\n                        </QuestionListRightWrap>\r\n                    </InputsWrap>\r\n                </div>\r\n                ))}\r\n\r\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\r\n                <QuestionLustPlusButton addQuestions={addQuestions} />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\r\n                { serverLoading? \r\n                    <QuestionSaveButton onSubmitHandler={onSubmitHandler} /> \r\n                  :\r\n                  <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center'}}>\r\n                    <LoadingComponent/>\r\n                  </div>\r\n\r\n                }                    <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\r\n                <table></table>\r\n            </QuestionListInner>     \r\n\r\n               \r\n            )}\r\n\r\n        </form>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default TestEditFormContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Button.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js",["443"],"import { useEffect, useState } from 'react';\r\nimport InputCategory from '../../components/testmaking/Input/InputCategory';\r\n\r\n\r\n\r\n\r\n\r\nconst InputCategoryContainer = ({inputName,inputPlaceholder,testCategory,changeCategory}) => {\r\n\r\n    const [isCategoryVisible, setIsCategoryVisible] = useState(false);\r\n    const [chooseCategory, setChooseCategory] = useState()\r\n\r\n    const categoryVisibleHandler = () => {\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n    }\r\n\r\n    const chooseCategoryHandler = (e) => {\r\n        const categoryValue = e.target.childNodes[0].data;\r\n        setChooseCategory(categoryValue)\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n        changeCategory(e.target.id)\r\n    }\r\n    useEffect(\r\n     ()=>{\r\n         if(testCategory===1){\r\n            setChooseCategory('여자 아이돌')\r\n         }else if(testCategory===2){\r\n            setChooseCategory('남자 아이돌')\r\n         }else if(testCategory===3){\r\n            setChooseCategory('연도별')\r\n         }else if(testCategory===4){\r\n            setChooseCategory('힙합')\r\n         }else if(testCategory===5){\r\n            setChooseCategory('핍')\r\n         }else if(testCategory===6){\r\n            setChooseCategory('게임')\r\n         }else if(testCategory===7){\r\n            setChooseCategory('영화/드라마')\r\n         }else if(testCategory===8){\r\n            setChooseCategory('애니메이션')\r\n         }else if(testCategory===9){\r\n            setChooseCategory('기타')\r\n         }\r\n     }\r\n    ,[])\r\n    return (\r\n        <InputCategory \r\n                isCategoryVisible={isCategoryVisible} \r\n                categoryVisibleHandler={categoryVisibleHandler}\r\n                inputName={inputName}\r\n                inputPlaceholder={inputPlaceholder}\r\n                chooseCategoryHandler={chooseCategoryHandler}\r\n                testCategory={testCategory}\r\n                changeCategory={changeCategory}\r\n                chooseCategory={chooseCategory}\r\n        />\r\n        )\r\n\r\n\r\n\r\n}\r\n\r\nexport default InputCategoryContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js",["444","445"],"import { useEffect, useState } from \"react\";\r\nimport StartTime from \"../../../components/testmaking/questionlist/player/StartTime\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StartTimeContainer = ({questionStartsfrom,changeStartTime,totalTime}) => {\r\n\r\n    const [minutes,setMinutes] = useState(0);\r\n    const [seconds,setSeconds] = useState(0);\r\n    const onChangeMinutes = e => {\r\n        const minute = e.target.value;\r\n        if(!minute){\r\n            setMinutes(0);\r\n        }else{\r\n            setMinutes(minute);\r\n        }\r\n    }\r\n\r\n    const onChangeSeconds = e => {\r\n        const second = e.target.value;\r\n\r\n        if(!second){\r\n            setSeconds(0);\r\n\r\n        }else{\r\n            if(second >= 60){\r\n                setMinutes(minutes+1);\r\n                setSeconds(second%60);\r\n            }else{\r\n                setSeconds(second);\r\n            }\r\n        }\r\n    }\r\n    const maxLengthCheck = (object) => {\r\n        if (object.target.value.length > object.target.maxLength) {\r\n         object.target.value = object.target.value.slice(0, object.target.maxLength)\r\n          }\r\n        }\r\n    \r\n    useEffect(()=>{\r\n        if (questionStartsfrom){\r\n            setMinutes( parseInt(questionStartsfrom/60));\r\n            setSeconds( parseInt(questionStartsfrom%60));\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        console.log(minutes, seconds);\r\n\r\n        const inputTime =  parseInt(minutes*60) + parseInt(seconds);\r\n        if(parseInt(totalTime-4) >= inputTime){\r\n            changeStartTime(inputTime);\r\n        }else if(totalTime===170){\r\n            changeStartTime(inputTime);\r\n        }else{\r\n            setMinutes(String(minutes).slice(0,1))\r\n        }\r\n    },[minutes,seconds])\r\n\r\n    return <StartTime questionStartsfrom={questionStartsfrom} maxLengthCheck={maxLengthCheck} onChangeMinutes={onChangeMinutes} onChangeSeconds={onChangeSeconds}/>\r\n}\r\n\r\nexport default StartTimeContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js",["446"],"import Background from \"../../components/main/Bg\";\r\nimport Header from \"../../components/main/header/Header\";\r\nimport Banner from \"../main/banner/Banner\";\r\nimport Category from \"../main/category/Category\";\r\nimport CardList from \"../main/test_card/TestCard\";\r\nimport Footer from \"../main/footer/Footer\";\r\nimport BlankTop from \"../common/BlankTop\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchIconImg from \"../../assets/ic_search.png\";\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 52.4rem;\r\n  position: relative;\r\n  margin: 0 auto 1.3rem;\r\n  @media (max-width: 1024px) {\r\n    width: 46.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 33.8rem;\r\n    margin-bottom: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled.img.attrs({\r\n  src: SearchIconImg,\r\n})`\r\n  display: block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  left: -1.2rem;\r\n  @media (max-width: 768px) {\r\n    left: -5.6rem;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 52.4rem;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  line-height: 1.035;\r\n  border-style: none;\r\n  color: #dadada;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    color: #dadada;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 46.5rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 33.9rem;\r\n    font-size: 1.4rem;\r\n    line-height: 1;\r\n  }\r\n`;\r\n\r\nconst SearchBorder = styled.hr`\r\n  display: block;\r\n  width: 88.6rem;\r\n  height: 0.2rem;\r\n  margin: 0 auto;\r\n  border: none;\r\n  color: #000;\r\n  background: #fff;\r\n  background: radial-gradient(\r\n    80.42% 65929741.39% at 50% 74.84%,\r\n    rgba(255, 255, 255, 0.85) 0%,\r\n    rgba(255, 255, 255, 0) 57.29%\r\n  );\r\n  @media (max-width: 1024px) {\r\n    width: 72.4rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 54.9rem;\r\n  }\r\n`;\r\n\r\n// testList는 내가 선택한 카테고리에 따라 오게됨.\r\nconst Main = ({ categoryList, testList, onClickDisplay, allList }) => {\r\n  console.log(testList);\r\n\r\n  const first = Object.values(allList);\r\n  console.log(first);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [result, setResult] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 제목, 내용에 해당되는 거\r\n    const title = first.filter((item) => {\r\n      // console.log(item.title.toLowerCase());\r\n      return (\r\n        item.title.toLowerCase().includes(search) ||\r\n        item.description.toLowerCase().includes(search)\r\n      );\r\n    });\r\n    setResult(title);\r\n  }, [search]);\r\n\r\n  console.log(result);\r\n\r\n  return (\r\n    <Background>\r\n      <Header />\r\n      <BlankTop DesktopMargin={11} TabletMargin={12} MobileMargin={8.8} />\r\n      <Banner />\r\n      <BlankTop DesktopMargin={8} TabletMargin={5.5} MobileMargin={7.4} />\r\n      <>\r\n        <Wrap>\r\n          <SearchIcon />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"사용자들이 만들어놓은 다양한 테스트들을 검색해보세요!\"\r\n            value={search}\r\n            onChange={handleChange}\r\n          />\r\n        </Wrap>\r\n        <SearchBorder />\r\n      </>\r\n      <BlankTop DesktopMargin={9.7} TabletMargin={7.3} MobileMargin={7.3} />\r\n      <Category categoryList={categoryList} onClickDisplay={onClickDisplay} />\r\n      <CardList testList={testList} testList2={result} />\r\n      <Footer />\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js",["447"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Wave from '../../../components/testmaking/questionlist/player/Wave';\r\n\r\n\r\nconst PlayerContainer = ({questionUrl,i,isLoading,isPlaying,player,totalTime,currentTime,playHandler,backClick}) => {\r\n  const [mouseDragX, setMouseDragX] = useState(false);\r\n  const [activeButton, setactiveButton] = useState(false);\r\n  const [containerWidth,setContainerWidth] = useState(307);\r\n\r\n\r\n  const dragHandler = (e) => {\r\n    const nowFraction = e.offsetX / containerWidth;\r\n    player.seekTo(player.getDuration() * nowFraction, true);\r\n  };\r\n\r\n  const drag = () => {\r\n    document.addEventListener(\"mousemove\", dragHandler);\r\n    document.addEventListener(\"mouseup\", () => {\r\n      document.removeEventListener(\"mousemove\", dragHandler);\r\n      setMouseDragX(false);\r\n    });\r\n  };\r\n\r\n\r\n  const clickActiveButtonOver = () => {\r\n     setactiveButton(true)\r\n  }\r\n  const clickActiveButtonOut = () => {\r\n    setactiveButton(false)\r\n}\r\n  useEffect(() => {\r\n        const a = document.getElementsByTagName('iframe')[i];\r\n        a.src = `https://www.youtube.com/embed/${questionUrl}?autoplay=0&controls=0&fs=0&enablejsapi=1&origin=http%3A%2F%2Flocalhost%3A3000&widgetid=1`;\r\n  },[questionUrl,i]);\r\n\r\n\r\n  return (\r\n    <TotalWrap>\r\n\r\n    <ControlsWrap>\r\n      <ButtonCover>\r\n          <Button onClick={playHandler} >\r\n          {isLoading ? (\r\n              isPlaying ? (\r\n              <i className=\"xi-pause\" />\r\n              ) : (\r\n              <i className=\"xi-play\" />\r\n              )\r\n          ) : (\r\n              <i className=\"xi-spinner-3 xi-spin\" />\r\n          )}\r\n          </Button>\r\n      </ButtonCover>\r\n      <BackButtonCover>\r\n          <MoveButton onClick={backClick}>\r\n          {isLoading ? (              \r\n              <i className=\"xi-step-backward\" />\r\n          ) : (\r\n              <i className=\"xi-spinner-3 xi-spin\" />\r\n          )}\r\n          </MoveButton>\r\n      </BackButtonCover>\r\n\r\n\r\n      <TimeWrap>\r\n      {player ? `${currentTime}` : \"00:00\"}\r\n      </TimeWrap>\r\n      <WaveCenter>\r\n          <WaveWrap>\r\n          <Wave FillColor={player ? String(player?.getCurrentTime() / player?.getDuration()* 10 )  : '0'}/>\r\n                  <div style={{position:'absolute'}}>\r\n                          <LoadBar style={ {\r\n                              width: mouseDragX\r\n                              ? mouseDragX\r\n                              : player ? String(\r\n                                  (player?.getCurrentTime() / player?.getDuration()) * containerWidth\r\n                                  ) + \"px\" : '0px',\r\n\r\n                              border:\r\n                              activeButton || mouseDragX\r\n                                  ? \"0px solid #db021f\"\r\n                                  : \"0px solid #db021f\",\r\n                          }} >\r\n                              <DragButton\r\n                              style={{ opacity: isLoading ? activeButton || mouseDragX ? \"1\" : \"1\" :\"0\" }}\r\n                              onMouseOver={clickActiveButtonOver}\r\n                              onMouseOut={clickActiveButtonOut}\r\n                              onMouseDown={drag}\r\n                              isLoading = {isLoading}\r\n                              />\r\n                          </LoadBar>\r\n                  </div>\r\n\r\n          </WaveWrap>\r\n      </WaveCenter>\r\n      \r\n    </ControlsWrap>\r\n  </TotalWrap>\r\n  );\r\n};\r\nexport default PlayerContainer;\r\n\r\n\r\nconst ButtonCover = styled.div`\r\n  width:2rem;\r\n  height:2rem;\r\n  cursor: pointer;\r\n  border: 1px solid #fff;\r\n  border-radius:50%;\r\n  margin-left:1.9rem;\r\n  margin-right:1rem;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n      margin-left:0rem;\r\n      margin-right:1.4rem;\r\n      width:2.6rem;\r\n      height:2.6rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n      margin-left:0.8rem;\r\n      margin-right:0.9rem;\r\n      width:2.2rem;\r\n      height:2.2rem;\r\n  }\r\n`\r\n\r\nconst BackButtonCover = styled.div`\r\n  width:2rem;\r\n  height:2rem;\r\n  cursor: pointer;\r\n  border: 1px solid #fff;\r\n  border-radius:50%;\r\n  margin-right:0.2rem;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  @media only screen and (max-width: 1024px) {\r\n        margin-left:0;\r\n        margin-right:2.2rem;\r\n        width:2.6rem;\r\n        height:2.6rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n      margin-right:0rem;\r\n      width:2.2rem;\r\n      height:2.2rem;\r\n\r\n  }\r\n\r\n`\r\n\r\nconst Button = styled.div`\r\n\r\n  all: unset;\r\n  font-size: 1.6rem;\r\n  color: #ffffff;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n`;\r\n\r\nconst MoveButton = styled.div`\r\n\r\n   all: unset;\r\n   font-size: 1.6rem;\r\n  color: #ffffff;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n`;\r\n\r\nconst ControlsWrap = styled.div`\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #909090;\r\n  font-size: 12px;\r\n\r\n`;\r\n\r\nconst LoadBar = styled.div`\r\n  position: relative;\r\n  z-index: 100;\r\n  height: 1px;\r\n  top: 1px;\r\n`\r\n\r\nconst DragButton = styled.div`\r\n  position: absolute;\r\n  transform: translate(70%, -50%);\r\n  right: 0px;\r\n  top: 0px;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color:${props=> props.isLoading ? \"#60FFDA\" :\"\"} ;\r\n  border-radius: 50%;\r\n  transition: all 0.1s ease-in;\r\n  border: 1px solid white;\r\n`;\r\n\r\nconst TimeWrap = styled.div`\r\n    width: 5rem;\r\n    height: 2rem;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    font-size:1.4rem;\r\n    margin-top:0.3rem;\r\n    @media only screen and (max-width: 1024px) {\r\n        margin-right:1.8rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n        width: 4.5rem;\r\n        font-size:1.2rem;\r\n        margin-top:0.4rem;\r\n        margin-right:0.4rem;\r\n\r\n\r\n\r\n  }\r\n`\r\n\r\nconst WaveWrap = styled.div`\r\n    width:31.4rem;\r\n    height:3.6rem;\r\n    display:flex;\r\n    align-items:center;\r\n    position:relative;\r\n    @media only screen and (max-width: 560px) {\r\n        width:0rem;\r\n        display:none;\r\n    }\r\n`\r\n\r\nconst WaveCenter = styled.div`\r\n    @media only screen and (max-width: 1024px) {\r\n        width:31.4rem;\r\n        height:3.6rem;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center  \r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        width:31.4rem;\r\n        height:3.6rem;\r\n    }\r\n    @media only screen and (max-width: 560px) {\r\n        width:0rem;\r\n        display:none;\r\n    }\r\n\r\n`\r\n\r\nconst TotalWrap = styled.div`\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n    @media only screen and (max-width: 768px) {\r\n        justify-content:center;\r\n\r\n\r\n\r\n  }\r\n`;\r\n\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js",["448","449"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\BackToMain.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js",["450"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js",["451","452","453","454","455"],"// 카드 크기 때문에 breakpoint - 1440(추가), 768 -> 828로 변경\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PlusDesktop from \"../../../assets/desktop/button_add.png\";\r\nimport PlusTablet from \"../../../assets/tablet/button_add.png\";\r\nimport PlusMobile from \"../../../assets/mobile/button_add.png\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport PlayImg from \"../../../assets/play.png\";\r\n\r\nconst PlusBtn = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  height: 5.6rem;\r\n  position: relative;\r\n  background-image: url(${PlusDesktop});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-radius: 8px;\r\n  // border: 3px solid transparent;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 4.8rem;\r\n    background-image: url(${PlusTablet});\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    height: 5.5rem;\r\n    background-image: url(${PlusMobile});\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  position: relative;\r\n  padding: 3.6rem 2.1rem 2rem 2.7rem;\r\n  border-radius: 10px;\r\n  border: 3px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n  overflow: hidden;\r\n\r\n  border-right-color: rgba(93, 79, 255, 0.4);\r\n  border-left-color: rgba(96, 255, 218, 0.8);\r\n  background: linear-gradient(\r\n        135deg,\r\n        rgba(96, 255, 218, 1) 0%,\r\n        rgba(93, 79, 255, 0.4) 100%\r\n      )\r\n      top/100% 3px,\r\n    linear-gradient(\r\n        135deg,\r\n        rgba(96, 255, 218, 1) 0%,\r\n        rgba(93, 79, 255, 0.4) 100%\r\n      )\r\n      bottom/100% 3px;\r\n\r\n  background-repeat: no-repeat;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(96, 255, 205, 0.38) 10%,\r\n      rgba(96, 255, 218, 0) 90%\r\n    );\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    padding: 3.2rem 1.9rem 1.8rem 2.4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    padding: 3.4rem 2.5rem 2.9rem 2.4rem;\r\n  }\r\n`;\r\n\r\nconst RotateBorder = styled.span`\r\n  position: absolute;\r\n  display: block;\r\n  filter: blur(3px);\r\n  &:nth-child(1) {\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 3px;\r\n    background: linear-gradient(90deg, transparent, #60ffda);\r\n    animation: animate1 1s linear infinite;\r\n  }\r\n  @keyframes animate1 {\r\n    0% {\r\n      left: 100%;\r\n    }\r\n    50%,\r\n    100% {\r\n      left: -100%;\r\n    }\r\n  }\r\n  &:nth-child(2) {\r\n    top: -100%;\r\n    left: 0;\r\n    width: 3px;\r\n    height: 100%;\r\n    background: linear-gradient(180deg, transparent, #60ffda);\r\n    animation: animate2 1s linear infinite;\r\n    animation-delay: 0.25s;\r\n  }\r\n  @keyframes animate2 {\r\n    0% {\r\n      top: -100%;\r\n    }\r\n    50%,\r\n    100% {\r\n      top: 100%;\r\n    }\r\n  }\r\n  &:nth-child(3) {\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 3px;\r\n    background: linear-gradient(270deg, transparent, #60ffda);\r\n    animation: animate3 1s linear infinite;\r\n    animation-delay: 0.5s;\r\n  }\r\n  @keyframes animate3 {\r\n    0% {\r\n      left: -100%;\r\n    }\r\n    50%,\r\n    100% {\r\n      left: 100%;\r\n    }\r\n  }\r\n  &:nth-child(4) {\r\n    bottom: -100%;\r\n    right: 0;\r\n    width: 3px;\r\n    height: 100%;\r\n    background: linear-gradient(360deg, transparent, #60ffda);\r\n    animation: animate4 1s linear infinite;\r\n    animation-delay: 0.75s;\r\n  }\r\n  @keyframes animate4 {\r\n    0% {\r\n      bottom: -100%;\r\n    }\r\n    50%,\r\n    100% {\r\n      bottom: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width: 22.5rem;\r\n  text-align: left;\r\n  font-size: 3.2rem;\r\n  font-weight: 700;\r\n  line-height: 4.65rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 2.8rem;\r\n    line-height: 4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    font-size: 2.4rem;\r\n    line-height: 3.4rem;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 22.2rem;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    line-height: 1.8rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    line-height: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst TestNumber = styled.div`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n`;\r\n\r\nconst Play = styled.span`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n`;\r\n\r\nconst PlayBtn = styled.div`\r\n  width: 2.8rem;\r\n  height: 2.8rem;\r\n  background-image: url(${PlayImg});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n  display: flex;\r\n  width: 6.6rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayBox = () => {\r\n  return (\r\n    <PlayBtnBox>\r\n      <Play>플레이</Play>\r\n      <PlayBtn />\r\n    </PlayBtnBox>\r\n  );\r\n};\r\n\r\nconst PlayFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapOne = styled.div``;\r\n\r\nconst CardWrapTwo = styled.div`\r\n  & > ${Card} {\r\n    // 컬러 뒤집어서 주기\r\n  }\r\n`;\r\n\r\nconst CardWrapThree = styled.div`\r\n  @media (max-width: 828px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardWrapFour = styled.div`\r\n  & > ${Card} {\r\n    // 컬러 뒤집어서 주기\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardListWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 123.2rem;\r\n  height: ${(props) => props.height}rem;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 92rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 81.6rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 57rem;\r\n  }\r\n`;\r\n\r\nconst GradientBox = styled.div`\r\n  width: 130.3rem;\r\n  height: 22.2rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: -3.55rem;\r\n  background: linear-gradient(to bottom, transparent, #071923);\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 95.7rem;\r\n    left: -1.85rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 86rem;\r\n    left: -2.2rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 60.1rem;\r\n    left: -1.55rem;\r\n  }\r\n`;\r\n\r\nconst LoadMoreBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60.7rem;\r\n  height: 6rem;\r\n  margin: 1.4rem auto 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  letter-spacing: 0.025em;\r\n  border-radius: 8px;\r\n  border: 2px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  border-radius: 14px;\r\n  border-right-color: #00ffa3;\r\n  border-left-color: rgba(82, 0, 255, 0.8);\r\n  background: linear-gradient(to left, #00ffa3 0%, rgba(82, 0, 255, 0.8) 100%)\r\n      top/100% 3px,\r\n    linear-gradient(to left, #00ffa3 0%, rgba(82, 0, 255, 0.8) 100%) bottom/100%\r\n      3px;\r\n  background-repeat: no-repeat;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 29.6rem;\r\n    height: 6rem;\r\n    margin: 0.9rem auto 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 5.2rem;\r\n    margin: 1.5rem auto 0;\r\n    font-size: 1.8rem;\r\n    letter-spacing: 0;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 35.2rem;\r\n    height: 4.8rem;\r\n    margin: 0.7rem auto 0;\r\n    letter-spacing: 0.005em;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CardList = ({ testList, testList2 }) => {\r\n  testList = Object.values(testList);\r\n  console.log(testList);\r\n  console.log(testList2, testList2.length);\r\n\r\n  // testList와 testList2에 공통으로 있는 것만 리턴\r\n  let finalList = [];\r\n  testList.forEach((item) => {\r\n    testList2.forEach((item2) => {\r\n      if (\r\n        item.title.toLowerCase().includes(item2.title.toLowerCase()) &&\r\n        item.description.toLowerCase().includes(item2.description.toLowerCase())\r\n      ) {\r\n        finalList.push(item2);\r\n      }\r\n    });\r\n  });\r\n  console.log(finalList);\r\n  // testList = finalList;\r\n\r\n  const history = useHistory();\r\n\r\n  const [count, setCount] = useState(2);\r\n  const [height, setHeight] = useState(116.5);\r\n  const countPlus = (e) => {\r\n    setCount(count + 1);\r\n    console.log(count);\r\n    setHeight(count * 116.5);\r\n    console.log(height);\r\n  };\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const divideNum = width > 1440 ? 4 : width > 828 ? 3 : 2;\r\n  const divided = parseInt(testList.length / divideNum);\r\n  const leftOver = testList.length % divideNum;\r\n\r\n  let one = divided + leftOver,\r\n    two = divided,\r\n    three = divided,\r\n    four = divided;\r\n  if (leftOver === 2) {\r\n    two += 1;\r\n    one -= 1;\r\n  }\r\n  if (leftOver === 3) {\r\n    two += 1;\r\n    three += 1;\r\n    one -= 2;\r\n  }\r\n  if (leftOver === 4) {\r\n    two += 1;\r\n    three += 1;\r\n    four += 1;\r\n    one -= 3;\r\n  }\r\n\r\n  const maxHeight =\r\n    width > 1024 ? 35 * (divided + leftOver) : 29 * (divided + leftOver);\r\n  console.log(maxHeight);\r\n\r\n  return (\r\n    <>\r\n      <CardListWrap height={height}>\r\n        <CardWrapOne>\r\n          <Link to=\"/testmaking\">\r\n            <PlusBtn>\r\n              <RotateBorder />\r\n              <RotateBorder />\r\n              <RotateBorder />\r\n              <RotateBorder />\r\n            </PlusBtn>\r\n          </Link>\r\n          <BlankTop DesktopMargin={1.6} TabletMargin={1.6} MobileMargin={1.8} />\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index < one) {\r\n                return (\r\n                  <>\r\n                    <Card\r\n                      key={index}\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={0.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapOne>\r\n        <CardWrapTwo>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 828) {\r\n                if (index >= one) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one && index < one + two) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapTwo>\r\n        <CardWrapThree>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 1440) {\r\n                if (index >= one + two) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one + two && index < one + two + three) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapThree>\r\n        <CardWrapFour>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index >= one + two + three) {\r\n                return (\r\n                  <>\r\n                    <Card\r\n                      key={index}\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={0.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapFour>\r\n        <GradientBox />\r\n      </CardListWrap>\r\n      {height < maxHeight && (\r\n        <LoadMoreBtn onClick={countPlus}>더보기</LoadMoreBtn>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js",["456","457","458","459"],"import styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { logoutUser } from \"../../../_actions/user_action\";\r\nconst HeaderDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100vw;\r\n  height: 9.4rem;\r\n  padding: 2.7rem 5.6rem;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 6.4rem;\r\n    padding: 1.2rem 1.8rem;\r\n  }\r\n`;\r\n\r\nconst LoginDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem;\r\n  margin-right: 1.1rem;\r\n  cursor: pointer;\r\n  @media(max-width: 768px){\r\n    margin-right: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst Login = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst SignUpDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SignUp = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst SignOut = styled.button`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  background-color:rgba(0,0,0,0);\r\n  border:rgba(0,0,0,0);\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\n\r\n\r\nfunction Header() {\r\n  const [myState, setMyState] =useState({status: 'idle', member:null});\r\n  const dispatch = useDispatch();\r\n  const LogOut = async(evt) => {\r\n    window.localStorage.setItem('isAuth','false');\r\n    window.localStorage.setItem('jwt','');\r\n      dispatch(logoutUser());\r\n      setMyState({status:'pending'});\r\n      setTimeout(() => setMyState({ status: 'resolved' , member:null}), 600);\r\n    };\r\n    \r\n  switch (window.localStorage.getItem('isAuth')) {\r\n    case 'false':\r\n      return (\r\n        <HeaderDiv>\r\n          <LoginDiv>\r\n          <Link to=\"/login\">\r\n            <Login>로그인</Login>\r\n          </Link>\r\n        </LoginDiv>\r\n  \r\n        <SignUpDiv>\r\n          <Link to=\"/register\">\r\n            <SignUp>회원가입</SignUp>\r\n          </Link>\r\n        </SignUpDiv>\r\n        </HeaderDiv>\r\n      );\r\n      case 'true':\r\n        return(\r\n        <HeaderDiv>\r\n        <SignUpDiv>\r\n          <Link to=\"/\">\r\n            <SignOut onClick={(LogOut)} >로그아웃</SignOut>\r\n            </Link>\r\n        </SignUpDiv>\r\n        </HeaderDiv>\r\n        );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js",["460"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js",["461","462"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 서버랑 통신해서 카테고리 이름 받아오기\r\nconst CategoryName = styled.span`\r\n  font-size: 1.3rem;\r\n  line-height: 1.035;\r\n  color: #dadada;\r\n  @media (max-width: 1440px) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (max-width: 1047px) {\r\n    font-size: 1.15rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.2rem;\r\n    line-height: 1.035;\r\n  }\r\n`;\r\n\r\nconst CategoryBtn = styled.button`\r\n  display: block;\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n  border: none;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 9px 0 #ffffff;\r\n  background-color: #ffffff;\r\n  cursor: pointer;\r\n  &:focus {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    outline: none;\r\n    box-shadow: 0 0 12px 0 #60ffda;\r\n    background-color: #60ffda;\r\n  }\r\n  &:hover {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    box-shadow: 0 0 12px 0 #ffffff;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CategoryItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 6.9rem;\r\n  height: 5.3rem;\r\n  margin-right: 4.3rem;\r\n  &:nth-child(9) {\r\n    margin-right: 8rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    &:nth-child(7) {\r\n      margin-right: 1.4rem;\r\n    }\r\n  }\r\n  @media (max-width: 828px) {\r\n    &:nth-child(5) {\r\n      margin-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CategoryList = ({ categoryList, startNum, onClickDisplay }) => {\r\n  console.log(categoryList);\r\n  const { width } = useWindowDimensions();\r\n\r\n  const categoryNum = width > 1024 ? 7 : width > 828 ? 5 : 3;\r\n\r\n  return (\r\n    <>\r\n      {categoryList.map((item, index) => {\r\n        if (index === 9) {\r\n          return (\r\n            <CategoryItem>\r\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn onClick={() => onClickDisplay(item[\"id\"])} />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n      {categoryList.map((item, index) => {\r\n        if (index < startNum + categoryNum && index >= startNum) {\r\n          return (\r\n            <CategoryItem>\r\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn onClick={() => onClickDisplay(item[\"id\"])} />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js",["463"],"import styled, { css, keyframes } from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n  display: ${props => (props.visible ? 'block' : 'none')};\r\n  /* visibility: ${props => (props.visible ? 'visible' : 'hidden')}; */\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 999;\r\n  transition: all 1s ease-in-out;\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n`\r\n\r\nconst FadeIn = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`\r\n\r\nconst FadeOut = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n`\r\n\r\nconst ModalOverlay = ({ visible, modalIn, modalOut }) => {\r\n  return <Overlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\r\n}\r\n\r\nexport default ModalOverlay\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\MenuIcon.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js",[],{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":5,"column":1,"nodeType":"470","endLine":52,"endColumn":2},{"ruleId":"471","severity":1,"message":"472","line":42,"column":11,"nodeType":"473","endLine":42,"endColumn":13,"suggestions":"474"},{"ruleId":"471","severity":1,"message":"475","line":117,"column":5,"nodeType":"473","endLine":117,"endColumn":7,"suggestions":"476"},{"ruleId":"477","severity":1,"message":"478","line":1,"column":8,"nodeType":"479","messageId":"480","endLine":1,"endColumn":16},{"ruleId":"477","severity":1,"message":"481","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"482","line":2,"column":21,"nodeType":"479","messageId":"480","endLine":2,"endColumn":25},{"ruleId":"477","severity":1,"message":"483","line":161,"column":11,"nodeType":"479","messageId":"480","endLine":161,"endColumn":16},{"ruleId":"477","severity":1,"message":"484","line":166,"column":11,"nodeType":"479","messageId":"480","endLine":166,"endColumn":22},{"ruleId":"468","severity":1,"message":"469","line":4,"column":1,"nodeType":"470","endLine":23,"endColumn":2},{"ruleId":"485","severity":1,"message":"486","line":8,"column":13,"nodeType":"487","messageId":"488","endLine":8,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":11,"column":13,"nodeType":"487","messageId":"488","endLine":11,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":14,"column":13,"nodeType":"487","messageId":"488","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"489","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":14},{"ruleId":"464","replacedBy":"490"},{"ruleId":"466","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":50,"column":27,"nodeType":"494","messageId":"495","endLine":50,"endColumn":29},{"ruleId":"471","severity":1,"message":"496","line":57,"column":6,"nodeType":"473","endLine":57,"endColumn":8,"suggestions":"497"},{"ruleId":"477","severity":1,"message":"498","line":47,"column":10,"nodeType":"479","messageId":"480","endLine":47,"endColumn":14},{"ruleId":"477","severity":1,"message":"499","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":12},{"ruleId":"500","severity":1,"message":"501","line":219,"column":95,"nodeType":"502","messageId":"503","endLine":219,"endColumn":96,"suggestions":"504"},{"ruleId":"500","severity":1,"message":"505","line":219,"column":97,"nodeType":"502","messageId":"503","endLine":219,"endColumn":98,"suggestions":"506"},{"ruleId":"471","severity":1,"message":"507","line":782,"column":10,"nodeType":"473","endLine":782,"endColumn":12,"suggestions":"508"},{"ruleId":"500","severity":1,"message":"501","line":218,"column":91,"nodeType":"502","messageId":"503","endLine":218,"endColumn":92,"suggestions":"509"},{"ruleId":"500","severity":1,"message":"505","line":218,"column":93,"nodeType":"502","messageId":"503","endLine":218,"endColumn":94,"suggestions":"510"},{"ruleId":"471","severity":1,"message":"507","line":795,"column":10,"nodeType":"473","endLine":795,"endColumn":12,"suggestions":"511"},{"ruleId":"471","severity":1,"message":"512","line":854,"column":11,"nodeType":"473","endLine":854,"endColumn":131,"suggestions":"513"},{"ruleId":"471","severity":1,"message":"514","line":45,"column":6,"nodeType":"473","endLine":45,"endColumn":8,"suggestions":"515"},{"ruleId":"471","severity":1,"message":"516","line":49,"column":7,"nodeType":"473","endLine":49,"endColumn":9,"suggestions":"517"},{"ruleId":"471","severity":1,"message":"518","line":62,"column":7,"nodeType":"473","endLine":62,"endColumn":24,"suggestions":"519"},{"ruleId":"471","severity":1,"message":"520","line":112,"column":6,"nodeType":"473","endLine":112,"endColumn":14,"suggestions":"521"},{"ruleId":"477","severity":1,"message":"522","line":9,"column":25,"nodeType":"479","messageId":"480","endLine":9,"endColumn":42},{"ruleId":"471","severity":1,"message":"523","line":37,"column":6,"nodeType":"473","endLine":37,"endColumn":19,"suggestions":"524"},{"ruleId":"525","severity":1,"message":"526","line":102,"column":13,"nodeType":"479","messageId":"527","endLine":102,"endColumn":18},{"ruleId":"471","severity":1,"message":"475","line":30,"column":6,"nodeType":"473","endLine":30,"endColumn":8,"suggestions":"528"},{"ruleId":"477","severity":1,"message":"529","line":436,"column":5,"nodeType":"479","messageId":"480","endLine":436,"endColumn":9},{"ruleId":"530","severity":1,"message":"531","line":458,"column":42,"nodeType":"532","messageId":"533","endLine":458,"endColumn":44},{"ruleId":"530","severity":1,"message":"531","line":496,"column":42,"nodeType":"532","messageId":"533","endLine":496,"endColumn":44},{"ruleId":"530","severity":1,"message":"531","line":569,"column":42,"nodeType":"532","messageId":"533","endLine":569,"endColumn":44},{"ruleId":"530","severity":1,"message":"531","line":642,"column":42,"nodeType":"532","messageId":"533","endLine":642,"endColumn":44},{"ruleId":"477","severity":1,"message":"481","line":4,"column":10,"nodeType":"479","messageId":"480","endLine":4,"endColumn":19},{"ruleId":"477","severity":1,"message":"534","line":4,"column":31,"nodeType":"479","messageId":"480","endLine":4,"endColumn":37},{"ruleId":"477","severity":1,"message":"535","line":73,"column":10,"nodeType":"479","messageId":"480","endLine":73,"endColumn":17},{"ruleId":"536","severity":1,"message":"537","line":83,"column":3,"nodeType":"538","messageId":"539","endLine":110,"endColumn":4},{"ruleId":"471","severity":1,"message":"540","line":25,"column":6,"nodeType":"473","endLine":25,"endColumn":8,"suggestions":"541"},{"ruleId":"530","severity":1,"message":"531","line":100,"column":39,"nodeType":"532","messageId":"533","endLine":100,"endColumn":41},{"ruleId":"530","severity":1,"message":"531","line":110,"column":39,"nodeType":"532","messageId":"533","endLine":110,"endColumn":41},{"ruleId":"477","severity":1,"message":"542","line":32,"column":7,"nodeType":"479","messageId":"480","endLine":32,"endColumn":14},"no-native-reassign",["543"],"no-negated-in-lhs",["544"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["545"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["546"],"no-unused-vars","'BlankTop' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'styled' is defined but never used.",["543"],["544"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'getRecommendAPI'. Either include it or remove the dependency array.",["547"],"'test' is assigned a value but never used.","'Test' is defined but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["548","549"],"Unnecessary escape character: \\?.",["550","551"],"React Hook useEffect has missing dependencies: 'checkCurrentTime0', 'checkCurrentTime1', 'checkCurrentTime2', 'checkCurrentTime3', 'checkCurrentTime4', 'checkCurrentTime5', 'checkCurrentTime6', 'checkCurrentTime7', 'checkCurrentTime8', 'checkCurrentTime9', 'onReadyAPI0', 'onReadyAPI1', 'onReadyAPI2', 'onReadyAPI3', 'onReadyAPI4', 'onReadyAPI5', 'onReadyAPI6', 'onReadyAPI7', 'onReadyAPI8', and 'onReadyAPI9'. Either include them or remove the dependency array.",["552"],["553","554"],["555","556"],["557"],"React Hook useEffect has missing dependencies: 'getTestData' and 'match.params.id'. Either include them or remove the dependency array.",["558"],"React Hook useEffect has a missing dependency: 'testCategory'. Either include it or remove the dependency array.",["559"],"React Hook useEffect has a missing dependency: 'questionStartsfrom'. Either include it or remove the dependency array. If 'setMinutes' needs the current value of 'questionStartsfrom', you can also switch to useReducer instead of useState and read 'questionStartsfrom' in the reducer.",["560"],"React Hook useEffect has missing dependencies: 'changeStartTime' and 'totalTime'. Either include them or remove the dependency array. If 'changeStartTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["561"],"React Hook useEffect has a missing dependency: 'first'. Either include it or remove the dependency array.",["562"],"'setContainerWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newList'. Either include it or remove the dependency array. If 'setSound1Url' needs the current value of 'newList', you can also switch to useReducer instead of useState and read 'newList' in the reducer.",["563"],"no-redeclare","'audio' is already defined.","redeclared",["564"],"'four' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","'myState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'urlId'. Either include it or remove the dependency array. If 'setData' needs the current value of 'urlId', you can also switch to useReducer instead of useState and read 'urlId' in the reducer.",["565"],"'FadeOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"messageId":"572","fix":"573","desc":"574"},{"messageId":"575","fix":"576","desc":"577"},{"messageId":"572","fix":"578","desc":"574"},{"messageId":"575","fix":"579","desc":"577"},{"desc":"580","fix":"581"},{"messageId":"572","fix":"582","desc":"574"},{"messageId":"575","fix":"583","desc":"577"},{"messageId":"572","fix":"584","desc":"574"},{"messageId":"575","fix":"585","desc":"577"},{"desc":"580","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"568","fix":"599"},{"desc":"600","fix":"601"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"602","text":"603"},"Update the dependencies array to be: [dispatch]",{"range":"604","text":"605"},"Update the dependencies array to be: [getRecommendAPI]",{"range":"606","text":"607"},"removeEscape",{"range":"608","text":"609"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"610","text":"611"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"612","text":"609"},{"range":"613","text":"611"},"Update the dependencies array to be: [checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",{"range":"614","text":"615"},{"range":"616","text":"609"},{"range":"617","text":"611"},{"range":"618","text":"609"},{"range":"619","text":"611"},{"range":"620","text":"615"},"Update the dependencies array to be: [getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",{"range":"621","text":"622"},"Update the dependencies array to be: [testCategory]",{"range":"623","text":"624"},"Update the dependencies array to be: [questionStartsfrom]",{"range":"625","text":"626"},"Update the dependencies array to be: [changeStartTime, minutes, seconds, totalTime]",{"range":"627","text":"628"},"Update the dependencies array to be: [first, search]",{"range":"629","text":"630"},"Update the dependencies array to be: [activeIndex, newList]",{"range":"631","text":"632"},{"range":"633","text":"605"},"Update the dependencies array to be: [urlId]",{"range":"634","text":"635"},[1518,1520],"[dispatch, props.history]",[2877,2879],"[dispatch]",[1457,1459],"[getRecommendAPI]",[8562,8563],"",[8562,8562],"\\",[8564,8565],[8564,8564],[24714,24716],"[checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",[8476,8477],[8476,8476],[8478,8479],[8478,8478],[25031,25033],[27264,27384],"[getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",[1448,1450],"[testCategory]",[1283,1285],"[questionStartsfrom]",[1675,1692],"[changeStartTime, minutes, seconds, totalTime]",[2574,2582],"[first, search]",[1747,1760],"[activeIndex, newList]",[1186,1188],[856,858],"[urlId]"]