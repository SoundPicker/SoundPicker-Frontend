[{"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js":"1","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js":"2","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js":"3","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js":"4","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js":"5","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js":"6","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js":"7","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js":"8","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js":"9","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js":"10","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js":"11","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\ScrollToTop.js":"12","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js":"13","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js":"14","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js":"15","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js":"16","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js":"17","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js":"18","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js":"19","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js":"20","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js":"21","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js":"22","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js":"23","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js":"24","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js":"25","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js":"26","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js":"27","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js":"28","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js":"29","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js":"30","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js":"31","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js":"32","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js":"33","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js":"34","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js":"35","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js":"36","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js":"37","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js":"38","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js":"39","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js":"40","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js":"41","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js":"42","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js":"43","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js":"44","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js":"45","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js":"46","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js":"47","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js":"48","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js":"49","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js":"50","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js":"51","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js":"52","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js":"53","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js":"54","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js":"55","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js":"56","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js":"57","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js":"58","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js":"59","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js":"60","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js":"61","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js":"62","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js":"63","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js":"64","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js":"65","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js":"66","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js":"67","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js":"68","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js":"69","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js":"70","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js":"71","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js":"72","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndBlankTop.js":"73","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js":"74","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndDivider.js":"75","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js":"76","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js":"77","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js":"78","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js":"79","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js":"80","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainBlankTop.js":"81","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js":"82","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js":"83","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainDivider.js":"84","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js":"85","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js":"86","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js":"87","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js":"88","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js":"89","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js":"90","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js":"91","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js":"92","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js":"93","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js":"94","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js":"95","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js":"96","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js":"97","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js":"98","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\UnderLineWrap.js":"99"},{"size":717,"mtime":1610256425150,"results":"100","hashOfConfig":"101"},{"size":1869,"mtime":1610602533572,"results":"102","hashOfConfig":"101"},{"size":160,"mtime":1610256425013,"results":"103","hashOfConfig":"101"},{"size":1782,"mtime":1610605551459,"results":"104","hashOfConfig":"101"},{"size":1606,"mtime":1610609894653,"results":"105","hashOfConfig":"101"},{"size":7934,"mtime":1610609936360,"results":"106","hashOfConfig":"101"},{"size":356,"mtime":1610453770164,"results":"107","hashOfConfig":"101"},{"size":450,"mtime":1610453770149,"results":"108","hashOfConfig":"101"},{"size":1613,"mtime":1610609894646,"results":"109","hashOfConfig":"101"},{"size":3135,"mtime":1610615430832,"results":"110","hashOfConfig":"101"},{"size":2623,"mtime":1610615347461,"results":"111","hashOfConfig":"101"},{"size":357,"mtime":1610596545587,"results":"112","hashOfConfig":"101"},{"size":10446,"mtime":1610615729759,"results":"113","hashOfConfig":"101"},{"size":8401,"mtime":1610615826345,"results":"114","hashOfConfig":"101"},{"size":387,"mtime":1610602582840,"results":"115","hashOfConfig":"101"},{"size":629,"mtime":1610456274122,"results":"116","hashOfConfig":"101"},{"size":753,"mtime":1610596545575,"results":"117","hashOfConfig":"101"},{"size":10981,"mtime":1610602295957,"results":"118","hashOfConfig":"101"},{"size":743,"mtime":1610456274214,"results":"119","hashOfConfig":"101"},{"size":793,"mtime":1609826436588,"results":"120","hashOfConfig":"101"},{"size":1300,"mtime":1610605178228,"results":"121","hashOfConfig":"101"},{"size":718,"mtime":1609826205313,"results":"122","hashOfConfig":"101"},{"size":1178,"mtime":1609398269767,"results":"123","hashOfConfig":"101"},{"size":838,"mtime":1610540306918,"results":"124","hashOfConfig":"101"},{"size":701,"mtime":1610456274209,"results":"125","hashOfConfig":"101"},{"size":820,"mtime":1610612797673,"results":"126","hashOfConfig":"101"},{"size":853,"mtime":1610608332953,"results":"127","hashOfConfig":"101"},{"size":805,"mtime":1610596545691,"results":"128","hashOfConfig":"101"},{"size":853,"mtime":1610608890700,"results":"129","hashOfConfig":"101"},{"size":821,"mtime":1610609647064,"results":"130","hashOfConfig":"101"},{"size":805,"mtime":1610256425141,"results":"131","hashOfConfig":"101"},{"size":800,"mtime":1610462325378,"results":"132","hashOfConfig":"101"},{"size":522,"mtime":1610255541679,"results":"133","hashOfConfig":"101"},{"size":1221,"mtime":1610255541668,"results":"134","hashOfConfig":"101"},{"size":2232,"mtime":1610456274121,"results":"135","hashOfConfig":"101"},{"size":2651,"mtime":1610596545708,"results":"136","hashOfConfig":"101"},{"size":315,"mtime":1610453770051,"results":"137","hashOfConfig":"101"},{"size":1510,"mtime":1610453770040,"results":"138","hashOfConfig":"101"},{"size":40740,"mtime":1610609894630,"results":"139","hashOfConfig":"101"},{"size":42108,"mtime":1610609894621,"results":"140","hashOfConfig":"101"},{"size":3731,"mtime":1610596545704,"results":"141","hashOfConfig":"101"},{"size":293,"mtime":1610456274119,"results":"142","hashOfConfig":"101"},{"size":78,"mtime":1610256425084,"results":"143","hashOfConfig":"101"},{"size":2043,"mtime":1610453770070,"results":"144","hashOfConfig":"101"},{"size":711,"mtime":1610453769964,"results":"145","hashOfConfig":"101"},{"size":3331,"mtime":1610596545665,"results":"146","hashOfConfig":"101"},{"size":896,"mtime":1610602533577,"results":"147","hashOfConfig":"101"},{"size":18507,"mtime":1610602533584,"results":"148","hashOfConfig":"101"},{"size":826,"mtime":1610453769959,"results":"149","hashOfConfig":"101"},{"size":1084,"mtime":1610255541674,"results":"150","hashOfConfig":"101"},{"size":653,"mtime":1610453769974,"results":"151","hashOfConfig":"101"},{"size":2031,"mtime":1610602295975,"results":"152","hashOfConfig":"101"},{"size":6753,"mtime":1610453770077,"results":"153","hashOfConfig":"101"},{"size":1662,"mtime":1610453769973,"results":"154","hashOfConfig":"101"},{"size":544,"mtime":1610453769968,"results":"155","hashOfConfig":"101"},{"size":1334,"mtime":1610255541683,"results":"156","hashOfConfig":"101"},{"size":924,"mtime":1610255541686,"results":"157","hashOfConfig":"101"},{"size":567,"mtime":1610255541676,"results":"158","hashOfConfig":"101"},{"size":834,"mtime":1610453769988,"results":"159","hashOfConfig":"101"},{"size":1023,"mtime":1610602295961,"results":"160","hashOfConfig":"101"},{"size":596,"mtime":1610255541696,"results":"161","hashOfConfig":"101"},{"size":1102,"mtime":1610255541702,"results":"162","hashOfConfig":"101"},{"size":558,"mtime":1610255541703,"results":"163","hashOfConfig":"101"},{"size":415,"mtime":1610255541700,"results":"164","hashOfConfig":"101"},{"size":413,"mtime":1610255541699,"results":"165","hashOfConfig":"101"},{"size":765,"mtime":1610453769978,"results":"166","hashOfConfig":"101"},{"size":455,"mtime":1610255541717,"results":"167","hashOfConfig":"101"},{"size":4616,"mtime":1610596545604,"results":"168","hashOfConfig":"101"},{"size":6547,"mtime":1610453769956,"results":"169","hashOfConfig":"101"},{"size":9149,"mtime":1610453769996,"results":"170","hashOfConfig":"101"},{"size":1156,"mtime":1610602533580,"results":"171","hashOfConfig":"101"},{"size":2778,"mtime":1610462325389,"results":"172","hashOfConfig":"101"},{"size":961,"mtime":1610596545669,"results":"173","hashOfConfig":"101"},{"size":4768,"mtime":1610596545656,"results":"174","hashOfConfig":"101"},{"size":794,"mtime":1610596545672,"results":"175","hashOfConfig":"101"},{"size":863,"mtime":1610596545661,"results":"176","hashOfConfig":"101"},{"size":607,"mtime":1610255541558,"results":"177","hashOfConfig":"101"},{"size":833,"mtime":1610596545679,"results":"178","hashOfConfig":"101"},{"size":788,"mtime":1610255541562,"results":"179","hashOfConfig":"101"},{"size":2868,"mtime":1610540588275,"results":"180","hashOfConfig":"101"},{"size":955,"mtime":1610596545607,"results":"181","hashOfConfig":"101"},{"size":19950,"mtime":1610609851805,"results":"182","hashOfConfig":"101"},{"size":7885,"mtime":1610602582816,"results":"183","hashOfConfig":"101"},{"size":788,"mtime":1610596545611,"results":"184","hashOfConfig":"101"},{"size":535,"mtime":1610453770024,"results":"185","hashOfConfig":"101"},{"size":575,"mtime":1610453769865,"results":"186","hashOfConfig":"101"},{"size":1142,"mtime":1610453769875,"results":"187","hashOfConfig":"101"},{"size":1023,"mtime":1610453769882,"results":"188","hashOfConfig":"101"},{"size":933,"mtime":1610596545675,"results":"189","hashOfConfig":"101"},{"size":1085,"mtime":1610596545653,"results":"190","hashOfConfig":"101"},{"size":964,"mtime":1610596545646,"results":"191","hashOfConfig":"101"},{"size":1406,"mtime":1610615615173,"results":"192","hashOfConfig":"101"},{"size":3068,"mtime":1610596545619,"results":"193","hashOfConfig":"101"},{"size":879,"mtime":1610602582812,"results":"194","hashOfConfig":"101"},{"size":632,"mtime":1610602582824,"results":"195","hashOfConfig":"101"},{"size":3317,"mtime":1610602582820,"results":"196","hashOfConfig":"101"},{"size":557,"mtime":1610453769897,"results":"197","hashOfConfig":"101"},{"size":3912,"mtime":1610609851795,"results":"198","hashOfConfig":"101"},{"size":793,"mtime":1610604199394,"results":"199","hashOfConfig":"101"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"gcv23r",{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"202"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"202"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"202"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"202"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"202"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"202"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"202"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"202"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"202"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"202"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"202"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"202"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"202"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"202"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"202"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"202"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"202"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"202"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"202"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"202"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\index.js",[],["420","421"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\App.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\index.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\hoc\\auth.js",["422","423"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport default function(SpecificComponent,option,adminRoute=null){\r\n\r\n    // null => 아무나 출입이 가능한 페이지\r\n    // true => 로그인한 유저만 출입이 가능한 페이지\r\n    // false => 로그인한 유저는 출입 불가능한 페이지\r\n\r\n    function AuthenticationCheck(props){\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n        if(window.localStorage.getItem('isAuth')===null){\r\n            window.localStorage.setItem('isAuth','false');\r\n        }\r\n        \r\n\r\n        useEffect(()=>{\r\n        \r\n            dispatch(()=>{\r\n                console.log(window.localStorage.getItem('isAuth'));\r\n                    //로그인 하지 않은 상태\r\n                    if(window.localStorage.getItem('isAuth')==='false'&&window.location.hash==='#/register'){\r\n                        props.history.push('/register');\r\n                    }else if(window.localStorage.getItem('isAuth')==='false'){\r\n                        props.history.push('/login');\r\n\r\n                    }else{\r\n                        //로그인 한 상태\r\n                        if(adminRoute && window.localStorage.getItem('isAuth')==='true'){\r\n                            props.history.push('/');\r\n                        }else{\r\n                            if(option===false){\r\n                                props.history.push('/');\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n            })\r\n\r\n        },[])\r\n        \r\n        return(\r\n            <SpecificComponent {...props} user={user}/>\r\n        )\r\n\r\n    }\r\n\r\n    return AuthenticationCheck;\r\n\r\n}","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js",["424"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js",["425"],"import BlankTop from '../../components/common/BlankTop'\r\nimport TestCdWrapperContainer from '../../containers/test/TestCd/TestCdWrapperContainer'\r\nimport TestWrapperContainer from '../../containers/test/TestWrapperContainer'\r\n\r\nconst TestPage = ({ match }) => {\r\n  // state\r\n  return (\r\n    <>\r\n      <TestWrapperContainer>\r\n        <TestCdWrapperContainer match={match} />\r\n      </TestWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\testedit\\TestEditPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js",["426"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\ScrollToTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\LoginPage.js",["427","428","429"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js",["430","431","432","433"],"import { useEffect, useState } from \"react\";\r\nimport BlankTop from \"../../components/common/BlankTop\";\r\nimport MainContainer from \"../../containers/main/MainContainer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MainPage = (match) => {\r\n  // 여기는 최종 집합소 !\r\n\r\n  return (\r\n    <>\r\n      <MainContainer match={match} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_reducers\\user_reducer.js",["434","435","436","437"],"import{LOGIN_USER,REGISTER_USER, AUTH_USER, LOGOUT_USER,} from '../_actions/types'\r\n\r\n\r\nexport default function (state={},action){\r\n    switch (action.type){\r\n        case LOGIN_USER:\r\n                return {...state,loginSuccess:action.payload};\r\n            break;\r\n        case REGISTER_USER:\r\n                return {...state,register:action.payload};\r\n            break;\r\n            case AUTH_USER:\r\n                return {...state,userData:action.payload};\r\n            break; \r\n            case LOGOUT_USER:\r\n                return { }       \r\n        \r\n        default:\r\n            return state;\r\n\r\n        \r\n    }\r\n}","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\QuizHeader.js",["438"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport ham from '../../assets/images/hammenu/menu.jpg'\r\nimport arrow from '../../assets/images/hammenu/button_back.jpg'\r\nimport BlankTop from './BlankTop'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth } from '../../_actions/user_action'\r\n\r\nfunction QuizHeader() {\r\n  useEffect(() => window.scrollTo({ top: 0, left: 0, behavior: 'auto' }), []) // 처음 들어왔을때만 스크롤 맨위로 + 메뉴 열어도 위치 고정\r\n  const [clickOpenArrow, setClickOpenArrow] = useState(false) // 여는 트리거\r\n  const [clickCloseArrow, setClickCloseArrow] = useState(false) // 닫는 트리거 //\r\n\r\n  const history = useHistory()\r\n  const [myState, setMyState] = useState({ status: 'idle', member: null })\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(() => {\r\n      dispatch(auth()).then(response => {\r\n        setMyState({ status: 'pending' })\r\n        const data = response.payload.data\r\n        setTimeout(() => setMyState({ status: 'resolved', member: data }), 600)\r\n      })\r\n    })\r\n    ;(async () => {\r\n      try {\r\n      } catch (e) {}\r\n    })()\r\n  }, [])\r\n\r\n  switch (myState.status) {\r\n    case 'pending':\r\n      return <></>\r\n\r\n    case 'resolved':\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  {myState.member.nickname ? ( // 로그인 한 경우 : 로그아웃인 상태로 게임 하는경우\r\n                    <span>Hi, {myState.member.nickname}</span>\r\n                  ) : (\r\n                    <span>Hi, User</span>\r\n                  )}\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n    case 'rejected':\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  <span>Hi, User</span>\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n    case 'idle':\r\n    default:\r\n      return (\r\n        <>\r\n          <QuizWrapper>\r\n            <HamImg\r\n              onClick={() => {\r\n                setClickOpenArrow(true)\r\n                setClickCloseArrow(false)\r\n              }}\r\n              src={ham}\r\n            />\r\n            <MenuBox\r\n              clickCloseArrow={clickCloseArrow}\r\n              clickOpenArrow={clickOpenArrow}\r\n            >\r\n              <ArrowWrapper>\r\n                <ArrowImg\r\n                  src={arrow}\r\n                  onClick={() => {\r\n                    setClickCloseArrow(true)\r\n                    setClickOpenArrow(false)\r\n                  }}\r\n                />\r\n              </ArrowWrapper>\r\n              <BlankTop DesktopMargin=\"7\" TabletMargin=\"8\" MobileMargin=\"7\" />\r\n              <ContentWrapper>\r\n                <UserInfo>\r\n                  <span>Hi, User</span>\r\n                </UserInfo>\r\n              </ContentWrapper>\r\n              <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <LineWrapper>\r\n                <ContentLine />\r\n              </LineWrapper>\r\n              <BlankTop DesktopMargin=\"5\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n              <PageWrapper>\r\n                <ul>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/')\r\n                    }}\r\n                  >\r\n                    Main\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/testmaking')\r\n                    }}\r\n                  >\r\n                    Make\r\n                  </li>\r\n                  <li\r\n                    onClick={() => {\r\n                      history.push('/mypage')\r\n                    }}\r\n                  >\r\n                    My Page\r\n                  </li>\r\n                </ul>\r\n              </PageWrapper>\r\n            </MenuBox>\r\n          </QuizWrapper>\r\n        </>\r\n      )\r\n  }\r\n}\r\n\r\nconst SlideOff = keyframes`\r\n  from {\r\n    width: 20%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\nconst SlideOff1024 = keyframes`\r\n  from {\r\n    width: 30%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\nconst SlideOff768 = keyframes`\r\n  from {\r\n    width: 30%;\r\n  }\r\n  to {\r\n    width: 0%;\r\n  }\r\n`\r\n\r\nconst SlideOn = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 20%;\r\n  }\r\n`\r\nconst SlideOn1024 = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 30%;\r\n  }\r\n`\r\nconst SlideOn768 = keyframes`\r\n  from {\r\n    width: 0%;\r\n  }\r\n  to {\r\n    width: 30%;\r\n  }\r\n`\r\n\r\nconst QuizWrapper = styled.div`\r\n  width: 100%;\r\n  height: 4rem;\r\n  position: fixed;\r\n  z-index: 999999;\r\n`\r\nconst HamImg = styled.img`\r\n  display: block;\r\n  margin-left: 2rem;\r\n  margin-top: 1.5rem;\r\n  cursor: pointer;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n`\r\nconst ArrowImg = styled.img`\r\n  overflow: hidden;\r\n  display: block;\r\n  width: 3rem;\r\n  cursor: pointer;\r\n  position: fixed;\r\n`\r\n\r\nconst ArrowWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-right: 2rem;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  padding: 0 4rem;\r\n`\r\n\r\nconst LineWrapper = styled.div`\r\n  overflow: hidden;\r\n  padding: 0 4rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 0 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0 4rem;\r\n  }\r\n`\r\n\r\nconst ContentLine = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  border: 1px solid #fff;\r\n`\r\n\r\nconst UserInfo = styled.div`\r\n  display: block;\r\n`\r\n\r\nconst PageWrapper = styled.div`\r\n  padding: 0 4rem;\r\n  overflow: ellipsis;\r\n  display: flex;\r\n  white-space: nowrap;\r\n  justify-content: flex-start;\r\n  font-size: 1.4rem;\r\n  color: #fff;\r\n  width: 100%;\r\n  ul {\r\n    li {\r\n      cursor: pointer;\r\n      margin-bottom: 3rem;\r\n    }\r\n    li:hover {\r\n      margin-bottom: 3rem;\r\n      color: #60ffe2;\r\n    }\r\n  }\r\n`\r\n\r\nconst MenuBox = styled.div`\r\n  overflow: hidden;\r\n  height: 100vh;\r\n  flex: 1;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n\r\n  top: 0;\r\n  width: 0%;\r\n  ${props =>\r\n    props.clickCloseArrow &&\r\n    css`\r\n      width: 0%;\r\n      padding: 0;\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-name: ${SlideOff};\r\n      @media only screen and (max-width: 1024px) {\r\n        animation-name: ${SlideOff1024};\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        animation-name: ${SlideOff768};\r\n      }\r\n    `}\r\n  ${props =>\r\n    props.clickOpenArrow &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-name: ${SlideOn};\r\n      width: 20%;\r\n      @media only screen and (max-width: 1024px) {\r\n        width: 30%;\r\n        animation-name: ${SlideOn1024};\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        width: 30%;\r\n        animation-name: ${SlideOn768};\r\n      }\r\n    `}\r\n`\r\n\r\nexport default QuizHeader\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\BoldTextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\Button.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js",["439"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst CircleBorder = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background: linear-gradient( rgba(96,255,205,1) ,rgba(96,255,205,0.2) ,rgba(96,255,205,0.01) );\r\n  box-shadow:  5px 0px 20px -5px  rgba(96,255,205,0.5);\r\n  animation: spin .8s linear 0s infinite;\r\n\r\n  @media  (max-width:1024px) { \r\n    width: 30px;\r\n  height: 30px;\r\n  padding: 4px;\r\n    }\r\n    \r\n    @media (min-width: 1024px) {\r\n      width: 65px;\r\n     height: 65px;\r\n     padding: 7px;\r\n    }\r\n`;\r\n\r\n\r\nconst CircleCore =styled.div`\r\n width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(12,28,48,1);\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst SpinnerBox = styled.div`\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(359deg);\r\n  }\r\n  to{\r\n    transform: rotate(0);\r\n  }\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n`;\r\n\r\nconst LoadingComponent = ({}) => {\r\n    return(\r\n   \r\n        <SpinnerBox>\r\n        <CircleBorder>\r\n            <CircleCore></CircleCore>\r\n        </CircleBorder>\r\n    </SpinnerBox>\r\n\r\n    );\r\n\r\n};\r\nexport default LoadingComponent;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\LoginPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\ColorButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\Text.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\views\\RegisterPage\\UnderLineComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\user_action.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js",["440"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\nimport TestEnd from \"../../components/test_end/TestEnd\";\r\nimport { useHistory, matchPath } from \"react-router-dom\";\r\n\r\nconst TestEndContainer = ({ match }) => {\r\n  const history = useHistory();\r\n  const parentMatch = matchPath(history.location.pathname, {\r\n    path: \"/test/:id\",\r\n  });\r\n\r\n  const [recommend, setRecommend] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const [title, setTitle] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const url = \"http://3.35.187.65:3000\";\r\n\r\n  const getRecommendAPI = async () => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}${history.location.pathname}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET RECOMMENDATION\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET RECOMMENDATION\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getRecommendAPI();\r\n      try {\r\n        setRecommend({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setRecommend({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setRecommend({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const getTitleAPI = async (id) => {\r\n    // id 값 추가하기\r\n    const { data } = await axios.get(`${url}/test/${id}`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET TITLE\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET TITLE\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getTitleAPI(parentMatch.params.id);\r\n      try {\r\n        setTitle({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setTitle({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setTitle({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, [parentMatch.params.id]);\r\n\r\n  if (recommend.status === \"idle\" || title.status === \"idle\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"rejected\" || title.status === \"rejected\") {\r\n    return <>Error</>;\r\n  } else if (recommend.status === \"pending\" || title.status === \"pending\") {\r\n    return <StartLoading />;\r\n  } else if (recommend.status === \"resolved\" && title.status === \"resolved\") {\r\n    return <TestEnd recommendList={recommend.item.data} title={title.item} />;\r\n  }\r\n};\r\n\r\nexport default TestEndContainer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js",["441"],"import React from 'react'\r\nimport TestBackground from '../../components/test/TestBackground'\r\nimport Test from '../../components/test/TestBackground'\r\n\r\nfunction TestContainer({ children, match }) {\r\n  return (\r\n    <>\r\n      <TestBackground children={children} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestContainer\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js",["442","443","444"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testedit\\form\\TestEditFormContainer.js",["445","446","447","448"],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js",["449","450"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Background from \"../../components/main/Main\";\r\nimport axios from \"axios\";\r\nimport StartLoading from \"../../components/loading/StartLoading\";\r\n\r\nconst MainContainer = ({ match }) => {\r\n  const [category, setCategory] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const url = \"http://3.35.187.65:3000\";\r\n\r\n  // categoryList\r\n  const getCategoryAPI = async () => {\r\n    const { data } = await axios.get(`${url}/main/`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET CATEGORY\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET CATEGORY\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getCategoryAPI();\r\n      try {\r\n        setCategory({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setCategory({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setCategory({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // testList\r\n  const [test, setTest] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n  });\r\n\r\n  const getTestAPI = async () => {\r\n    const { data } = await axios.get(`${url}/main/`);\r\n    try {\r\n      console.log(\"[SUCCESS] GET TEST\", data);\r\n      return data;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET TEST\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await getTestAPI();\r\n      try {\r\n        setTest({\r\n          status: \"pending\",\r\n          item: null,\r\n        });\r\n        setTest({\r\n          status: \"resolved\",\r\n          item: data,\r\n        });\r\n      } catch (e) {\r\n        setTest({\r\n          status: \"rejected\",\r\n          item: null,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const [sort, setSort] = useState({\r\n    status: \"idle\",\r\n    item: null,\r\n    onClick: false,\r\n  });\r\n\r\n  const onClickDisplay = useCallback(\r\n    (id) => {\r\n      const sortId = id;\r\n      (async () => {\r\n        const finalData = { ...(await getSortAPI(sortId)) };\r\n        try {\r\n          setSort({\r\n            status: \"pending\",\r\n            item: null,\r\n            onClick: false,\r\n          });\r\n          setSort({\r\n            status: \"resolved\",\r\n            item: finalData,\r\n            onClick: true,\r\n          });\r\n        } catch (e) {\r\n          setSort({\r\n            status: \"rejected\",\r\n            item: null,\r\n            onClick: false,\r\n          });\r\n        }\r\n      })();\r\n    },\r\n    [sort]\r\n  );\r\n\r\n  // 클릭한 카테고리 id를 받아와서, 해당하는 테스트만 return하는 메소드\r\n  const getSortAPI = async (sortId) => {\r\n    const { data } = await axios.get(`${url}/main`);\r\n    let finalData = [];\r\n    data.data.tests.forEach((req) => {\r\n      if (req.Category.id === sortId) {\r\n        finalData.push(req);\r\n      }\r\n    });\r\n    if (sortId === 10) {\r\n      finalData = data.data.tests;\r\n    }\r\n    try {\r\n      console.log(\"[SUCCESS] GET SORT\", finalData, finalData.length);\r\n      return finalData;\r\n    } catch (e) {\r\n      console.log(\"[FAIL] GET SORT\");\r\n    }\r\n  };\r\n\r\n  // input 관련 state\r\n\r\n  switch (category.status) {\r\n    case \"idle\":\r\n      return <StartLoading />;\r\n    case \"rejected\":\r\n      return <>Error</>;\r\n    case \"pending\":\r\n      return <StartLoading />;\r\n    case \"resolved\":\r\n    default:\r\n      return (\r\n        <Background\r\n          categoryList={category.item.data.categories}\r\n          testList={!sort.onClick ? category.item.data.tests : sort.item}\r\n          allList={category.item.data.tests}\r\n          onClickDisplay={onClickDisplay}\r\n        />\r\n      );\r\n  }\r\n};\r\n\r\nexport default MainContainer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\_actions\\types.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\config.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js",["451"],"import { useEffect, useState } from 'react';\r\nimport InputCategory from '../../components/testmaking/Input/InputCategory';\r\n\r\n\r\n\r\n\r\n\r\nconst InputCategoryContainer = ({inputName,inputPlaceholder,testCategory,changeCategory}) => {\r\n\r\n    const [isCategoryVisible, setIsCategoryVisible] = useState(false);\r\n    const [chooseCategory, setChooseCategory] = useState()\r\n\r\n    const categoryVisibleHandler = () => {\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n    }\r\n\r\n    const chooseCategoryHandler = (e) => {\r\n        const categoryValue = e.target.childNodes[0].data;\r\n        setChooseCategory(categoryValue)\r\n        setIsCategoryVisible(!isCategoryVisible);\r\n        changeCategory(e.target.id)\r\n    }\r\n    useEffect(\r\n     ()=>{\r\n         if(testCategory===1){\r\n            setChooseCategory('여자 아이돌')\r\n         }else if(testCategory===2){\r\n            setChooseCategory('남자 아이돌')\r\n         }else if(testCategory===3){\r\n            setChooseCategory('연도별')\r\n         }else if(testCategory===4){\r\n            setChooseCategory('힙합')\r\n         }else if(testCategory===5){\r\n            setChooseCategory('핍')\r\n         }else if(testCategory===6){\r\n            setChooseCategory('게임')\r\n         }else if(testCategory===7){\r\n            setChooseCategory('영화/드라마')\r\n         }else if(testCategory===8){\r\n            setChooseCategory('애니메이션')\r\n         }else if(testCategory===9){\r\n            setChooseCategory('기타')\r\n         }\r\n     }\r\n    ,[])\r\n    return (\r\n        <InputCategory \r\n                isCategoryVisible={isCategoryVisible} \r\n                categoryVisibleHandler={categoryVisibleHandler}\r\n                inputName={inputName}\r\n                inputPlaceholder={inputPlaceholder}\r\n                chooseCategoryHandler={chooseCategoryHandler}\r\n                testCategory={testCategory}\r\n                changeCategory={changeCategory}\r\n                chooseCategory={chooseCategory}\r\n        />\r\n        )\r\n\r\n\r\n\r\n}\r\n\r\nexport default InputCategoryContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js",["452","453"],"import Background from \"../test_end/Bg\";\r\nimport Header from \"../test_end/Header\";\r\nimport BlankTop from \"../common/BlankTop\";\r\nimport LogoTitle from \"./LogoTitle\";\r\nimport TestTitle from \"./TestTitle\";\r\nimport ThankYouText from \"./ThankYouText\";\r\nimport Divider from \"../common/Divider\";\r\nimport TestEndDivider from \"../test_end/TestEndDivider\";\r\nimport RecommendText from \"./RecommendText\";\r\nimport RecommendCardList from \"./RecommendCardList\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TestEndBlankTop from \"../test_end/TestEndBlankTop\";\r\n\r\nconst TestEnd = ({ match, recommendList, title }) => {\r\n  return (\r\n    <Background>\r\n      <Header />\r\n      <TestEndBlankTop\r\n        DesktopMargin={7.5}\r\n        TabletMargin={16.4}\r\n        MobileMargin={4.7}\r\n        SmallMobileMargin={5.6}\r\n      />\r\n      <LogoTitle />\r\n      <TestEndBlankTop\r\n        DesktopMargin={3.1}\r\n        TabletMargin={2.8}\r\n        MobileMargin={2.5}\r\n        SmallMobileMargin={1}\r\n      />\r\n      <TestTitle title={title[\"data\"][0][\"testTitle\"]} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={1.2}\r\n        TabletMargin={1.2}\r\n        MobileMargin={1.0}\r\n      />\r\n      <ThankYouText />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.6}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.3}\r\n        SmallMobileMargin={2.7}\r\n      />\r\n      <TestEndDivider DesktopLength={6} TabletLength={6} MobileLength={0} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.5}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.5}\r\n        SmallMobileMargin={2.7}\r\n      />\r\n      <RecommendText />\r\n      <TestEndBlankTop\r\n        DesktopMargin={5.4}\r\n        TabletMargin={4.4}\r\n        MobileMargin={3.5}\r\n        SmallMobileMargin={1.9}\r\n      />\r\n      <RecommendCardList recommendList={recommendList} />\r\n      <TestEndBlankTop\r\n        DesktopMargin={2.8}\r\n        TabletMargin={3.7}\r\n        MobileMargin={3}\r\n        SmallMobileMargin={3}\r\n      />\r\n      <>\r\n        <Link to=\"/\">\r\n          <Wrap>\r\n            <BackBtn />\r\n          </Wrap>\r\n        </Link>\r\n      </>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1700ms 1;\r\n  animation-timing-function: ease-in;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 34.9rem;\r\n  height: 4.4rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 10px #60ffcd;\r\n  background: linear-gradient(90.66deg, #60ffcd -8.61%, #60f5ff 112.74%);\r\n\r\n  @keyframes fadeOut {\r\n    from {\r\n      opacity: 1;\r\n    }\r\n    to {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    animation: fadeOut 500ms;\r\n  }\r\n\r\n  &:after {\r\n    content: \"메인으로 돌아가기\";\r\n    font-size: 1.6rem;\r\n    font-weight: 700;\r\n    color: #1a465e;\r\n  }\r\n\r\n  @media (max-width: 1089px) {\r\n    width: 25.5rem;\r\n    height: 4.4rem;\r\n    box-shadow: 0 0 9px #60ffcd;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 20.6rem;\r\n    height: 3.8rem;\r\n    box-shadow: 0 0 9px #60ffcd;\r\n\r\n    &:after {\r\n      content: \"메인으로\";\r\n      font-size: 1.4rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TestEnd;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js",["454","455"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport recordImg from '../../../assets/images/test/graphic_black_cd.jpg'\r\nimport cdImg from '../../../assets/images/test/blackcd_house-1.jpg'\r\nimport defaultCdImg from '../../../assets/images/test/blackcd_house.jpg'\r\nimport BlankTop from '../../common/BlankTop'\r\nimport logo from '../../../assets/images/test/image_watermark-1.jpg'\r\nimport TextComponent from '../../common/test/TextComponent'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ProgressBar from '../testcd/ProgressBar'\r\nimport ModalPage from '../../../pages/modal/ModalPage'\r\nimport QuizHeader from '../../common/QuizHeader'\r\n\r\nconst TestCd = ({ newList, match }) => {\r\n  //state정의\r\n  const [hintText, setHintText] = useState('힌트 보기')\r\n  const [buttonText, setButtonText] = useState('정답 보기') //클릭한 버튼명(버튼명으로 현재 상태비교)\r\n  const [rotateSecond, setRotateSecond] = useState(0) //1초재생인지 3초재생인지 상태값(0일때는 애니메이션 없음)\r\n  const [recordInside, isRecordInside] = useState(false) //레코드판을 넣는 애니메이션 트리거\r\n  const [activeIndex, setActiveIndex] = useState(0) //현재 선택된 레코드판 index넘버\r\n  const [answer, setAnswer] = useState() //정답 text state\r\n  const [sound1Url, setSound1Url] = useState()\r\n  const [sound3Url, setSound3Url] = useState()\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [isHint, setIsHint] = useState(false)\r\n  const [modalIn, setModalIn] = useState(false)\r\n  const [modalOut, setModalOut] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    isRecordInside(false)\r\n    setButtonText('정답 보기')\r\n    setAnswer(undefined)\r\n    setSound1Url(newList[activeIndex].sound1URL)\r\n    setSound3Url(newList[activeIndex].sound3URL)\r\n  }, [activeIndex])\r\n\r\n  const openModal = () => {\r\n    setModalVisible(true)\r\n    setModalOut(false)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModalOut(true)\r\n    setModalVisible(false)\r\n  }\r\n\r\n  //다음문제 버튼 이벤트 정의\r\n  const handleHintButton = () => {\r\n    if (hintText === '힌트 보기') {\r\n      setIsHint(true)\r\n      setTimeout(() => {\r\n        setHintText(`${newList[activeIndex].hint}`)\r\n      }, 500)\r\n    } else if (hintText === '관련 영상 보기') {\r\n      setModalIn(true)\r\n      openModal()\r\n    }\r\n  }\r\n\r\n  const handleNextButton = () => {\r\n    //버튼 텍스트가 '정답보기' 일때 버튼명을 '다음문제'로 변경 후 레코드 집어넣는 트리거를true로 바꿔줌 //\r\n    if (buttonText === '정답 보기') {\r\n      isRecordInside(true)\r\n      setHintText('관련 영상 보기')\r\n\r\n      if (activeIndex + 1 < newList.length) {\r\n        setButtonText('다음 문제')\r\n        setAnswer(newList[activeIndex].answer)\r\n        setIsHint(false)\r\n      } else {\r\n        setAnswer(newList[activeIndex].answer)\r\n        setButtonText('테스트 완료')\r\n      }\r\n    } else if (buttonText === '다음 문제') {\r\n      //버튼 텍스트가 '다음문제'일때 선택된 레코드를 1증가하여 다음 레코드를 불러옴\r\n      setHintText('힌트 보기')\r\n      if (activeIndex + 1 < newList.length) {\r\n        setActiveIndex(activeIndex + 1)\r\n      }\r\n    } else if (buttonText === '테스트 완료') {\r\n      history.push(`/test/${match.params.id}/recommendation`)\r\n      console.log(history)\r\n    }\r\n  }\r\n\r\n  //레코드판 돌아가는 애니메이션 핸들러\r\n  const handleRotateAnimation = second => {\r\n    //레코드판 재생시간이 0초일때만 에니메이션 실행을 하여 마구 연타하였을때 애니메이션 꼬이는것을 방지\r\n    console.log(rotateSecond)\r\n    if (rotateSecond === 0) {\r\n      setRotateSecond(second)\r\n      //이곳에 사운드 재생\r\n      if (second === 1) {\r\n        // 1초 사운드\r\n        var audio = new Audio(sound1Url)\r\n        audio.play()\r\n        // setRotateSecond(0)\r\n      } else {\r\n        // 3초 사운드\r\n        var audio = new Audio(sound3Url)\r\n        audio.play()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table></table>\r\n      {modalVisible && (\r\n        <ModalPage\r\n          modalIn={modalIn}\r\n          modalOut={modalOut}\r\n          urlId={newList[activeIndex].answerYoutubeURL}\r\n          visible={modalVisible}\r\n          maskClosable={true}\r\n          closeModal={closeModal}\r\n        />\r\n      )}\r\n      <QuizHeader />\r\n      <BlankTop DesktopMargin=\"15\" TabletMargin=\"32\" MobileMargin=\"21\" />\r\n      <IconWrapper>\r\n        <MyIcon />\r\n      </IconWrapper>\r\n      <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\r\n      <TitleWrapper>\r\n        <TextComponent\r\n          title={newList[activeIndex].testTitle}\r\n          DesktopLength=\"2\"\r\n          TabletLength=\"2\"\r\n          MobileLength=\"1.8\"\r\n        />\r\n      </TitleWrapper>\r\n      <BlankTop DesktopMargin=\"4.2\" TabletMargin=\"5\" MobileMargin=\"9\" />\r\n      <Container>\r\n        <ContentContainer>\r\n          <ProgressBar percentual={(100 / newList.length) * activeIndex} />\r\n          {newList.map((item, index) => {\r\n            return (\r\n              <SwiperContainer\r\n                key={index}\r\n                activeIndex={activeIndex}\r\n                thisIndex={index}\r\n              >\r\n                <CaseImg\r\n                  src={activeIndex === index ? cdImg : defaultCdImg}\r\n                  // src={cdImg}\r\n                />\r\n                {index === activeIndex && (\r\n                  <>\r\n                    <AnswerText inside={recordInside}>\r\n                      {answer ?? '정답은?'}\r\n                    </AnswerText>\r\n\r\n                    <RecordWrapper inside={recordInside}>\r\n                      <RecordImg\r\n                        src={recordImg}\r\n                        rotateSecond={rotateSecond}\r\n                        onAnimationEnd={() => setRotateSecond(0)}\r\n                        // 해당요소의 애니메이션이 종료됐을때 레코드판 돌리는 재생시간을 다시 0초로 초기화\r\n                        // inside={recordInside}\r\n                        //레코드가 들어가는 애니메이션을위한 트리거 변수\r\n                      />\r\n                    </RecordWrapper>\r\n                  </>\r\n                )}\r\n              </SwiperContainer>\r\n            )\r\n          })}\r\n        </ContentContainer>\r\n      </Container>\r\n      <BlankTop DesktopMargin=\"1\" TabletMargin=\"5\" MobileMargin=\"10\" />\r\n\r\n      <ButtonContainer>\r\n        <RowContainer>\r\n          <ListenButtonWrapper>\r\n            <ListenButtonStyle onClick={() => handleRotateAnimation(1)}>\r\n              1초 듣기\r\n            </ListenButtonStyle>\r\n            <ListenButtonDisinguish>/</ListenButtonDisinguish>\r\n            <ListenButtonStyle onClick={() => handleRotateAnimation(3)}>\r\n              3초 듣기\r\n            </ListenButtonStyle>\r\n          </ListenButtonWrapper>\r\n        </RowContainer>\r\n        <BlankTop DesktopMargin=\"3\" TabletMargin=\"1\" MobileMargin=\"3\" />\r\n\r\n        <BigButtonWrapper>\r\n          <HintButtonStyle onClick={handleHintButton} hint={isHint}>\r\n            {hintText}\r\n          </HintButtonStyle>\r\n          <AnswerButtonStyle onClick={handleNextButton}>\r\n            {buttonText}\r\n          </AnswerButtonStyle>\r\n        </BigButtonWrapper>\r\n      </ButtonContainer>\r\n    </>\r\n  )\r\n}\r\n\r\n/**키프레임 시작 */\r\n\r\n\r\nconst RecordWrapper = styled.div`\r\n  z-index: 1;\r\n  margin-left: -26%;\r\n  animation-fill-mode: forwards;\r\n  @media only screen and (max-width: 1024px) {\r\n    margin-left: -26%;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    /* width: 18.5rem; */\r\n  }\r\n  ${props =>\r\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${RecordInside};\r\n    `}\r\n`\r\n\r\n\r\nconst HintFade = keyframes`\r\n  0% { \r\n   opacity: 1;\r\n  }\r\n  50% {\r\n   width: 0;\r\n   opacity: 0;\r\n  }\r\n  100% {\r\n  opacity: 1;\r\n  }\r\n\r\n`\r\n\r\n//1초 레코드판 돌리는 키프레임\r\nconst Rotate1Record = keyframes`\r\n  0% {\r\n    transform: rotate( 0deg )\r\n  }\r\n  100% {\r\n    transform: rotate( 360deg )\r\n  }\r\n`\r\n//3초 레코드판 돌리는 키프레임\r\nconst Rotate3Record = keyframes`\r\n  0% {\r\n    transform: rotate( 0deg )\r\n  }\r\n  100% {\r\n    transform: rotate( 1080deg )\r\n  }\r\n`\r\n//레코드판을 집어넣는 키프레임\r\nconst RecordInside = keyframes`\r\n  0% {\r\n    margin-left: -25%\r\n  }\r\n  100% {\r\n    margin-left: -50%\r\n  }\r\n  `\r\n\r\nconst TextInside = keyframes`\r\n0% {\r\n  margin-left: -35%\r\n}\r\n100% {\r\n  \r\n  margin-left: 0%;\r\n}\r\n`\r\n\r\n//신규 레코드판이 선택될때 나오는 애니메이션 키프레임\r\nconst ActiveAnimation = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(50%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\nconst ActiveAnimation1024 = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(40%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\nconst ActiveAnimation768 = keyframes`\r\n0% {\r\n    opacity: .5;\r\n    transform: translateX(50%) scale(.6);\r\n \r\n}\r\n100% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n`\r\n\r\n//레코드판이 왼쪽으로 들어갈때 나오는 애니메이션 키프레임\r\nconst UnActiveAnimation = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-65%) scale(0.6);\r\n}\r\n`\r\n\r\nconst UnActiveAnimation1024 = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-68%) scale(0.7);\r\n}\r\n`\r\n\r\nconst UnActiveAnimation768 = keyframes`\r\n0% {\r\n    transform: translateX(0%) scale(1);\r\n    opacity: 1;\r\n}\r\n100% {\r\n    opacity: .5; \r\n    transform: translateX(-130%) scale(1);\r\n}\r\n`\r\n/* 키프레임 종료 */\r\n\r\n/* Start Logo */\r\nconst IconWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst MyIcon = styled.img`\r\n  width: 19rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 19rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 18.5rem;\r\n  }\r\n`\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo,\r\n}\r\n/* End Logo */\r\n\r\n/* Start Title  */\r\nconst TitleWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n`\r\n/* End Title */\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  position: relative;\r\n  display: flex;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 41rem;\r\n  padding-right: 11rem;\r\n  // 1920 기준\u001b\r\n  @media only screen and (max-width: 1024px) {\r\n    height: 38rem;\r\n    padding-right: 8rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    height: 26rem;\r\n    padding-left: 5rem;\r\n  }\r\n`\r\nconst AnswerText = styled.p`\r\n  font-size: 1.4rem;\r\n  font-weight: bold;\r\n  color: #030f2c;\r\n  position: absolute;\r\n  z-index: 10;\r\n  padding-left: 40px;\r\n  object-fit: contain;\r\n  margin-left: -35%;\r\n  animation-fill-mode: forwards;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1.3rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.1rem;\r\n  }\r\n  ${props =>\r\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.5s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${TextInside};\r\n    `}\r\n`\r\n\r\nconst SwiperContainer = styled.div`\r\n  & > img {\r\n    height: 100%;\r\n  }\r\n  margin-right: 10rem;\r\n  display: flex;\r\n  height: 100%;\r\n  position: absolute;\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation-fill-mode: forwards;\r\n  ${({ activeIndex, thisIndex }) => {\r\n    // 선택된 index와 각요소의 index를 비교해서 애니메이션과 위치를 처리해줌\r\n    const compare = Math.abs(activeIndex - thisIndex) //index비교 절대값\r\n    if (activeIndex === thisIndex) {\r\n      //선택된index와 현재요소의 값이 같다면(즉 active상태의 요소일때) 오른쪽에서 가운데로 나오는 애니메이션을 넣어줌\r\n      return css`\r\n        animation-timing-function: ease-in-out;\r\n        animation-duration: 0.5s;\r\n        animation-iteration-count: 1;\r\n        animation-name: ${ActiveAnimation};\r\n        @media only screen and (max-width: 1024px) {\r\n          animation-name: ${ActiveAnimation1024};\r\n        }\r\n        @media only screen and (max-width: 768px) {\r\n          animation-name: ${ActiveAnimation768};\r\n        }\r\n        z-index: 10;\r\n      `\r\n    } else if (activeIndex > thisIndex) {\r\n      //선택된index가 현재요소의 값보다 크다면(즉 active상태의 요소보다 왼쪽에 있을때)\r\n      if (compare === 1) {\r\n        //비교값이 1일때(즉 현재 active상태였다가 왼쪽으로 들어가야 하는 상태) 왼쪽으로 슬라이드되는 애니메이션을 넣어줌\r\n        return css`\r\n          animation-timing-function: ease-in-out;\r\n          animation-duration: 0.5s;\r\n          animation-iteration-count: 1;\r\n          animation-name: ${UnActiveAnimation};\r\n          @media only screen and (max-width: 1024px) {\r\n            animation-name: ${UnActiveAnimation1024};\r\n          }\r\n          @media only screen and (max-width: 768px) {\r\n            animation-name: ${UnActiveAnimation768};\r\n          }\r\n        `\r\n      }\r\n      //그이외 그냥 위치만 잡아줌\r\n      return css`\r\n        opacity: 0.5;\r\n        transform: translateX(-65%) scale(0.6);\r\n        @media only screen and (max-width: 1024px) {\r\n          transform: translateX(-68%) scale(0.7);\r\n        }\r\n        @media only screen and (max-width: 768px) {\r\n          transform: translateX(-130%) scale(1);\r\n        }\r\n      `\r\n    } else if (activeIndex < thisIndex) {\r\n      //선택된index가 현재요소의 값보다 작다면(즉 active상태의 요소보다 오른쪽에 있을때)위치만 잡아줌\r\n      return `\r\n      opacity: .5;\r\n      width: 40rem;\r\n      overflow: hidden;        \r\n      transform: translateX(101%) scale(0.6);\r\n      @media only screen and (max-width: 1024px) {\r\n        transform: translateX(89%) scale(0.68);\r\n      }\r\n      @media only screen and (max-width: 768px) {\r\n        transform: translateX(100%) scale(0.7);\r\n      }\r\n    `\r\n    }\r\n  }}\r\n`\r\n\r\nconst RecordImg = styled.img`\r\n  object-fit: contain;\r\n  animation-fill-mode: forwards;\r\n\r\n  ${props =>\r\n    props.rotateSecond > 0 && //레코드판을 돌리는 css애니메이션 추가 0초 초과일때만 작동하도록 한다.\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: ${props.rotateSecond}s;\r\n      animation-iteration-count: 1;\r\n      animation-name: ${props.rotateSecond === 1\r\n        ? Rotate1Record\r\n        : Rotate3Record}; //1초일때 3초일때 분기해서 키프레임을 넣어줌\r\n    `}\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 40rem;\r\n    /* margin-left: -25%; */\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 26rem;\r\n    /* width: 18.5rem; */\r\n  }\r\n`\r\n\r\nconst CaseImg = styled.img`\r\n  overflow: hidden;\r\n  position: relative;\r\n  object-fit: contain;\r\n  z-index: 2;\r\n  margin-left: 30%;\r\n  @media only screen and (max-width: 1024px) {\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n  }\r\n`\r\n\r\n/* Start button */\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\nconst RowContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex: 1;\r\n`\r\n\r\nconst ListenButtonWrapper = styled.div`\r\n  width: 100%;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ListenButtonDisinguish = styled.span`\r\n  color: #fff;\r\n  font-weight: 300;\r\n  font-size: 4rem;\r\n  text-align: center;\r\n  padding: 0 6rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 3.2rem;\r\n    padding: 0 6rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 3rem;\r\n    padding: 0 6rem;\r\n  }\r\n`\r\n\r\nconst ListenButtonStyle = styled.button`\r\n  color: #ffffff;\r\n  font-size: 1.8rem;\r\n  font-family: 'Nanum Gothic';\r\n  font-weight: 100;\r\n  border: none;\r\n  outline: none;\r\n  background: none;\r\n  padding: 0px;\r\n  font-size: 1.5rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    font-size: 1.3rem;\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 1.2rem;\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #60ffc6;\r\n  }\r\n`\r\n\r\nconst BigButtonWrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst HintButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n  color: #fff;\r\n  border: 1px solid #ffffff;\r\n  outline: none;\r\n  background: none;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  margin-bottom: 2rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n    margin-bottom: 1.5rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  &:hover {\r\n    color: #49fff2;\r\n    transition: color 0.1s ease-in-out;\r\n  }\r\n  ${props =>\r\n    props.hint &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 0.6s;\r\n      animation-name: ${HintFade};\r\n    `}\r\n`\r\n\r\nconst AnswerButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  color: #030f2c;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0px 0px 21px -6px #49fff2;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n  }\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(73, 255, 242, 1) 0%,\r\n    rgba(73, 255, 233, 1) 35%,\r\n    rgba(56, 245, 238, 1) 66%,\r\n    rgba(0, 212, 255, 1) 100%\r\n  );\r\n  &:hover {\r\n    transition: box-shadow 0.5s ease-in-out;\r\n    box-shadow: 0px 0px 40px -6px #49fff2;\r\n  }\r\n`\r\n/* End button */\r\nexport default TestCd","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\StartTimeContainer.js",["456","457"],"import { useEffect, useState } from \"react\";\r\nimport StartTime from \"../../../components/testmaking/questionlist/player/StartTime\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst StartTimeContainer = ({questionStartsfrom,changeStartTime,totalTime}) => {\r\n\r\n    const [minutes,setMinutes] = useState(0);\r\n    const [seconds,setSeconds] = useState(0);\r\n    const onChangeMinutes = e => {\r\n        const minute = e.target.value;\r\n        if(!minute){\r\n            setMinutes(0);\r\n        }else{\r\n            setMinutes(minute);\r\n        }\r\n    }\r\n\r\n    const onChangeSeconds = e => {\r\n        const second = e.target.value;\r\n\r\n        if(!second){\r\n            setSeconds(0);\r\n\r\n        }else{\r\n            if(second >= 60){\r\n                if(totalTime> parseInt(minutes*60) + parseInt(second)){\r\n                    setMinutes(minutes+1);\r\n                    setSeconds(second%60);\r\n                }else{\r\n                    setSeconds(second%60);\r\n                }\r\n\r\n            }else{\r\n                setSeconds(second);\r\n            }\r\n        }\r\n    }\r\n    const maxLengthCheck = (object) => {\r\n        if (object.target.value.length > object.target.maxLength) {\r\n         object.target.value = object.target.value.slice(0, object.target.maxLength)\r\n          }\r\n        }\r\n    \r\n    useEffect(()=>{\r\n        if (questionStartsfrom){\r\n            setMinutes( parseInt(questionStartsfrom/60));\r\n            setSeconds( parseInt(questionStartsfrom%60));\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n\r\n        const inputTime =  parseInt(minutes*60) + parseInt(seconds);\r\n        if(parseInt(totalTime-4) >= inputTime){\r\n            changeStartTime(inputTime);\r\n        }else if(totalTime===170){\r\n            changeStartTime(inputTime);\r\n        }else{\r\n            setMinutes(String(minutes).slice(0,1))\r\n        }\r\n    },[minutes,seconds])\r\n\r\n    return <StartTime questionStartsfrom={questionStartsfrom} maxLengthCheck={maxLengthCheck} onChangeMinutes={onChangeMinutes} onChangeSeconds={onChangeSeconds}/>\r\n}\r\n\r\nexport default StartTimeContainer;","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js",["458"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Wave from '../../../components/testmaking/questionlist/player/Wave';\r\n\r\n\r\nconst PlayerContainer = ({questionUrl,i,isLoading,isPlaying,player,totalTime,currentTime,playHandler,backClick}) => {\r\n  const [mouseDragX, setMouseDragX] = useState(false);\r\n  const [activeButton, setactiveButton] = useState(false);\r\n  const [containerWidth,setContainerWidth] = useState(307);\r\n\r\n\r\n  const dragHandler = (e) => {\r\n    const nowFraction = e.offsetX / containerWidth;\r\n    player.seekTo(player.getDuration() * nowFraction, true);\r\n  };\r\n\r\n  const drag = () => {\r\n    document.addEventListener(\"mousemove\", dragHandler);\r\n    document.addEventListener(\"mouseup\", () => {\r\n      document.removeEventListener(\"mousemove\", dragHandler);\r\n      setMouseDragX(false);\r\n    });\r\n  };\r\n\r\n\r\n  const clickActiveButtonOver = () => {\r\n     setactiveButton(true)\r\n  }\r\n  const clickActiveButtonOut = () => {\r\n    setactiveButton(false)\r\n}\r\n  useEffect(() => {\r\n        const a = document.getElementsByTagName('iframe')[i];\r\n        a.src = `https://www.youtube.com/embed/${questionUrl}?autoplay=0&controls=0&fs=0&enablejsapi=1&origin=http%3A%2F%2Flocalhost%3A3000&widgetid=1`;\r\n  },[questionUrl,i]);\r\n\r\n\r\n  return (\r\n    <TotalWrap>\r\n\r\n    <ControlsWrap>\r\n      <ButtonCover>\r\n          <Button onClick={playHandler} >\r\n          {isLoading ? (\r\n              isPlaying ? (\r\n              <i className=\"xi-pause\" />\r\n              ) : (\r\n              <i className=\"xi-play\" />\r\n              )\r\n          ) : (\r\n              <i className=\"xi-spinner-3 xi-spin\" />\r\n          )}\r\n          </Button>\r\n      </ButtonCover>\r\n      <BackButtonCover>\r\n          <MoveButton onClick={backClick}>\r\n          {isLoading ? (              \r\n              <i className=\"xi-step-backward\" />\r\n          ) : (\r\n              <i className=\"xi-spinner-3 xi-spin\" />\r\n          )}\r\n          </MoveButton>\r\n      </BackButtonCover>\r\n\r\n\r\n      <TimeWrap>\r\n      {player ? `${currentTime}` : \"00:00\"}\r\n      </TimeWrap>\r\n      <WaveCenter>\r\n          <WaveWrap>\r\n          <Wave FillColor={player ? String(player?.getCurrentTime() / player?.getDuration()* 10 )  : '0'}/>\r\n                  <div style={{position:'absolute'}}>\r\n                          <LoadBar style={ {\r\n                              width: mouseDragX\r\n                              ? mouseDragX\r\n                              : player ? String(\r\n                                  (player?.getCurrentTime() / player?.getDuration()) * containerWidth\r\n                                  ) + \"px\" : '0px',\r\n\r\n                              border:\r\n                              activeButton || mouseDragX\r\n                                  ? \"0px solid #db021f\"\r\n                                  : \"0px solid #db021f\",\r\n                          }} >\r\n                              <DragButton\r\n                              style={{ opacity: isLoading ? activeButton || mouseDragX ? \"1\" : \"1\" :\"0\" }}\r\n                              onMouseOver={clickActiveButtonOver}\r\n                              onMouseOut={clickActiveButtonOut}\r\n                              onMouseDown={drag}\r\n                              isLoading = {isLoading}\r\n                              />\r\n                          </LoadBar>\r\n                  </div>\r\n\r\n          </WaveWrap>\r\n      </WaveCenter>\r\n      \r\n    </ControlsWrap>\r\n  </TotalWrap>\r\n  );\r\n};\r\nexport default PlayerContainer;\r\n\r\n\r\nconst ButtonCover = styled.div`\r\n  width:2rem;\r\n  height:2rem;\r\n  cursor: pointer;\r\n  border: 1px solid #fff;\r\n  border-radius:50%;\r\n  margin-left:1.9rem;\r\n  margin-right:1rem;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n      margin-left:0rem;\r\n      margin-right:1.4rem;\r\n      width:2.6rem;\r\n      height:2.6rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n      margin-left:0.8rem;\r\n      margin-right:0.9rem;\r\n      width:2.2rem;\r\n      height:2.2rem;\r\n  }\r\n`\r\n\r\nconst BackButtonCover = styled.div`\r\n  width:2rem;\r\n  height:2rem;\r\n  cursor: pointer;\r\n  border: 1px solid #fff;\r\n  border-radius:50%;\r\n  margin-right:0.2rem;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  @media only screen and (max-width: 1024px) {\r\n        margin-left:0;\r\n        margin-right:2.2rem;\r\n        width:2.6rem;\r\n        height:2.6rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n      margin-right:0rem;\r\n      width:2.2rem;\r\n      height:2.2rem;\r\n\r\n  }\r\n\r\n`\r\n\r\nconst Button = styled.div`\r\n\r\n  all: unset;\r\n  font-size: 1.6rem;\r\n  color: #ffffff;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n`;\r\n\r\nconst MoveButton = styled.div`\r\n\r\n   all: unset;\r\n   font-size: 1.6rem;\r\n  color: #ffffff;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n`;\r\n\r\nconst ControlsWrap = styled.div`\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n  color: #909090;\r\n  font-size: 12px;\r\n\r\n`;\r\n\r\nconst LoadBar = styled.div`\r\n  position: relative;\r\n  z-index: 100;\r\n  height: 1px;\r\n  top: 1px;\r\n`\r\n\r\nconst DragButton = styled.div`\r\n  position: absolute;\r\n  transform: translate(70%, -50%);\r\n  right: 0px;\r\n  top: 0px;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color:${props=> props.isLoading ? \"#60FFDA\" :\"\"} ;\r\n  border-radius: 50%;\r\n  transition: all 0.1s ease-in;\r\n  border: 1px solid white;\r\n`;\r\n\r\nconst TimeWrap = styled.div`\r\n    width: 5rem;\r\n    height: 2rem;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    font-size:1.4rem;\r\n    margin-top:0.3rem;\r\n    @media only screen and (max-width: 1024px) {\r\n        margin-right:1.8rem;\r\n  }\r\n    @media only screen and (max-width: 768px) {\r\n        width: 4.5rem;\r\n        font-size:1.2rem;\r\n        margin-top:0.4rem;\r\n        margin-right:0.4rem;\r\n\r\n\r\n\r\n  }\r\n`\r\n\r\nconst WaveWrap = styled.div`\r\n    width:31.4rem;\r\n    height:3.6rem;\r\n    display:flex;\r\n    align-items:center;\r\n    position:relative;\r\n    @media only screen and (max-width: 560px) {\r\n        width:0rem;\r\n        display:none;\r\n    }\r\n`\r\n\r\nconst WaveCenter = styled.div`\r\n    @media only screen and (max-width: 1024px) {\r\n        width:31.4rem;\r\n        height:3.6rem;\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center  \r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        width:31.4rem;\r\n        height:3.6rem;\r\n    }\r\n    @media only screen and (max-width: 560px) {\r\n        width:0rem;\r\n        display:none;\r\n    }\r\n\r\n`\r\n\r\nconst TotalWrap = styled.div`\r\n  height: 28px;\r\n  display: flex;\r\n  align-items: center;\r\n    @media only screen and (max-width: 768px) {\r\n        justify-content:center;\r\n\r\n\r\n\r\n  }\r\n`;\r\n\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Main.js",["459","460"],"import Background from \"../../components/main/Bg\";\r\nimport Header from \"../../components/main/header/Header\";\r\nimport Banner from \"../main/banner/Banner\";\r\nimport Category from \"../main/category/Category\";\r\nimport CardList from \"../main/test_card/TestCard\";\r\nimport Footer from \"../main/footer/Footer\";\r\nimport BlankTop from \"../common/BlankTop\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchIconImg from \"../../assets/ic_search.png\";\r\nimport SearchIconMobileImg from \"../../assets/small_mobile/ic_search.png\";\r\nimport MainBlankTop from \"../main/MainBlankTop\";\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 52.4rem;\r\n  position: relative;\r\n  margin: 0 auto 1.3rem;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1500ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 46.5rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 33.8rem;\r\n    margin-bottom: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled.div`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: absolute;\r\n  left: -1.2rem;\r\n  background-image: url(${SearchIconImg});\r\n  background-repeat: no-repeat;\r\n  background-position: center top;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1500ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 768px) {\r\n    left: -5.6rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    left: 3.5rem;\r\n    background-image: url(${SearchIconMobileImg});\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 52.4rem;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  line-height: 1.035;\r\n  border-style: none;\r\n  color: #dadada;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    color: #dadada;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 46.5rem;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 33.9rem;\r\n    font-size: 1.4rem;\r\n    line-height: 1;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 20.4rem;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst SearchBorder = styled.hr`\r\n  display: block;\r\n  width: 88.6rem;\r\n  height: 0.2rem;\r\n  margin: 0 auto;\r\n  border: none;\r\n  color: #000;\r\n  background: #fff;\r\n  background: radial-gradient(\r\n    80.42% 65929741.39% at 50% 74.84%,\r\n    rgba(255, 255, 255, 0.85) 0%,\r\n    rgba(255, 255, 255, 0) 57.29%\r\n  );\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1300ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 72.4rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 54.9rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 35.8rem;\r\n  }\r\n`;\r\n\r\n// testList는 내가 선택한 카테고리에 따라 오게됨.\r\nconst Main = ({ categoryList, testList, onClickDisplay, allList }) => {\r\n  const first = Object.values(allList);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [result, setResult] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 제목, 내용에 해당되는 거\r\n    const title = first.filter((item) => {\r\n      // console.log(item.title.toLowerCase());\r\n      return (\r\n        item.title.toLowerCase().includes(search) ||\r\n        item.description.toLowerCase().includes(search)\r\n      );\r\n    });\r\n    setResult(title);\r\n  }, [search]);\r\n\r\n  return (\r\n    <Background>\r\n      <Header />\r\n      <MainBlankTop\r\n        DesktopMargin={20.2}\r\n        TabletMargin={14.198}\r\n        MobileMargin={14.5}\r\n        SmallMobileMargin={5.5}\r\n      />\r\n      <Banner />\r\n      <MainBlankTop\r\n        DesktopMargin={8}\r\n        TabletMargin={5.5}\r\n        MobileMargin={7.4}\r\n        SmallMobileMargin={3.3}\r\n      />\r\n      <>\r\n        <Wrap>\r\n          <SearchIcon />\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"사용자들이 만들어놓은 다양한 테스트들을 검색해보세요!\"\r\n            value={search}\r\n            onChange={handleChange}\r\n          />\r\n        </Wrap>\r\n        <SearchBorder />\r\n      </>\r\n      <MainBlankTop\r\n        DesktopMargin={9.7}\r\n        TabletMargin={7.3}\r\n        MobileMargin={7.3}\r\n        SmallMobileMargin={4.3}\r\n      />\r\n      <Category categoryList={categoryList} onClickDisplay={onClickDisplay} />\r\n      <CardList testList={testList} testList2={result} />\r\n      <Footer />\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndBlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestEndDivider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\Divider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js",["461"],"import React, { useEffect, useState } from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport ModalContent from '../../components/modal/ModalContent.js'\r\nimport ModalInner from '../../components/modal/ModalInner'\r\nimport ModalOverlay from '../../components/modal/ModalOverlay'\r\nimport ModalWrapperContainer from '../../containers/modal/ModalWrapperContainer.js'\r\n\r\nfunction ModalPage({\r\n  visible,\r\n  closeModal,\r\n  maskClosable,\r\n  urlId,\r\n  modalIn,\r\n  modalOut,\r\n}) {\r\n  const [data, setData] = useState('')\r\n  useEffect(() => {\r\n    setData(urlId)\r\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`\r\n    return () => {\r\n      const scrollY = document.body.style.top\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`\r\n      window.scrollTo(0, parseInt(scrollY || '0') * -1)\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <ModalOverlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\r\n\r\n      <ModalWrapperContainer\r\n        closeModal={closeModal}\r\n        maskClosable={maskClosable}\r\n        visible={visible}\r\n      >\r\n        <ModalInner modalIn={modalIn}>\r\n          <ModalContent data={data} />\r\n        </ModalInner>\r\n\r\n        <AnswerButtonStyle\r\n          modalOut={modalOut}\r\n          modalIn={modalIn}\r\n          onClick={e => {\r\n            closeModal(e)\r\n          }}\r\n        >\r\n          돌아가기\r\n        </AnswerButtonStyle>\r\n      </ModalWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst FadeIn = keyframes`{\r\n    0% { \r\n     opacity: 0;\r\n    }\r\n    100% {\r\n    opacity: 1;\r\n    }\r\n  `\r\n\r\nconst FadeOut = keyframes`{\r\n    0% { \r\n     opacity: 1;\r\n    }\r\n    100% {\r\n    opacity: 0;\r\n    }\r\n  `\r\n\r\nconst AnswerButtonStyle = styled.button`\r\n  cursor: pointer;\r\n  color: #030f2c;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: 0px 0px 21px -6px #49fff2;\r\n  padding: 0px;\r\n  width: 44rem;\r\n  height: 5rem;\r\n  /* position: fixed; */\r\n  display: block;\r\n  margin: 0 auto;\r\n  /* margin-bottom: 10rem; */\r\n\r\n  z-index: 1000;\r\n  overflow: auto;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    width: 35rem;\r\n    height: 4rem;\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    width: 32rem;\r\n    height: 4rem;\r\n  }\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(73, 255, 242, 1) 0%,\r\n    rgba(73, 255, 233, 1) 35%,\r\n    rgba(56, 245, 238, 1) 66%,\r\n    rgba(0, 212, 255, 1) 100%\r\n  );\r\n  &:hover {\r\n    transition: box-shadow 0.5s ease-in-out;\r\n    box-shadow: 0px 0px 40px -6px #49fff2;\r\n  }\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n\r\n  ${props =>\r\n    props.modalOut &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeOut};\r\n    `}\r\n`\r\n\r\nexport default ModalPage\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainBlankTop.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js",["462","463","464","465"],"// 카드 크기 때문에 breakpoint - 1440(추가), 768 -> 828로 변경\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled, { css } from \"styled-components\";\r\nimport PlusDesktop from \"../../../assets/desktop/button_add.png\";\r\nimport PlusTablet from \"../../../assets/tablet/button_add.png\";\r\nimport PlusMobile from \"../../../assets/mobile/button_add.png\";\r\nimport PlusSmallMobile from \"../../../assets/small_mobile/button_add.png\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport PlayImg from \"../../../assets/play.png\";\r\nimport MainBlankTop from \"../MainBlankTop\";\r\n\r\nconst PlusBtn = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  height: 5.6rem;\r\n  position: relative;\r\n  background-image: url(${PlusDesktop});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-radius: 8px;\r\n  border: 3px solid rgba(96, 255, 218, 0.88);\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 4.8rem;\r\n    background-image: url(${PlusTablet});\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    height: 5.5rem;\r\n    background-image: url(${PlusMobile});\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 14.6rem;\r\n    height: 2.8rem;\r\n    border-width: 2px;\r\n    background-image: url(${PlusSmallMobile});\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  position: relative;\r\n  padding: 3.6rem 2.7rem 2rem 2.7rem;\r\n  border-radius: 10px;\r\n  border: 3px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  ${(props) =>\r\n    props.random >= 0 &&\r\n    props.random <= 4 &&\r\n    css`\r\n      border-right-color: rgba(96, 255, 218, 0.88);\r\n      border-left-color: rgba(94, 207, 255, 0.5);\r\n      background: linear-gradient(\r\n            to left,\r\n            rgba(96, 255, 218, 0.88) 0%,\r\n            rgba(94, 207, 255, 0.5) 100%\r\n          )\r\n          top/100% 3px,\r\n        linear-gradient(\r\n            to left,\r\n            rgba(96, 255, 218, 0.88) 0%,\r\n            rgba(94, 207, 255, 0.5) 100%\r\n          )\r\n          bottom/100% 3px;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.random >= 5 &&\r\n    props.random <= 9 &&\r\n    css`\r\n      border-right-color: rgba(94, 207, 255, 0.5);\r\n      border-left-color: rgba(96, 255, 218, 0.88);\r\n      background: linear-gradient(\r\n            to left,\r\n            rgba(94, 207, 255, 0.5) 0%,\r\n            rgba(96, 255, 218, 0.88) 100%\r\n          )\r\n          top/100% 3px,\r\n        linear-gradient(\r\n            to left,\r\n            rgba(94, 207, 255, 0.5) 0%,\r\n            rgba(96, 255, 218, 0.88) 100%\r\n          )\r\n          bottom/100% 3px;\r\n    `}\r\n\r\n  background-repeat: no-repeat;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    border: 3px solid transparent;\r\n    border-bottom: 3px solid #071923;\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(96, 255, 205, 0.38) 10%,\r\n      rgba(96, 255, 218, 0) 90%\r\n    );\r\n    @media (max-width: 568px) {\r\n      border-width: 2px;\r\n    }\r\n    transition: background 500ms ease-in-out;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    padding: 3.2rem 2.4rem 1.8rem 2.4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    padding: 3.4rem 2.4rem 2.9rem 2.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 14.6rem;\r\n    padding: 1.8rem 1.3rem 1.3rem;\r\n    border-width: 2px;\r\n    background-size: 100% 2px, 100% 2px;\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width: 23.6rem;\r\n  text-align: left;\r\n  font-size: 3.2rem;\r\n  font-weight: 700;\r\n  line-height: 4.65rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 20.8rem;\r\n    font-size: 2.8rem;\r\n    line-height: 4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 22.2rem;\r\n    font-size: 2.4rem;\r\n    line-height: 3.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 11.4rem;\r\n    font-size: 1.4rem;\r\n    line-height: 2.1rem;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 23.6rem;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 20.8rem;\r\n    line-height: 1.8rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 22.2rem;\r\n    line-height: 2.2rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 11.4rem;\r\n    font-size: 0.8rem;\r\n    line-height: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst TestNumber = styled.div`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Play = styled.span`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst PlayBtn = styled.div`\r\n  width: 2.8rem;\r\n  height: 2.8rem;\r\n  background-image: url(${PlayImg});\r\n  background-repeat: no-repeat;\r\n  background-position: right center;\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n  display: flex;\r\n  width: 6.6rem;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayBox = () => {\r\n  return (\r\n    <PlayBtnBox>\r\n      <Play>플레이</Play>\r\n      <PlayBtn />\r\n    </PlayBtnBox>\r\n  );\r\n};\r\n\r\nconst PlayFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapOne = styled.div`\r\n  //카드 테두리때문에\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapTwo = styled.div``;\r\n\r\nconst CardWrapThree = styled.div`\r\n  @media (max-width: 828px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardWrapFour = styled.div`\r\n  @media (max-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardListWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 123.2rem;\r\n  height: ${(props) => props.height}rem;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 1700ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 92rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 81.6rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 57rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 30.4rem;\r\n  }\r\n`;\r\n\r\nconst GradientBox = styled.div`\r\n  width: 130.3rem;\r\n  height: 22.2rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: -3.55rem;\r\n  background: linear-gradient(to bottom, transparent, #071923);\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 95.7rem;\r\n    left: -1.85rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 86rem;\r\n    left: -2.2rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 60.1rem;\r\n    left: -1.55rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 32.2rem;\r\n    height: 19.8rem;\r\n    left: -0.9rem;\r\n  }\r\n`;\r\n\r\nconst LoadMoreBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60.7rem;\r\n  height: 6rem;\r\n  margin: 1.4rem auto 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  letter-spacing: 0.025em;\r\n  border-radius: 8px;\r\n  border: 2px solid transparent;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  border-right-color: #00fff0;\r\n  border-left-color: #00c2ff;\r\n  background: linear-gradient(to left, #00fff0 0%, #00c2ff 100%) top/100% 3px,\r\n    linear-gradient(to left, #00fff0 0%, #00c2ff 100%) bottom/100% 3px;\r\n  background-repeat: no-repeat;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 3500ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 29.6rem;\r\n    height: 6rem;\r\n    margin: 0.9rem auto 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 5.2rem;\r\n    margin: 1.5rem auto 0;\r\n    font-size: 1.8rem;\r\n    letter-spacing: 0;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 35.2rem;\r\n    height: 4.8rem;\r\n    margin: 0.7rem auto 0;\r\n    letter-spacing: 0.005em;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    width: 30.4rem;\r\n    height: 3.6rem;\r\n    margin: 1.2rem auto 0;\r\n    font-size: 1.2rem;\r\n    border-width: 2px;\r\n    background-size: 100% 2px, 100% 2px;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CardList = ({ testList, testList2 }) => {\r\n  testList = Object.values(testList);\r\n\r\n  // testList와 testList2에 공통으로 있는 것만 리턴\r\n  let finalList = [];\r\n  testList.forEach((item) => {\r\n    testList2.forEach((item2) => {\r\n      if (\r\n        item.title.toLowerCase().includes(item2.title.toLowerCase()) &&\r\n        item.description.toLowerCase().includes(item2.description.toLowerCase())\r\n      ) {\r\n        finalList.push(item2);\r\n      }\r\n    });\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const [count, setCount] = useState(2);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const divideNum = width > 1440 ? 4 : width > 828 ? 3 : 2;\r\n  const divided = parseInt(finalList.length / divideNum);\r\n  const leftOver = finalList.length % divideNum;\r\n\r\n  let one = divided + leftOver,\r\n    two = divided,\r\n    three = divided,\r\n    four = divided;\r\n  if (leftOver === 2) {\r\n    two += 1;\r\n    one -= 1;\r\n  }\r\n  if (leftOver === 3) {\r\n    two += 1;\r\n    three += 1;\r\n    one -= 2;\r\n  }\r\n  if (leftOver === 4) {\r\n    two += 1;\r\n    three += 1;\r\n    four += 1;\r\n    one -= 3;\r\n  }\r\n\r\n  const defaultHeight = width > 568 ? 116.5 : 65;\r\n  const [height, setHeight] = useState(defaultHeight);\r\n  const countPlus = (e) => {\r\n    setCount(count + 1);\r\n    setHeight(count * defaultHeight);\r\n  };\r\n\r\n  const max = Math.max(one, two, three, four);\r\n\r\n  // divide는 한 번에 나오는 더보기 묶음 개수\r\n  const divide = width > 568 ? Math.round(max / 4) : Math.round(max / 3.5);\r\n\r\n  const maxHeight = width > 568 ? divide * 119 : divide * 65;\r\n\r\n  return (\r\n    <>\r\n      <CardListWrap height={height}>\r\n        <CardWrapOne>\r\n          <Link to=\"/testmaking\">\r\n            <PlusBtn random={Math.floor(Math.random() * 10)} />\r\n          </Link>\r\n          <BlankTop DesktopMargin={1.6} TabletMargin={1.6} MobileMargin={1.8} />\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index < one) {\r\n                return (\r\n                  <div key={index}>\r\n                    <Card\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      random={Math.floor(Math.random() * 10)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <MainBlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                        SmallMobileMargin={1.9}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <MainBlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                        SmallMobileMargin={1.9}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <MainBlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                      SmallMobileMargin={1.2}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapOne>\r\n        <CardWrapTwo>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 828) {\r\n                if (index >= one) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <MainBlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                        SmallMobileMargin={1.2}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one && index < one + two) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <MainBlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                          SmallMobileMargin={1.9}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <MainBlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                        SmallMobileMargin={1.2}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapTwo>\r\n        <CardWrapThree>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (width <= 1440) {\r\n                if (index >= one + two) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= one + two && index < one + two + three) {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Card\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                        random={Math.floor(Math.random() * 10)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={2.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapThree>\r\n        <CardWrapFour>\r\n          <>\r\n            {finalList.map((item, index) => {\r\n              if (index >= one + two + three) {\r\n                return (\r\n                  <div key={index}>\r\n                    <Card\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      random={Math.floor(Math.random() * 10)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={2.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapFour>\r\n        <GradientBox />\r\n      </CardListWrap>\r\n      {height < maxHeight && (\r\n        <LoadMoreBtn onClick={countPlus}>더보기</LoadMoreBtn>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js",["466"],"import styled from \"styled-components\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport MainDivider from \"../MainDivider\";\r\nimport DesktopMotoText from \"../../../assets/desktop/image_moto.png\";\r\nimport TabletMotoText from \"../../../assets/tablet/image_moto.png\";\r\nimport MobileMotoText from \"../../../assets/mobile/mobile_text_moto.png\";\r\nimport SmallMobileMotoText from \"../../../assets/small_mobile/text_moto.png\";\r\nimport DesktopWaterMark from \"../../../assets/desktop/image_watermark.png\";\r\nimport TabletWaterMark from \"../../../assets/tablet/image_watermark.png\";\r\nimport MobileWaterMark from \"../../../assets/mobile/mobile_image_watermark.png\";\r\nimport SmallMobileWaterMark from \"../../../assets/small_mobile/image_watermark.png\";\r\nimport MainBlankTop from \"../MainBlankTop\";\r\n\r\nconst OuterWrap = styled.div`\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 2000ms 1;\r\n  animation-timing-function: ease-in;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MotoText = styled.div`\r\n  width: 16.4rem;\r\n  height: 1.6rem;\r\n  background: url(${DesktopMotoText});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  @media (max-width: 1024px) {\r\n    width: 14.5rem;\r\n    height: 1.3rem;\r\n    background: url(${TabletMotoText});\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 14.3rem;\r\n    height: 1.3rem;\r\n    background: url(${MobileMotoText});\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 6rem;\r\n    height: 0.5rem;\r\n    background: url(${SmallMobileMotoText});\r\n  }\r\n`;\r\n\r\nconst WaterMark = styled.div`\r\n  width: 37.5rem;\r\n  height: 6.5rem;\r\n  background: url(${DesktopWaterMark});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  @media (max-width: 1024px) {\r\n    width: 33.2rem;\r\n    height: 5.8rem;\r\n    background: url(${TabletWaterMark});\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 32.3rem;\r\n    height: 4.7rem;\r\n    background: url(${MobileWaterMark});\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 12.925rem;\r\n    height: 2.2rem;\r\n    background: url(${SmallMobileWaterMark});\r\n  }\r\n`;\r\n\r\nconst TextIntroduction = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 1.6rem;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Plan = styled.div`\r\n  width: 8.7rem;\r\n  height: 10.2rem;\r\n\r\n  @media (max-width: 568px) {\r\n    width: 4.871rem;\r\n    height: 5.9rem;\r\n  }\r\n`;\r\n\r\nconst Design = styled.div`\r\n  width: 11.7rem;\r\n  height: 13.4rem;\r\n\r\n  @media (max-width: 568px) {\r\n    width: 6.55rem;\r\n    height: 7.7rem;\r\n  }\r\n`;\r\n\r\nconst Web = styled.div`\r\n  width: 7.2rem;\r\n  height: 16.6rem;\r\n\r\n  @media (max-width: 568px) {\r\n    width: 4.031rem;\r\n    height: 9.393rem;\r\n  }\r\n`;\r\n\r\nconst Server = styled.div`\r\n  width: 8.7rem;\r\n  height: 10.3rem;\r\n\r\n  @media (max-width: 568px) {\r\n    width: 4.871rem;\r\n    height: 5.802rem;\r\n  }\r\n`;\r\n\r\nconst PartWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 4.6rem;\r\n\r\n  @media (max-width: 568px) {\r\n    margin-bottom: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst PartTitle = styled.div`\r\n  font-size: 1.2rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst NameTitle = styled.div`\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n  font-size: 1.2rem;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 568px) {\r\n    margin-bottom: 1rem;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Member = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 84.6rem;\r\n  height: 25rem;\r\n  margin: 0 auto;\r\n  @media (max-width: 1024px) {\r\n    width: 59.1rem;\r\n    height: 24.6rem;\r\n  }\r\n  @media (max-width: 768px) {\r\n    width: 54.3rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 30.4rem;\r\n    height: 17.4rem;\r\n  }\r\n`;\r\n\r\nconst Footer = () => {\r\n  return (\r\n    // Desktop은 중간 구분선 없이 BlankTop만 191px 있음 주의\r\n    <OuterWrap>\r\n      <MainBlankTop\r\n        DesktopMargin={19.1}\r\n        TabletMargin={6.2}\r\n        MobileMargin={6.9}\r\n        SmallMobileMargin={4.8}\r\n      />\r\n      <MainDivider DesktopLength={0} TabletLength={7.1} MobileLength={6.2} />\r\n      <MainBlankTop\r\n        DesktopMargin={0}\r\n        TabletMargin={5.3}\r\n        MobileMargin={6}\r\n        SmallMobileMargin={3.9}\r\n      />\r\n      <Wrap>\r\n        <MotoText />\r\n      </Wrap>\r\n      <MainBlankTop\r\n        DesktopMargin={4.0}\r\n        TabletMargin={3.6}\r\n        MobileMargin={1.7}\r\n        SmallMobileMargin={0.6}\r\n      />\r\n      <Wrap>\r\n        <WaterMark />\r\n      </Wrap>\r\n      <MainBlankTop\r\n        DesktopMargin={7.4}\r\n        TabletMargin={5.3}\r\n        MobileMargin={4.6}\r\n        SmallMobileMargin={1.8}\r\n      />\r\n      <TextIntroduction>소리로 하는 모든 즐거움을 지향합니다.</TextIntroduction>\r\n\r\n      <TextIntroduction>\r\n        사운드피커를 통해 함께하는 사람들과의 즐거운 시간을 경험해보세요.\r\n      </TextIntroduction>\r\n      <br />\r\n      <TextIntroduction>contact us. soundpickerrr@gmail.com</TextIntroduction>\r\n      <MainBlankTop\r\n        DesktopMargin={17.6}\r\n        TabletMargin={10.6}\r\n        MobileMargin={12.5}\r\n        SmallMobileMargin={4.4}\r\n      />\r\n      <Member>\r\n        <Plan>\r\n          <PartWrap>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n            <PartTitle>기획</PartTitle>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n          </PartWrap>\r\n          <NameTitle>권상호</NameTitle>\r\n          <NameTitle>신지훈</NameTitle>\r\n        </Plan>\r\n        <Design>\r\n          <PartWrap>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n            <PartTitle>디자인</PartTitle>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n          </PartWrap>\r\n          <NameTitle>정아린</NameTitle>\r\n          <NameTitle>최혜린</NameTitle>\r\n          <NameTitle>김동우</NameTitle>\r\n        </Design>\r\n        <Web>\r\n          <PartWrap>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n            <PartTitle>웹</PartTitle>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n          </PartWrap>\r\n          <NameTitle>정재현</NameTitle>\r\n          <NameTitle>이재훈</NameTitle>\r\n          <NameTitle>정아연</NameTitle>\r\n          <NameTitle>김승미</NameTitle>\r\n        </Web>\r\n        <Server>\r\n          <PartWrap>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n            <PartTitle>서버</PartTitle>\r\n            <MainDivider\r\n              DesktopLength={2}\r\n              TabletLength={2}\r\n              MobileLength={2}\r\n              SmallMobileLength={1.12}\r\n            />\r\n          </PartWrap>\r\n          <NameTitle>강준우</NameTitle>\r\n          <NameTitle>홍혜림</NameTitle>\r\n        </Server>\r\n      </Member>\r\n    </OuterWrap>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\MainDivider.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js",["467"],"import styled, { css, keyframes } from 'styled-components'\r\n\r\nconst Overlay = styled.div`\r\n  display: ${props => (props.visible ? 'block' : 'none')};\r\n  /* visibility: ${props => (props.visible ? 'visible' : 'hidden')}; */\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 999;\r\n  transition: all 1s ease-in-out;\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n`\r\n\r\nconst FadeIn = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n`\r\n\r\nconst FadeOut = keyframes`{\r\n  0% { \r\n    background-color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  100% {\r\n    background-color: rgba(0, 0, 0, 0);\r\n  }\r\n`\r\n\r\nconst ModalOverlay = ({ visible, modalIn, modalOut }) => {\r\n  return <Overlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\r\n}\r\n\r\nexport default ModalOverlay\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\Bg.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js",["468","469"],"import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { logoutUser } from \"../../../_actions/user_action\";\r\nconst HeaderDiv = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100vw;\r\n  height: 9.4rem;\r\n  padding: 2.7rem 5.6rem;\r\n\r\n  @keyframes fadeIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  animation: fadeIn 500ms 1;\r\n  animation-timing-function: ease-in;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 6.4rem;\r\n    padding: 1.2rem 1.8rem;\r\n  }\r\n\r\n  @media (max-width: 568px) {\r\n    height: 3.4rem;\r\n    padding: 1.1rem 1.4rem;\r\n  }\r\n`;\r\n\r\nconst LoginDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem;\r\n  margin-right: 1.1rem;\r\n  cursor: pointer;\r\n  @media (max-width: 768px) {\r\n    margin-right: 0.9rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 5rem;\r\n    height: 1.2rem;\r\n    margin-right: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Login = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst SignUpDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 8.2rem;\r\n  height: 4rem;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 568px) {\r\n    width: 5.3rem;\r\n    height: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst SignUp = styled.strong`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst SignOut = styled.button`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  color: #ffffff;\r\n  background-color: rgba(0, 0, 0, 0);\r\n  border: rgba(0, 0, 0, 0);\r\n  @media (max-width: 768px) {\r\n    font-size: 1.4rem;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nfunction Header() {\r\n  const [myState, setMyState] = useState({ status: \"idle\", member: null });\r\n  const dispatch = useDispatch();\r\n  const LogOut = async (evt) => {\r\n    window.localStorage.setItem(\"isAuth\", \"false\");\r\n    window.localStorage.setItem(\"jwt\", \"\");\r\n    dispatch(logoutUser());\r\n    setMyState({ status: \"pending\" });\r\n    setTimeout(() => setMyState({ status: \"resolved\", member: null }), 600);\r\n  };\r\n\r\n  switch (window.localStorage.getItem(\"isAuth\")) {\r\n    case \"false\":\r\n      return (\r\n        <HeaderDiv>\r\n          <LoginDiv>\r\n            <Link to=\"/login\">\r\n              <Login>로그인</Login>\r\n            </Link>\r\n          </LoginDiv>\r\n\r\n          <SignUpDiv>\r\n            <Link to=\"/register\">\r\n              <SignUp>회원가입</SignUp>\r\n            </Link>\r\n          </SignUpDiv>\r\n        </HeaderDiv>\r\n      );\r\n    case \"true\":\r\n      return (\r\n        <HeaderDiv>\r\n          <LoginDiv>\r\n            <Link to=\"/\">\r\n              <SignOut onClick={LogOut}>로그아웃</SignOut>\r\n            </Link>\r\n          </LoginDiv>\r\n\r\n          <SignUpDiv>\r\n            <Link to=\"/mypage\">\r\n              <SignUp>마이페이지</SignUp>\r\n            </Link>\r\n          </SignUpDiv>\r\n        </HeaderDiv>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js",[],"C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js",["470","471"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 서버랑 통신해서 카테고리 이름 받아오기\r\nconst CategoryName = styled.span`\r\n  font-size: 1.28rem;\r\n  line-height: 1.035;\r\n  color: #dadada;\r\n  @media (max-width: 1440px) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (max-width: 1047px) {\r\n    font-size: 1.15rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.2rem;\r\n    line-height: 1.035;\r\n  }\r\n  @media (max-width: 568px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst CategoryBtn = styled.button`\r\n  &:hover {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    box-shadow: 0 0 12px 0 #ffffff;\r\n    outline: none;\r\n\r\n    @media (max-width: 568px) {\r\n      width: 0.6rem;\r\n      height: 0.6rem;\r\n      padding: 0;\r\n      box-shadow: 0 0 8px 0 #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 6.9rem;\r\n  height: 5.3rem;\r\n  margin-right: 4.3rem;\r\n  &:nth-child(9) {\r\n    margin-right: 8rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    &:nth-child(7) {\r\n      margin-right: 1.4rem;\r\n    }\r\n  }\r\n  @media (max-width: 828px) {\r\n    &:nth-child(5) {\r\n      margin-right: 3.2rem;\r\n    }\r\n  }\r\n  @media (max-width: 568px) {\r\n    width: 6rem;\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst div = document.getElementsByClassName(\"cateBtn\");\r\n\r\nfunction handleClick(event) {\r\n  if (!event.target.classList.contains(\"cateAll\")) {\r\n    div[0].classList.remove(\"cateAll\");\r\n  }\r\n\r\n  if (event.target.classList[1] === \"clicked\") {\r\n    event.target.classList.remove(\"clicked\");\r\n  } else {\r\n    for (var i = 0; i < div.length; i++) {\r\n      /*\r\n      if (div[0].classList === \"cateAll\") {\r\n        console.log(div[0].classList);\r\n        div[0].classList.remove(\"cateAll\");\r\n      }\r\n      */\r\n      div[i].classList.remove(\"clicked\");\r\n    }\r\n\r\n    event.target.classList.add(\"clicked\");\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  for (var i = 0; i < div.length; i++) {\r\n    div[i].addEventListener(\"click\", handleClick);\r\n  }\r\n}\r\n\r\ninit();\r\n\r\nconst CategoryList = ({ categoryList, startNum, onClickDisplay }) => {\r\n  const { width } = useWindowDimensions();\r\n\r\n  const categoryNum = width > 1024 ? 7 : width > 828 ? 5 : width > 568 ? 3 : 2;\r\n\r\n  return (\r\n    <>\r\n      {categoryList.map((item, index) => {\r\n        if (index === 9) {\r\n          return (\r\n            <CategoryItem key={index}>\r\n              <CategoryName>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn\r\n                className=\"cateBtn cateAll\"\r\n                onClick={(evt) => {\r\n                  onClickDisplay(item[\"id\"]);\r\n                  handleClick(evt);\r\n                }}\r\n              />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n      {categoryList.map((item, index) => {\r\n        if (index < startNum + categoryNum && index >= startNum) {\r\n          return (\r\n            <CategoryItem key={index}>\r\n              <CategoryName>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn\r\n                className=\"cateBtn\"\r\n                onClick={(evt) => {\r\n                  onClickDisplay(item[\"id\"]);\r\n                  handleClick(evt);\r\n                }}\r\n              />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\정아연\\Documents\\GitHub\\SoundPicker-Frontend\\src\\pages\\mypage\\UnderLineWrap.js",[],{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","replacedBy":"475"},{"ruleId":"476","severity":1,"message":"477","line":5,"column":1,"nodeType":"478","endLine":53,"endColumn":2},{"ruleId":"479","severity":1,"message":"480","line":43,"column":11,"nodeType":"481","endLine":43,"endColumn":13,"suggestions":"482"},{"ruleId":"479","severity":1,"message":"483","line":120,"column":5,"nodeType":"481","endLine":120,"endColumn":7,"suggestions":"484"},{"ruleId":"485","severity":1,"message":"486","line":1,"column":8,"nodeType":"487","messageId":"488","endLine":1,"endColumn":16},{"ruleId":"485","severity":1,"message":"489","line":1,"column":17,"nodeType":"487","messageId":"488","endLine":1,"endColumn":26},{"ruleId":"485","severity":1,"message":"490","line":2,"column":21,"nodeType":"487","messageId":"488","endLine":2,"endColumn":25},{"ruleId":"485","severity":1,"message":"491","line":189,"column":11,"nodeType":"487","messageId":"488","endLine":189,"endColumn":16},{"ruleId":"485","severity":1,"message":"492","line":194,"column":11,"nodeType":"487","messageId":"488","endLine":194,"endColumn":22},{"ruleId":"485","severity":1,"message":"489","line":1,"column":10,"nodeType":"487","messageId":"488","endLine":1,"endColumn":19},{"ruleId":"485","severity":1,"message":"493","line":1,"column":21,"nodeType":"487","messageId":"488","endLine":1,"endColumn":29},{"ruleId":"485","severity":1,"message":"486","line":2,"column":8,"nodeType":"487","messageId":"488","endLine":2,"endColumn":16},{"ruleId":"485","severity":1,"message":"494","line":4,"column":8,"nodeType":"487","messageId":"488","endLine":4,"endColumn":14},{"ruleId":"476","severity":1,"message":"477","line":4,"column":1,"nodeType":"478","endLine":23,"endColumn":2},{"ruleId":"495","severity":1,"message":"496","line":8,"column":13,"nodeType":"497","messageId":"498","endLine":8,"endColumn":19},{"ruleId":"495","severity":1,"message":"496","line":11,"column":13,"nodeType":"497","messageId":"498","endLine":11,"endColumn":19},{"ruleId":"495","severity":1,"message":"496","line":14,"column":13,"nodeType":"497","messageId":"498","endLine":14,"endColumn":19},{"ruleId":"479","severity":1,"message":"483","line":30,"column":6,"nodeType":"481","endLine":30,"endColumn":8,"suggestions":"499"},{"ruleId":"500","severity":1,"message":"501","line":50,"column":27,"nodeType":"502","messageId":"503","endLine":50,"endColumn":29},{"ruleId":"479","severity":1,"message":"504","line":55,"column":6,"nodeType":"481","endLine":55,"endColumn":8,"suggestions":"505"},{"ruleId":"485","severity":1,"message":"506","line":3,"column":8,"nodeType":"487","messageId":"488","endLine":3,"endColumn":12},{"ruleId":"507","severity":1,"message":"508","line":219,"column":95,"nodeType":"509","messageId":"510","endLine":219,"endColumn":96,"suggestions":"511"},{"ruleId":"507","severity":1,"message":"512","line":219,"column":97,"nodeType":"509","messageId":"510","endLine":219,"endColumn":98,"suggestions":"513"},{"ruleId":"479","severity":1,"message":"514","line":782,"column":10,"nodeType":"481","endLine":782,"endColumn":12,"suggestions":"515"},{"ruleId":"507","severity":1,"message":"508","line":217,"column":91,"nodeType":"509","messageId":"510","endLine":217,"endColumn":92,"suggestions":"516"},{"ruleId":"507","severity":1,"message":"512","line":217,"column":93,"nodeType":"509","messageId":"510","endLine":217,"endColumn":94,"suggestions":"517"},{"ruleId":"479","severity":1,"message":"514","line":790,"column":10,"nodeType":"481","endLine":790,"endColumn":12,"suggestions":"518"},{"ruleId":"479","severity":1,"message":"519","line":848,"column":11,"nodeType":"481","endLine":848,"endColumn":131,"suggestions":"520"},{"ruleId":"485","severity":1,"message":"521","line":47,"column":10,"nodeType":"487","messageId":"488","endLine":47,"endColumn":14},{"ruleId":"479","severity":1,"message":"522","line":114,"column":5,"nodeType":"481","endLine":114,"endColumn":11,"suggestions":"523"},{"ruleId":"479","severity":1,"message":"524","line":45,"column":6,"nodeType":"481","endLine":45,"endColumn":8,"suggestions":"525"},{"ruleId":"485","severity":1,"message":"486","line":3,"column":8,"nodeType":"487","messageId":"488","endLine":3,"endColumn":16},{"ruleId":"485","severity":1,"message":"526","line":7,"column":8,"nodeType":"487","messageId":"488","endLine":7,"endColumn":15},{"ruleId":"479","severity":1,"message":"527","line":37,"column":6,"nodeType":"481","endLine":37,"endColumn":19,"suggestions":"528"},{"ruleId":"529","severity":1,"message":"530","line":102,"column":13,"nodeType":"487","messageId":"531","endLine":102,"endColumn":18},{"ruleId":"479","severity":1,"message":"532","line":54,"column":7,"nodeType":"481","endLine":54,"endColumn":9,"suggestions":"533"},{"ruleId":"479","severity":1,"message":"534","line":66,"column":7,"nodeType":"481","endLine":66,"endColumn":24,"suggestions":"535"},{"ruleId":"485","severity":1,"message":"536","line":9,"column":25,"nodeType":"487","messageId":"488","endLine":9,"endColumn":42},{"ruleId":"485","severity":1,"message":"486","line":7,"column":8,"nodeType":"487","messageId":"488","endLine":7,"endColumn":16},{"ruleId":"479","severity":1,"message":"537","line":163,"column":6,"nodeType":"481","endLine":163,"endColumn":14,"suggestions":"538"},{"ruleId":"479","severity":1,"message":"539","line":25,"column":6,"nodeType":"481","endLine":25,"endColumn":8,"suggestions":"540"},{"ruleId":"541","severity":1,"message":"542","line":476,"column":42,"nodeType":"543","messageId":"544","endLine":476,"endColumn":44},{"ruleId":"541","severity":1,"message":"542","line":518,"column":42,"nodeType":"543","messageId":"544","endLine":518,"endColumn":44},{"ruleId":"541","severity":1,"message":"542","line":599,"column":42,"nodeType":"543","messageId":"544","endLine":599,"endColumn":44},{"ruleId":"541","severity":1,"message":"542","line":674,"column":42,"nodeType":"543","messageId":"544","endLine":674,"endColumn":44},{"ruleId":"485","severity":1,"message":"486","line":2,"column":8,"nodeType":"487","messageId":"488","endLine":2,"endColumn":16},{"ruleId":"485","severity":1,"message":"545","line":32,"column":7,"nodeType":"487","messageId":"488","endLine":32,"endColumn":14},{"ruleId":"485","severity":1,"message":"546","line":107,"column":10,"nodeType":"487","messageId":"488","endLine":107,"endColumn":17},{"ruleId":"547","severity":1,"message":"548","line":117,"column":3,"nodeType":"549","messageId":"550","endLine":150,"endColumn":4},{"ruleId":"541","severity":1,"message":"542","line":130,"column":39,"nodeType":"543","messageId":"544","endLine":130,"endColumn":41},{"ruleId":"541","severity":1,"message":"542","line":146,"column":39,"nodeType":"543","messageId":"544","endLine":146,"endColumn":41},"no-native-reassign",["551"],"no-negated-in-lhs",["552"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["553"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["554"],"no-unused-vars","'BlankTop' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'useState' is defined but never used.","'styled' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["555"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'getRecommendAPI'. Either include it or remove the dependency array.",["556"],"'Test' is defined but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["557","558"],"Unnecessary escape character: \\?.",["559","560"],"React Hook useEffect has missing dependencies: 'checkCurrentTime0', 'checkCurrentTime1', 'checkCurrentTime2', 'checkCurrentTime3', 'checkCurrentTime4', 'checkCurrentTime5', 'checkCurrentTime6', 'checkCurrentTime7', 'checkCurrentTime8', 'checkCurrentTime9', 'onReadyAPI0', 'onReadyAPI1', 'onReadyAPI2', 'onReadyAPI3', 'onReadyAPI4', 'onReadyAPI5', 'onReadyAPI6', 'onReadyAPI7', 'onReadyAPI8', and 'onReadyAPI9'. Either include them or remove the dependency array.",["561"],["562","563"],["564","565"],["566"],"React Hook useEffect has missing dependencies: 'getTestData' and 'match.params.id'. Either include them or remove the dependency array.",["567"],"'test' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'sort'. Either exclude it or remove the dependency array.",["568"],"React Hook useEffect has a missing dependency: 'testCategory'. Either include it or remove the dependency array.",["569"],"'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'newList'. Either include it or remove the dependency array. If 'setSound1Url' needs the current value of 'newList', you can also switch to useReducer instead of useState and read 'newList' in the reducer.",["570"],"no-redeclare","'audio' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'questionStartsfrom'. Either include it or remove the dependency array. If 'setMinutes' needs the current value of 'questionStartsfrom', you can also switch to useReducer instead of useState and read 'questionStartsfrom' in the reducer.",["571"],"React Hook useEffect has missing dependencies: 'changeStartTime' and 'totalTime'. Either include them or remove the dependency array. If 'changeStartTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["572"],"'setContainerWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'first'. Either include it or remove the dependency array.",["573"],"React Hook useEffect has a missing dependency: 'urlId'. Either include it or remove the dependency array. If 'setData' needs the current value of 'urlId', you can also switch to useReducer instead of useState and read 'urlId' in the reducer.",["574"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FadeOut' is assigned a value but never used.","'myState' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"577","fix":"579"},{"desc":"580","fix":"581"},{"messageId":"582","fix":"583","desc":"584"},{"messageId":"585","fix":"586","desc":"587"},{"messageId":"582","fix":"588","desc":"584"},{"messageId":"585","fix":"589","desc":"587"},{"desc":"590","fix":"591"},{"messageId":"582","fix":"592","desc":"584"},{"messageId":"585","fix":"593","desc":"587"},{"messageId":"582","fix":"594","desc":"584"},{"messageId":"585","fix":"595","desc":"587"},{"desc":"590","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"613","text":"614"},"Update the dependencies array to be: [dispatch]",{"range":"615","text":"616"},{"range":"617","text":"616"},"Update the dependencies array to be: [getRecommendAPI]",{"range":"618","text":"619"},"removeEscape",{"range":"620","text":"621"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"622","text":"623"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"624","text":"621"},{"range":"625","text":"623"},"Update the dependencies array to be: [checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",{"range":"626","text":"627"},{"range":"628","text":"621"},{"range":"629","text":"623"},{"range":"630","text":"621"},{"range":"631","text":"623"},{"range":"632","text":"627"},"Update the dependencies array to be: [getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",{"range":"633","text":"634"},"Update the dependencies array to be: []",{"range":"635","text":"636"},"Update the dependencies array to be: [testCategory]",{"range":"637","text":"638"},"Update the dependencies array to be: [activeIndex, newList]",{"range":"639","text":"640"},"Update the dependencies array to be: [questionStartsfrom]",{"range":"641","text":"642"},"Update the dependencies array to be: [changeStartTime, minutes, seconds, totalTime]",{"range":"643","text":"644"},"Update the dependencies array to be: [first, search]",{"range":"645","text":"646"},"Update the dependencies array to be: [urlId]",{"range":"647","text":"648"},[1517,1519],"[dispatch, props.history]",[2940,2942],"[dispatch]",[1189,1191],[1389,1391],"[getRecommendAPI]",[8562,8563],"",[8562,8562],"\\",[8564,8565],[8564,8564],[24684,24686],"[checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",[8452,8453],[8452,8452],[8454,8455],[8454,8454],[24694,24696],[26864,26984],"[getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",[2553,2559],"[]",[1448,1450],"[testCategory]",[1747,1760],"[activeIndex, newList]",[1453,1455],"[questionStartsfrom]",[1805,1822],"[changeStartTime, minutes, seconds, totalTime]",[3491,3499],"[first, search]",[856,858],"[urlId]"]