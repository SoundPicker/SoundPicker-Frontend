[{"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\index.js":"1","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\App.js":"2","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js":"3","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js":"4","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js":"5","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js":"6","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js":"7","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js":"8","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js":"9","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js":"10","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js":"11","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js":"12","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js":"13","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js":"14","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js":"15","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js":"16","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js":"17","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\BackToMain.js":"18","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js":"19","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js":"20","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js":"21","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\Button.js":"22","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js":"23","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js":"24","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js":"25","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\Divider.js":"26","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js":"27","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js":"28","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js":"29","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js":"30","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js":"31","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js":"32","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js":"33","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js":"34","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\MenuIcon.js":"35","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js":"36","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js":"37","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\Main.js":"38","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js":"39","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js":"40","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js":"41","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js":"42","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js":"43","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js":"44","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js":"45","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js":"46","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js":"47","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js":"48","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js":"49","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js":"50","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js":"51","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js":"52","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js":"53","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js":"54","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js":"55","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js":"56","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js":"57","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js":"58","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js":"59","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js":"60","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\Bg.js":"61","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\SearchInput.js":"62","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Player.js":"63","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js":"64","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js":"65","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js":"66","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js":"67","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js":"68","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js":"69","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js":"70","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js":"71","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js":"72","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js":"73","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js":"74","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js":"75","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js":"76","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js":"77","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js":"78","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js":"79","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js":"80"},{"size":230,"mtime":1609175486728,"results":"81","hashOfConfig":"82"},{"size":1109,"mtime":1610037371181,"results":"83","hashOfConfig":"82"},{"size":374,"mtime":1609943748430,"results":"84","hashOfConfig":"82"},{"size":6002,"mtime":1609826968136,"results":"85","hashOfConfig":"82"},{"size":1420,"mtime":1610046171848,"results":"86","hashOfConfig":"82"},{"size":450,"mtime":1609940743629,"results":"87","hashOfConfig":"82"},{"size":876,"mtime":1609826968145,"results":"88","hashOfConfig":"82"},{"size":2487,"mtime":1609826968052,"results":"89","hashOfConfig":"82"},{"size":2051,"mtime":1610010857442,"results":"90","hashOfConfig":"82"},{"size":420,"mtime":1609826968138,"results":"91","hashOfConfig":"82"},{"size":834,"mtime":1609667759231,"results":"92","hashOfConfig":"82"},{"size":379,"mtime":1609618938335,"results":"93","hashOfConfig":"82"},{"size":355,"mtime":1609667406442,"results":"94","hashOfConfig":"82"},{"size":647,"mtime":1610046472765,"results":"95","hashOfConfig":"82"},{"size":465,"mtime":1609663965039,"results":"96","hashOfConfig":"82"},{"size":639,"mtime":1609667437491,"results":"97","hashOfConfig":"82"},{"size":2761,"mtime":1610043324779,"results":"98","hashOfConfig":"82"},{"size":1125,"mtime":1609858281503,"results":"99","hashOfConfig":"82"},{"size":673,"mtime":1609826968049,"results":"100","hashOfConfig":"82"},{"size":793,"mtime":1609826968043,"results":"101","hashOfConfig":"82"},{"size":707,"mtime":1609175486716,"results":"102","hashOfConfig":"82"},{"size":887,"mtime":1609826968038,"results":"103","hashOfConfig":"82"},{"size":718,"mtime":1609826968042,"results":"104","hashOfConfig":"82"},{"size":749,"mtime":1609826968037,"results":"105","hashOfConfig":"82"},{"size":1178,"mtime":1609826968040,"results":"106","hashOfConfig":"82"},{"size":607,"mtime":1609668911100,"results":"107","hashOfConfig":"82"},{"size":701,"mtime":1609826968054,"results":"108","hashOfConfig":"82"},{"size":522,"mtime":1609826968076,"results":"109","hashOfConfig":"82"},{"size":1221,"mtime":1609826968065,"results":"110","hashOfConfig":"82"},{"size":777,"mtime":1609826968075,"results":"111","hashOfConfig":"82"},{"size":2167,"mtime":1610032998961,"results":"112","hashOfConfig":"82"},{"size":315,"mtime":1609940743623,"results":"113","hashOfConfig":"82"},{"size":1510,"mtime":1610045735410,"results":"114","hashOfConfig":"82"},{"size":10851,"mtime":1609826968125,"results":"115","hashOfConfig":"82"},{"size":490,"mtime":1609617836436,"results":"116","hashOfConfig":"82"},{"size":524,"mtime":1609826968078,"results":"117","hashOfConfig":"82"},{"size":1075,"mtime":1609826968122,"results":"118","hashOfConfig":"82"},{"size":918,"mtime":1609958215765,"results":"119","hashOfConfig":"82"},{"size":933,"mtime":1609826968057,"results":"120","hashOfConfig":"82"},{"size":767,"mtime":1609826968070,"results":"121","hashOfConfig":"82"},{"size":1334,"mtime":1609826968080,"results":"122","hashOfConfig":"82"},{"size":567,"mtime":1609826968073,"results":"123","hashOfConfig":"82"},{"size":466,"mtime":1609826968088,"results":"124","hashOfConfig":"82"},{"size":1084,"mtime":1609826968071,"results":"125","hashOfConfig":"82"},{"size":540,"mtime":1609826968082,"results":"126","hashOfConfig":"82"},{"size":1618,"mtime":1609826968086,"results":"127","hashOfConfig":"82"},{"size":924,"mtime":1609826968084,"results":"128","hashOfConfig":"82"},{"size":1102,"mtime":1609826968101,"results":"129","hashOfConfig":"82"},{"size":415,"mtime":1609826968099,"results":"130","hashOfConfig":"82"},{"size":413,"mtime":1609826968098,"results":"131","hashOfConfig":"82"},{"size":576,"mtime":1609826968091,"results":"132","hashOfConfig":"82"},{"size":813,"mtime":1609826968096,"results":"133","hashOfConfig":"82"},{"size":596,"mtime":1609826968094,"results":"134","hashOfConfig":"82"},{"size":558,"mtime":1609826968103,"results":"135","hashOfConfig":"82"},{"size":4111,"mtime":1609826968127,"results":"136","hashOfConfig":"82"},{"size":834,"mtime":1609826968093,"results":"137","hashOfConfig":"82"},{"size":455,"mtime":1609826968108,"results":"138","hashOfConfig":"82"},{"size":1437,"mtime":1609826968109,"results":"139","hashOfConfig":"82"},{"size":17972,"mtime":1610044952738,"results":"140","hashOfConfig":"82"},{"size":6658,"mtime":1609826968068,"results":"141","hashOfConfig":"82"},{"size":719,"mtime":1609613575272,"results":"142","hashOfConfig":"82"},{"size":1822,"mtime":1609530780941,"results":"143","hashOfConfig":"82"},{"size":5671,"mtime":1609826968106,"results":"144","hashOfConfig":"82"},{"size":918,"mtime":1609528524738,"results":"145","hashOfConfig":"82"},{"size":1260,"mtime":1609858351673,"results":"146","hashOfConfig":"82"},{"size":2398,"mtime":1609950961676,"results":"147","hashOfConfig":"82"},{"size":5381,"mtime":1609532209518,"results":"148","hashOfConfig":"82"},{"size":15004,"mtime":1610012619758,"results":"149","hashOfConfig":"82"},{"size":788,"mtime":1609826968046,"results":"150","hashOfConfig":"82"},{"size":1158,"mtime":1610010857491,"results":"151","hashOfConfig":"82"},{"size":1204,"mtime":1610010857500,"results":"152","hashOfConfig":"82"},{"size":9181,"mtime":1609826968112,"results":"153","hashOfConfig":"82"},{"size":2810,"mtime":1610025018582,"results":"154","hashOfConfig":"82"},{"size":538,"mtime":1610010857467,"results":"155","hashOfConfig":"82"},{"size":504,"mtime":1610010857496,"results":"156","hashOfConfig":"82"},{"size":379,"mtime":1610010857475,"results":"157","hashOfConfig":"82"},{"size":1141,"mtime":1610010857470,"results":"158","hashOfConfig":"82"},{"size":557,"mtime":1610010857479,"results":"159","hashOfConfig":"82"},{"size":356,"mtime":1610012996222,"results":"160","hashOfConfig":"82"},{"size":2459,"mtime":1610046168406,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"wrdc2c",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"164"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"164"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"164"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"164"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"164"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"164"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"164"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"164"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"164"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"164"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"164"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"164"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\index.js",[],["335","336"],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\App.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\main\\MainPage.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPage.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\TestEnd.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\test\\TestPage.js",["337"],"import BlankTop from '../../components/common/BlankTop'\r\nimport TestCdWrapperContainer from '../../containers/test/TestCd/TestCdWrapperContainer'\r\nimport TestWrapperContainer from '../../containers/test/TestWrapperContainer'\r\n\r\nconst TestPage = ({ match }) => {\r\n  // state\r\n  return (\r\n    <>\r\n      <TestWrapperContainer>\r\n        <TestCdWrapperContainer match={match} />\r\n      </TestWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestPage\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\testmaking\\TestMakingPage.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\StartLoading.js",["338"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContentComponent from \"./ContentComponent\";\r\nimport BlankTop from '../common/BlankTop';\r\nimport LoadingComponent from '../common/LoadingComponent';\r\nimport UnderLineWrap from '../common/UnderLineWrap';\r\nimport Bg1 from '../../assets/images/start_background1.png';\r\nimport Bg2 from '../../assets/images/all_background2.png';\r\nimport logo1 from '../../assets/images/image_watermark.png';\r\n\r\n\r\nconst Background = styled.div`\r\n    width:100vw;\r\n    height:1000vh;\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-color: rgba( 12, 26, 34, 1);\r\n    background-size:contain;\r\n    @media  (max-width:768px) {\r\n  background-image: url(${Bg2});\r\n    }\r\n    @media (min-width: 768px) {\r\n      background-image: url(${Bg1});\r\n    }\r\n`;\r\n\r\n\r\nconst Wrapper=styled.div`\r\n position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-size: cover;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    margin-top:15%;\r\n      width:100%auto;\r\n    }\r\n\r\n    @media (min-width: 1024px) { //desktop\r\n      margin-top:15%;\r\n      width:100%auto;\r\n    }\r\n    @media (max-width: 767px) { //iphone\r\n      width:100%auto;\r\n        margin-top:30%;\r\n  }\r\n\r\n`;\r\n\r\n\r\nconst MyIcon = styled.img`\r\n  @media (min-width: 768px) and (max-width:1024px) { //between\r\n    width:300px;\r\n    }\r\n\r\n    @media (min-width: 1024px) { //desktop\r\n    }\r\n    @media (max-width: 767px) { //iphone\r\n      width:150px;\r\n  }\r\n`;\r\n\r\nMyIcon.defaultProps = {\r\n  src: logo1,\r\n};\r\n\r\nconst StartLoading = () => {\r\n\r\n    return(\r\n        <div>\r\n          <Background>\r\n            <Wrapper>\r\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\r\n                <ContentComponent title=\"소리로 하는 모든 즐거움\" />\r\n                <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\r\n                <MyIcon></MyIcon>\r\n            <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\r\n            <LoadingComponent></LoadingComponent>\r\n            <BlankTop DesktopMargin='5' TabletMargin='2' MobileMargin='2' />\r\n            <ContentComponent title=\"오늘밤 사픽 주인공은 나야나~ 나야나~ \" />\r\n            <div></div>\r\n            \r\n            </Wrapper>\r\n            </Background>\r\n        </div>\r\n    );\r\n\r\n};\r\nexport default StartLoading;","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\QuizLoading.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\mypage\\MyPageButton.js",["339"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/common/Button\";\r\n\r\n\r\n\r\nconst MyPageButton = () => { \r\n\r\n\r\n    return(\r\n        <div>\r\n        <Button font='12' >수정</Button>\r\n        <Button font='12' >삭제</Button>\r\n        <Button font='12' color=\"#60FFDA\" border=\"#60FFDA\"> 플레이</Button>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\nexport default MyPageButton;","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\Bg.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\LogoTitle.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\Header.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\TestTitle.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\ThankYouText.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendText.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\RecommendCardList.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test_end\\BackToMain.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\ContentComponent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\UnderLineWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\BlankTop.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\Button.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\TextComponent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\BoldTextComponent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\LoadingComponent.js",["340"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst CircleBorder = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  background: linear-gradient( rgba(96,255,205,1) ,rgba(96,255,205,0.2) ,rgba(96,255,205,0.01) );\r\n  box-shadow:  5px 0px 20px -5px  rgba(96,255,205,0.5);\r\n  animation: spin .8s linear 0s infinite;\r\n\r\n  @media  (max-width:1024px) { \r\n    width: 30px;\r\n  height: 30px;\r\n  padding: 4px;\r\n    }\r\n    \r\n    @media (min-width: 1024px) {\r\n      width: 65px;\r\n     height: 65px;\r\n     padding: 7px;\r\n    }\r\n`;\r\n\r\n\r\nconst CircleCore =styled.div`\r\n width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(12,28,48,1);\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst SpinnerBox = styled.div`\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(359deg);\r\n  }\r\n  to{\r\n    transform: rotate(0);\r\n  }\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n`;\r\n\r\nconst LoadingComponent = ({}) => {\r\n    return(\r\n   \r\n        <SpinnerBox>\r\n        <CircleBorder>\r\n            <CircleCore></CircleCore>\r\n        </CircleBorder>\r\n    </SpinnerBox>\r\n\r\n    );\r\n\r\n};\r\nexport default LoadingComponent;","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\Divider.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\loading\\TitleComponent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TMInner.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Header.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TMBackground.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\main\\MainContainer.js",["341"],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test\\TestWrapperContainer.js",["342"],"import React from 'react'\r\nimport TestBackground from '../../components/test/TestBackground'\r\nimport Test from '../../components/test/TestBackground'\r\n\r\nfunction TestContainer({ children, match }) {\r\n  return (\r\n    <>\r\n      <TestBackground children={children} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestContainer\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test\\TestCd\\TestCdWrapperContainer.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\form\\TestMakingFormContainer.js",["343","344","345"],"import BlankTop from \"../../../components/common/BlankTop\";\r\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\r\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\r\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\r\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\r\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\r\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\r\nimport TopInner from \"../../../components/testmaking/TopInner\";\r\nimport InputCategoryContainer from \"../InputCategoryContainer\";\r\nimport InputsWrap from '../../../components/testmaking/questionlist/input/InputsWrap';\r\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\r\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\r\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\r\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\r\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\r\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\r\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\r\nimport PlayerContainer from \"../player/PlayerContainer\";\r\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\r\nimport StartTime from \"../../../components/testmaking/questionlist/player/StartTime\";\r\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\r\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\r\nimport React,{useEffect, useState} from 'react';\r\n\r\nexport let player0;\r\nexport let player1;\r\n\r\nconst TestMakingFormContainer = () => {\r\n    const [questions,setQuestions] = useState([{\r\n        questionNumber : 1,\r\n        questionYoutubeURL : \"\",\r\n        questionStartsfrom : \"\",\r\n        hint : \"\",\r\n        answer: \"\",\r\n        answerYoutubeURL: \"\"\r\n    }]);\r\n\r\n    const changeText = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        const tempsQustios = questions.map(question => {\r\n            if( question.questionNumber === questionNumber+1 ){\r\n                question[name] = value;\r\n            }\r\n\r\n            return question;\r\n\r\n        });\r\n\r\n        setQuestions(tempsQustios);\r\n\r\n    }\r\n    const addQuestions = () => {\r\n        let data = {\r\n            questionNumber : questions.length +1,\r\n            questionYoutubeURL : \"\",\r\n            questionStartsfrom : \"\",\r\n            hint : \"\",\r\n            answer: \"\",\r\n            answerYoutubeURL: \"\"\r\n\r\n        };\r\n        console.log(questions)\r\n        setQuestions([...questions, data]);\r\n    }\r\n\r\n    const deleteQuestions = questionNumber => () => {\r\n        let tempQuestions = questions.filter(question => {\r\n            return question.questionNumber !== questionNumber + 1;\r\n        })\r\n\r\n        setQuestions(tempQuestions);\r\n    }\r\n\r\n    const getYoutubeId = questionNumber => e => {\r\n        const { target: { value } } = e;\r\n        const { target: { name } } = e;\r\n        console.log(name,value)\r\n        if(value)  {\r\n            const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\r\n            const matchs = value.match(regExp);\r\n            console.log(matchs);\r\n            if(value!==''&&matchs&&matchs[7].length===11){\r\n\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = matchs[7];\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n            }else{\r\n                const tempsQustios = questions.map(question => {\r\n                    if( question.questionNumber === questionNumber+1 ){\r\n                        question[name] = \"\";\r\n                    }\r\n        \r\n                    return question;\r\n        \r\n                });  \r\n                setQuestions(tempsQustios);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const script = document.createElement('script');\r\n    //     script.src = 'https://www.youtube.com/iframe_api';\r\n    //     const firstScriptTag = document.getElementsByTagName('script')[0];\r\n    //       firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n        \r\n    //     window.onYouTubeIframeAPIReady = () => {\r\n    //       console.error(questionUrl);\r\n    //       // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    //       player0 = new window.YT.Player(`player0`, {\r\n    //         height: \"1000\",\r\n    //         width: \"1000\",\r\n    //         videoId: questionUrl,\r\n    //         host: 'https://www.youtube.com',\r\n    //         playerVars: {\r\n    //           autoplay: 0,\r\n    //           controls: 0,\r\n    //           fs: 0,\r\n    //           showinfo:0,\r\n    //           enablejsapi: 1,\r\n    //           origin:'http://localhost:3000'\r\n    //         },\r\n    //         events: {\r\n    //           onReady: onReadyAPI,\r\n    //           onStateChange: playerState,\r\n    //         },\r\n    //       });\r\n    //       console.error('player0', player);\r\n    //     // if (firstScriptTag.id === 'www-widgetapi-script') window.onYouTubeIframeAPIReady();\r\n    //     setTimeout(() => {\r\n    //       const a = document.getElementsByTagName('iframe')[0];\r\n    //       a.src = 'https://www.youtube.com/embed/F9Ex1ESEWN4';\r\n    //     }, 1000)\r\n    //     }\r\n    //     return () => {\r\n    //       // script.remove();\r\n    //       clearInterval(checkCurrentTime);\r\n    //     };\r\n        \r\n    //   }, []);\r\n    \r\n\r\n    return(\r\n        <form>\r\n        <div id='player0'></div>\r\n        <div id='player1'></div>\r\n\r\n            <TopInner>\r\n                <table></table>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='제목'/>\r\n                    <TopInput inputName='title' inputPlaceholder='최대 20자' inputMaxLength='20' />\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='내용'/>\r\n                    <TopInput inputName='description' inputPlaceholder='최대 40자' inputMaxLength='40'/>\r\n                </TopInputWrap>\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\r\n                <TopInputWrap>\r\n                    <TopInputText text='카테고리'/>\r\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요'/>\r\n                </TopInputWrap>\r\n            </TopInner>\r\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\r\n            <QuestionListTitle/>\r\n\r\n            {questions.length !== 0 && (\r\n            <QuestionListInner>\r\n                {questions.map((d,i)=>(\r\n                 <div key={i}>\r\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\r\n                    <InputsWrap >\r\n                        <QuestionListLeftWrap >\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text={\"Qustion00\"+(i+1)} />\r\n                                <QuestionListInput inputName='answer' inputPlaceholder='정답을 적어주세요'  changeText={changeText(i)} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListHintWrap>\r\n                                <QuestionListInputText text='Hint' />\r\n                                <QuestionListInput inputName='hint' inputPlaceholder='힌트를 자유롭게 적어주세요'  changeText={changeText(i)} />\r\n                            </QuestionListHintWrap>\r\n                        </QuestionListLeftWrap>\r\n\r\n                        <QuestionListRightWrap>\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} />\r\n                            </QuestionListInputWrap>\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\r\n\r\n                           {questions[i].questionYoutubeURL ? \r\n                            <PlayerWrap>\r\n                                <PlayerContainer questionUrl={questions[i].questionYoutubeURL} player={player0}/>\r\n                                <StartTime  changeText={changeText(i)}/>\r\n                            </PlayerWrap>\r\n                            : \"\"}\r\n\r\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\r\n                            <QuestionListInputWrap>\r\n                                <QuestionListInputText text='Youtube Link' />\r\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  changeText={getYoutubeId(i)} />\r\n                            </QuestionListInputWrap>\r\n\r\n                        </QuestionListRightWrap>\r\n                    </InputsWrap>\r\n                </div>\r\n                ))}\r\n\r\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\r\n                <QuestionLustPlusButton addQuestions={addQuestions} />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\r\n                <QuestionSaveButton />\r\n                <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\r\n                <table></table>\r\n            </QuestionListInner>     \r\n\r\n               \r\n            )}\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default TestMakingFormContainer;","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\MenuIcon.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\TopInner.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\InputCategoryContainer.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\Main.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\TestBackground.js",["346"],"import styled from 'styled-components'\r\nimport bg1920 from '../../assets/images/test/all_background1920.png'\r\nimport bg1440 from '../../assets/images/test/all_background1440.png'\r\nimport bg1024 from '../../assets/images/test/all_background1024.png'\r\nimport bg768 from '../../assets/images/test/all_background768.png'\r\n\r\nconst TestWrap = styled.div`\r\n  height: 500vh;\r\n  width: 100%;\r\n  position: relative;\r\n  background-repeat: no-repeat;\r\n  background-position: center top;\r\n  background-color: #081923;\r\n  background-size: contain;\r\n  background-image: url(${bg1920});\r\n  overflow: hidden;\r\n  @media only screen and (max-width: 1024px) {\r\n    background-image: url(${bg1024});\r\n  }\r\n  @media only screen and (max-width: 768px) {\r\n    background-image: url(${bg768});\r\n  }\r\n`\r\n\r\nconst TestBackground = ({ children }) => {\r\n  return (\r\n    <>\r\n      <TestWrap>{children}</TestWrap>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TestBackground\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInput.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListHeader.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListTitle.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\TopInputText.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListInner.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListSaveButton.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\QuestionListPlusButton.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputText.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputRightWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputLeftWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\InputsWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInput.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListHintWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QustionListInputWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\testmaking\\player\\PlayerContainer.js",["347","348"],"import React, { useState, useEffect } from \"react\";\r\nimport Player from \"../../../components/testmaking/questionlist/player/Player\";\r\n\r\n\r\nconst PlayerContainer = ({questionUrl,player}) => {\r\n  const [isPlaying, setPlaying] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\r\n  const [totalTime, setTotalTime] = useState(\"0:00\");\r\n  const [mouseDragX, setMouseDragX] = useState(false);\r\n  const [activeButton, setactiveButton] = useState(false);\r\n  const [containerWidth,setContainerWidth] = useState(307);\r\n  let checkCurrentTime;\r\n\r\n  const playerState = (e) => {\r\n    console.log(e)\r\n    console.log(e.data);\r\n    console.log(isLoading)\r\n    if (e.data === 1) {\r\n      setPlaying(true);\r\n    } else if (e.data === 2) {\r\n      setPlaying(false);\r\n    }\r\n  };\r\n\r\n  const transTime = (seconds) => {\r\n    if (!seconds) {\r\n      console.log(seconds);\r\n      return;\r\n    }\r\n    const hour = parseInt(seconds / 3600);\r\n    const min = parseInt((seconds % 3600) / 60);\r\n    const sec = seconds % 60;\r\n\r\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\r\n      sec < 10 ? \"0\" + String(sec) : sec\r\n    }`;\r\n  };\r\n\r\n  const setTime = () => {\r\n    setCurrentTime(transTime(player.getCurrentTime().toFixed()));\r\n  };\r\n\r\n  const onReadyAPI = () => {\r\n    setLoading(true);\r\n    setPlaying(false);\r\n    checkCurrentTime = setInterval(setTime, 1000);\r\n    setTotalTime(() => transTime(player.getDuration()));\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    console.log(e)\r\n    const nowFraction = e.offsetX / containerWidth;\r\n    player.seekTo(player.getDuration() * nowFraction, true);\r\n  };\r\n\r\n  const drag = () => {\r\n    document.addEventListener(\"mousemove\", dragHandler);\r\n    document.addEventListener(\"mouseup\", () => {\r\n      document.removeEventListener(\"mousemove\", dragHandler);\r\n      setMouseDragX(false);\r\n    });\r\n  };\r\n\r\n  const playHandler = () => {\r\n    setPlaying(!isPlaying);\r\n  } \r\n  \r\n  const backClick = () => {\r\n      if(isLoading)player.seekTo(player.getCurrentTime() - 10, true)\r\n\r\n  }\r\n  const clickActiveButtonOver = () => {\r\n     setactiveButton(true)\r\n  }\r\n  const clickActiveButtonOut = () => {\r\n    setactiveButton(false)\r\n}\r\n\r\n  useEffect(() => {\r\n    console.log(questionUrl);\r\n    const script = document.createElement('script');\r\n    script.src = 'https://www.youtube.com/iframe_api';\r\n    var firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\r\n\r\n      console.log(window);\r\n\r\n    if (window.YT) {\r\n      console.log(window.YT);\r\n      console.log(questionUrl);\r\n      window.onYouTubeIframeAPIReady = () => {\r\n        player = new window.YT.Player(`player_${questionUrl}`, {\r\n          height: \"110\",\r\n          width: \"110\",\r\n          videoId: questionUrl,\r\n          host: 'https://www.youtube.com',\r\n          playerVars: {\r\n            autoplay: 1,\r\n            controls: 0,\r\n            fs: 0,\r\n            showinfo:0,\r\n            enablejsapi: 1,\r\n            origin:'http://localhost:3001'\r\n          },\r\n          events: {\r\n            onReady: onReadyAPI,\r\n            onStateChange: playerState,\r\n          },\r\n        });\r\n      };\r\n\r\n    } else {\r\n      console.log(\"can not load player\");\r\n    }\r\n    return () => {\r\n      clearInterval(checkCurrentTime);\r\n    };\r\n  },[questionUrl]);\r\n\r\n  if (isLoading) {\r\n    if (isPlaying) {\r\n      player?.playVideo();\r\n    } else {\r\n      player?.pauseVideo();\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <Player \r\n        isPlaying={isPlaying}\r\n        isLoading={isLoading}\r\n        currentTime={currentTime}\r\n        totalTime={totalTime}\r\n        mouseDragX={mouseDragX}\r\n        activeButton={activeButton}\r\n        containerWidth={containerWidth}\r\n        player={player}\r\n        drag={drag}\r\n        playHandler={playHandler}\r\n        backClick={backClick}\r\n        clickActiveButtonOver={clickActiveButtonOver}\r\n        clickActiveButtonOut={clickActiveButtonOut}\r\n        questionUrl={questionUrl}\r\n            />\r\n  );\r\n};\r\nexport default PlayerContainer;\r\n\r\n\r\n\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\input\\QusitonListYoutubeInput.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\PlayerWrap.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\StartTime.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\testcd\\TestCd.js",["349","350"],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\Input\\InputCategory.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\Bg.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\SearchInput.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Player.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\banner\\Banner.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\header\\Header.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\category\\Category.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\footer\\Footer.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\test_card\\TestCard.js",["351","352","353","354","355"],"// 카드 크기 때문에 breakpoint - 1440(추가), 768 -> 828로 변경\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PlusDesktop from \"../../../assets/desktop/button_add.png\";\r\nimport PlusTablet from \"../../../assets/tablet/button_add.png\";\r\nimport PlusMobile from \"../../../assets/mobile/button_add.png\";\r\nimport BlankTop from \"../../common/BlankTop\";\r\nimport PlayImg from \"../../../assets/play.png\";\r\n\r\nconst PlusBtn = styled.div`\r\n  display: block;\r\n  width: 29.6rem;\r\n  height: 5.6rem;\r\n  position: relative;\r\n  background-image: url(${PlusDesktop});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  border-radius: 8px;\r\n  border: 3px solid #60ffda;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 4.8rem;\r\n    background-image: url(${PlusTablet});\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    height: 5.5rem;\r\n    background-image: url(${PlusMobile});\r\n  }\r\n`;\r\n\r\nconst Card = styled.button`\r\n  display: block;\r\n  width: 29.6rem;\r\n  position: relative;\r\n  padding: 3.6rem 2.1rem 2rem 2.7rem;\r\n  border-radius: 8px;\r\n  border: 3px solid #60ffda;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(96, 255, 205, 0.38) 0%,\r\n      rgba(96, 255, 218, 0) 100%\r\n    );\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    padding: 3.2rem 1.9rem 1.8rem 2.4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 27.6rem;\r\n    padding: 3.4rem 2.5rem 2.9rem 2.4rem;\r\n  }\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  width: 22.5rem;\r\n  text-align: left;\r\n  font-size: 3.2rem;\r\n  font-weight: 700;\r\n  line-height: 4.65rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    font-size: 2.8rem;\r\n    line-height: 4rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    font-size: 2.4rem;\r\n    line-height: 3.4rem;\r\n  }\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  width: 22.2rem;\r\n  text-align: left;\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n\r\n  @media (max-width: 1024px) {\r\n    line-height: 1.8rem;\r\n  }\r\n  @media (max-width: 828px) {\r\n    line-height: 2.2rem;\r\n  }\r\n`;\r\n\r\nconst TestNumber = styled.div`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n`;\r\n\r\nconst Play = styled.span`\r\n  font-size: 1.2rem;\r\n  line-height: 1.8rem;\r\n`;\r\n\r\nconst PlayBtn = styled.div`\r\n  width: 2.8rem;\r\n  height: 2.8rem;\r\n  background-image: url(${PlayImg});\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n  display: flex;\r\n  width: 6.6rem;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayBox = () => {\r\n  return (\r\n    <PlayBtnBox>\r\n      <Play>플레이</Play>\r\n      <PlayBtn />\r\n    </PlayBtnBox>\r\n  );\r\n};\r\n\r\nconst PlayFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CardWrapOne = styled.div``;\r\n\r\nconst CardWrapTwo = styled.div``;\r\n\r\nconst CardWrapThree = styled.div`\r\n  @media (max-width: 828px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardWrapFour = styled.div`\r\n  @media (max-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CardListWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 123.2rem;\r\n  height: ${(props) => props.height}rem;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 92rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 81.6rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 57rem;\r\n  }\r\n`;\r\n\r\nconst GradientBox = styled.div`\r\n  width: 130.3rem;\r\n  height: 33.3rem;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: -3.55rem;\r\n  background: linear-gradient(to bottom, transparent, #071923);\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 95.7rem;\r\n    left: -1.85rem;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 86rem;\r\n    left: -2.2rem;\r\n  }\r\n\r\n  @media (max-width: 828px) {\r\n    width: 60.1rem;\r\n    left: -1.55rem;\r\n  }\r\n`;\r\n\r\nconst LoadMoreBtn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 60.7rem;\r\n  height: 6rem;\r\n  margin: 1.4rem auto 0;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  letter-spacing: 0.025em;\r\n  border-radius: 8px;\r\n  border: 3px solid;\r\n  cursor: pointer;\r\n  color: #ffffff;\r\n  background-color: transparent;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media (max-width: 1440px) {\r\n    width: 29.6rem;\r\n    height: 6rem;\r\n    margin: 0.9rem auto 0;\r\n  }\r\n\r\n  @media (max-width: 1024px) {\r\n    width: 26.2rem;\r\n    height: 5.2rem;\r\n    margin: 1.5rem auto 0;\r\n    font-size: 1.8rem;\r\n    letter-spacing: 0;\r\n  }\r\n  @media (max-width: 828px) {\r\n    width: 35.2rem;\r\n    height: 4.8rem;\r\n    margin: 0.7rem auto 0;\r\n    letter-spacing: 0.005em;\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CardList = ({ testList }) => {\r\n  const history = useHistory();\r\n\r\n  const [count, setCount] = useState(2);\r\n  const [height, setHeight] = useState(116.5);\r\n  const countPlus = (e) => {\r\n    setCount(count + 1);\r\n    console.log(count);\r\n    setHeight(count * 116.5);\r\n    console.log(height);\r\n  };\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const divideNum = width > 1440 ? 4 : width > 828 ? 3 : 2;\r\n  const divided = parseInt(testList.length / divideNum);\r\n\r\n  const testNum = testList.length;\r\n\r\n  let one_dividedBy2 = parseInt(testNum / 2);\r\n  let two_divideBy2 = testNum - one_dividedBy2;\r\n  //one_devidedBy3, two_devidedBy3, three_devidedBy3\r\n  // one_devidedBy4, two_devidedBy4, three_devidedBy4, four_devidedBy4\r\n\r\n  return (\r\n    <>\r\n      <CardListWrap height={height}>\r\n        <CardWrapOne>\r\n          <Link to=\"/testmaking\">\r\n            <PlusBtn />\r\n          </Link>\r\n          <BlankTop DesktopMargin={1.6} TabletMargin={1.6} MobileMargin={1.8} />\r\n          <>\r\n            {testList.map((item, index) => {\r\n              if (index < divided) {\r\n                return (\r\n                  <>\r\n                    <Card\r\n                      key={index}\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={0.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapOne>\r\n        <CardWrapTwo>\r\n          <>\r\n            {testList.map((item, index) => {\r\n              if (width <= 828) {\r\n                if (index >= divided) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= divided && index < 2 * divided) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapTwo>\r\n        <CardWrapThree>\r\n          <>\r\n            {testList.map((item, index) => {\r\n              if (width <= 1440) {\r\n                if (index >= 2 * divided) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              } else {\r\n                if (index >= 2 * divided && index < 3 * divided) {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={index}\r\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                      >\r\n                        <CardTitle>{item[\"title\"]}</CardTitle>\r\n                        <BlankTop\r\n                          DesktopMargin={3}\r\n                          TabletMargin={2.7}\r\n                          MobileMargin={0.4}\r\n                        />\r\n                        <CardContent>{item[\"description\"]}</CardContent>\r\n                        <BlankTop\r\n                          DesktopMargin={3.8}\r\n                          TabletMargin={3.3}\r\n                          MobileMargin={4.8}\r\n                        />\r\n                        <PlayFooter>\r\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                          <PlayBox />\r\n                        </PlayFooter>\r\n                      </Card>\r\n                      <BlankTop\r\n                        DesktopMargin={1.6}\r\n                        TabletMargin={1.6}\r\n                        MobileMargin={1.8}\r\n                      />\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapThree>\r\n        <CardWrapFour>\r\n          <>\r\n            {testList.map((item, index) => {\r\n              if (index >= 3 * divided) {\r\n                return (\r\n                  <>\r\n                    <Card\r\n                      key={index}\r\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\r\n                    >\r\n                      <CardTitle>{item[\"title\"]}</CardTitle>\r\n                      <BlankTop\r\n                        DesktopMargin={3}\r\n                        TabletMargin={2.7}\r\n                        MobileMargin={0.4}\r\n                      />\r\n                      <CardContent>{item[\"description\"]}</CardContent>\r\n                      <BlankTop\r\n                        DesktopMargin={3.8}\r\n                        TabletMargin={3.3}\r\n                        MobileMargin={4.8}\r\n                      />\r\n                      <PlayFooter>\r\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\r\n                        <PlayBox />\r\n                      </PlayFooter>\r\n                    </Card>\r\n                    <BlankTop\r\n                      DesktopMargin={1.6}\r\n                      TabletMargin={1.6}\r\n                      MobileMargin={1.8}\r\n                    />\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </>\r\n        </CardWrapFour>\r\n        <GradientBox />\r\n      </CardListWrap>\r\n      <LoadMoreBtn onClick={countPlus}>더보기</LoadMoreBtn>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\common\\test\\TextComponent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\test\\testcd\\ProgressBar.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\modal\\ModalPage.js",["356","357","358"],"import React, { useEffect, useState } from 'react'\r\nimport ModalContent from '../../components/modal/ModalContent.js'\r\nimport ModalInner from '../../components/modal/ModalInner'\r\nimport ModalOverlay from '../../components/modal/ModalOverlay'\r\nimport ModalWrapperContainer from '../../containers/modal/ModalWrapperContainer.js'\r\n\r\nfunction ModalPage({ visible, closeModal, maskClosable, urlId, modalIn }) {\r\n  const [data, setData] = useState('')\r\n  const [modalOut, setModalOut] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setData(urlId)\r\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`\r\n    return () => {\r\n      const scrollY = document.body.style.top\r\n      document.body.style.cssText = `position: \"\"; top: \"\";`\r\n      window.scrollTo(0, parseInt(scrollY || '0') * -1)\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <ModalOverlay visible={visible} />\r\n\r\n      <ModalWrapperContainer\r\n        closeModal={closeModal}\r\n        maskClosable={maskClosable}\r\n        visible={visible}\r\n      >\r\n        <ModalInner modalIn={modalIn}>\r\n          <ModalContent data={data} />\r\n        </ModalInner>\r\n      </ModalWrapperContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalPage\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\testmaking\\questionlist\\player\\Wave.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\main\\category\\CategoryList.js",["359","360"],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 서버랑 통신해서 카테고리 이름 받아오기\r\nconst CategoryName = styled.span`\r\n  font-size: 1.3rem;\r\n  line-height: 1.035;\r\n  color: #dadada;\r\n  @media (max-width: 1440px) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @media (max-width: 1047px) {\r\n    font-size: 1.15rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    font-size: 1.2rem;\r\n    line-height: 1.035;\r\n  }\r\n`;\r\n\r\nconst CategoryBtn = styled.button`\r\n  display: block;\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n  border: none;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 9px 0 #ffffff;\r\n  background-color: #ffffff;\r\n  cursor: pointer;\r\n  &:focus {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    outline: none;\r\n    box-shadow: 0 0 12px 0 #60ffda;\r\n    background-color: #60ffda;\r\n  }\r\n  &:hover {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    box-shadow: 0 0 12px 0 #ffffff;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst CategoryItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 6.9rem;\r\n  height: 5.3rem;\r\n  margin-right: 4.3rem;\r\n  &:nth-child(9) {\r\n    margin-right: 8rem;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    &:nth-child(7) {\r\n      margin-right: 1.4rem;\r\n    }\r\n  }\r\n  @media (max-width: 828px) {\r\n    &:nth-child(5) {\r\n      margin-right: 3.2rem;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width } = window;\r\n  return {\r\n    width,\r\n  };\r\n}\r\n\r\nfunction useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n\r\nconst CategoryList = ({ categoryList, startNum }) => {\r\n  console.log(categoryList);\r\n  const { width } = useWindowDimensions();\r\n\r\n  const categoryNum = width > 1024 ? 7 : width > 828 ? 5 : 3;\r\n\r\n  return (\r\n    <>\r\n      {categoryList.map((item, index) => {\r\n        if (index === 9) {\r\n          return (\r\n            <CategoryItem>\r\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n      {categoryList.map((item, index) => {\r\n        if (index < startNum + categoryNum && index >= startNum) {\r\n          return (\r\n            <CategoryItem>\r\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\r\n              <CategoryBtn />\r\n            </CategoryItem>\r\n          );\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalContent.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\modal\\ModalWrapperContainer.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalOverlay.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalInner.js",["361"],"import styled, { keyframes, css } from 'styled-components'\r\n\r\nconst LayoutInner = styled.div`\r\n  box-shadow: 0px 0px 8px 2px #60ffda;\r\n  background: black;\r\n  padding: 0.3rem;\r\n  overflow: hidden;\r\n  border-radius: 0.9rem;\r\n  width: 100%;\r\n  max-width: 85rem;\r\n  min-width: 64.8rem;\r\n  margin: 7.2rem auto;\r\n  outline: 0;\r\n  ${props =>\r\n    props.modalIn &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n  ${props =>\r\n    props.modalOut &&\r\n    css`\r\n      animation-timing-function: ease-in-out;\r\n      animation-duration: 1s;\r\n      animation-name: ${FadeIn};\r\n    `}\r\n  @media only screen and (max-width: 880px) {\r\n    width: 95vw;\r\n  }\r\n`\r\n\r\nconst FadeIn = keyframes`{\r\n  0% { \r\n   opacity: 0;\r\n  }\r\n  100% {\r\n  opacity: 1;\r\n  }\r\n`\r\nconst FadeOut = keyframes`{\r\n  0% { \r\n   opacity: 1;\r\n  }\r\n  100% {\r\n  opacity: 1;\r\n  }\r\n`\r\n// min-height: 50%;\r\n\r\nconst ModalInner = ({ children, modalIn }) => {\r\n  return (\r\n    <LayoutInner modalIn={modalIn} tabIndex=\"0\">\r\n      {' '}\r\n      {children}{' '}\r\n    </LayoutInner>\r\n  )\r\n}\r\n\r\nexport default ModalInner\r\n","C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\components\\modal\\ModalWrapper.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\pages\\test_end\\TestEndPage.js",[],"C:\\Users\\김승미\\Desktop\\SOPT\\SoundPicker\\SoundPicker-Frontend\\src\\containers\\test_end\\TestEndContainer.js",["362","363","364"],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":1,"column":8,"nodeType":"371","messageId":"372","endLine":1,"endColumn":16},{"ruleId":"369","severity":1,"message":"373","line":6,"column":8,"nodeType":"371","messageId":"372","endLine":6,"endColumn":21},{"ruleId":"369","severity":1,"message":"374","line":2,"column":8,"nodeType":"371","messageId":"372","endLine":2,"endColumn":14},{"ruleId":"375","severity":1,"message":"376","line":50,"column":27,"nodeType":"377","messageId":"378","endLine":50,"endColumn":29},{"ruleId":"369","severity":1,"message":"379","line":46,"column":10,"nodeType":"371","messageId":"372","endLine":46,"endColumn":14},{"ruleId":"369","severity":1,"message":"380","line":3,"column":8,"nodeType":"371","messageId":"372","endLine":3,"endColumn":12},{"ruleId":"369","severity":1,"message":"381","line":23,"column":15,"nodeType":"371","messageId":"372","endLine":23,"endColumn":24},{"ruleId":"382","severity":1,"message":"383","line":80,"column":95,"nodeType":"384","messageId":"385","endLine":80,"endColumn":96,"suggestions":"386"},{"ruleId":"382","severity":1,"message":"387","line":80,"column":97,"nodeType":"384","messageId":"385","endLine":80,"endColumn":98,"suggestions":"388"},{"ruleId":"369","severity":1,"message":"389","line":3,"column":8,"nodeType":"371","messageId":"372","endLine":3,"endColumn":14},{"ruleId":"369","severity":1,"message":"390","line":12,"column":25,"nodeType":"371","messageId":"372","endLine":12,"endColumn":42},{"ruleId":"391","severity":1,"message":"392","line":93,"column":18,"nodeType":"393","endLine":110,"endColumn":11},{"ruleId":"391","severity":1,"message":"394","line":36,"column":6,"nodeType":"395","endLine":36,"endColumn":19,"suggestions":"396"},{"ruleId":"397","severity":1,"message":"398","line":98,"column":13,"nodeType":"371","messageId":"399","endLine":98,"endColumn":18},{"ruleId":"369","severity":1,"message":"400","line":292,"column":7,"nodeType":"371","messageId":"372","endLine":292,"endColumn":20},{"ruleId":"401","severity":1,"message":"402","line":305,"column":41,"nodeType":"403","messageId":"404","endLine":305,"endColumn":43},{"ruleId":"401","severity":1,"message":"402","line":343,"column":41,"nodeType":"403","messageId":"404","endLine":343,"endColumn":43},{"ruleId":"401","severity":1,"message":"402","line":416,"column":41,"nodeType":"403","messageId":"404","endLine":416,"endColumn":43},{"ruleId":"401","severity":1,"message":"402","line":489,"column":41,"nodeType":"403","messageId":"404","endLine":489,"endColumn":43},{"ruleId":"369","severity":1,"message":"405","line":9,"column":10,"nodeType":"371","messageId":"372","endLine":9,"endColumn":18},{"ruleId":"369","severity":1,"message":"406","line":9,"column":20,"nodeType":"371","messageId":"372","endLine":9,"endColumn":31},{"ruleId":"391","severity":1,"message":"407","line":19,"column":6,"nodeType":"395","endLine":19,"endColumn":8,"suggestions":"408"},{"ruleId":"401","severity":1,"message":"402","line":100,"column":39,"nodeType":"403","messageId":"404","endLine":100,"endColumn":41},{"ruleId":"401","severity":1,"message":"402","line":110,"column":39,"nodeType":"403","messageId":"404","endLine":110,"endColumn":41},{"ruleId":"369","severity":1,"message":"409","line":41,"column":7,"nodeType":"371","messageId":"372","endLine":41,"endColumn":14},{"ruleId":"369","severity":1,"message":"410","line":3,"column":8,"nodeType":"371","messageId":"372","endLine":3,"endColumn":18},{"ruleId":"391","severity":1,"message":"411","line":56,"column":6,"nodeType":"395","endLine":56,"endColumn":8,"suggestions":"412"},{"ruleId":"391","severity":1,"message":"413","line":88,"column":6,"nodeType":"395","endLine":88,"endColumn":8,"suggestions":"414"},"no-native-reassign",["415"],"no-negated-in-lhs",["416"],"no-unused-vars","'BlankTop' is defined but never used.","Identifier","unusedVar","'UnderLineWrap' is defined but never used.","'styled' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'test' is assigned a value but never used.","'Test' is defined but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["417","418"],"Unnecessary escape character: \\?.",["419","420"],"'bg1440' is defined but never used.","'setContainerWidth' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'player' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","React Hook useEffect has a missing dependency: 'newList'. Either include it or remove the dependency array. If 'setSound1Url' needs the current value of 'newList', you can also switch to useReducer instead of useState and read 'newList' in the reducer.","ArrayExpression",["421"],"no-redeclare","'audio' is already defined.","redeclared","'two_divideBy2' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'modalOut' is assigned a value but never used.","'setModalOut' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'urlId'. Either include it or remove the dependency array. If 'setData' needs the current value of 'urlId', you can also switch to useReducer instead of useState and read 'urlId' in the reducer.",["422"],"'FadeOut' is assigned a value but never used.","'Background' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecommendAPI'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has a missing dependency: 'getTitleAPI'. Either include it or remove the dependency array.",["424"],"no-global-assign","no-unsafe-negation",{"messageId":"425","fix":"426","desc":"427"},{"messageId":"428","fix":"429","desc":"430"},{"messageId":"425","fix":"431","desc":"427"},{"messageId":"428","fix":"432","desc":"430"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},"removeEscape",{"range":"441","text":"442"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"443","text":"444"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"445","text":"442"},{"range":"446","text":"444"},"Update the dependencies array to be: [activeIndex, newList]",{"range":"447","text":"448"},"Update the dependencies array to be: [urlId]",{"range":"449","text":"450"},"Update the dependencies array to be: [getRecommendAPI]",{"range":"451","text":"452"},"Update the dependencies array to be: [getTitleAPI]",{"range":"453","text":"454"},[3673,3674],"",[3673,3673],"\\",[3675,3676],[3675,3675],[1656,1669],"[activeIndex, newList]",[819,821],"[urlId]",[1412,1414],"[getRecommendAPI]",[2097,2099],"[getTitleAPI]"]