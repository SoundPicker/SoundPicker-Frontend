[{"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/index.js":"1","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/App.js":"2","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_reducers/index.js":"3","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/hoc/auth.js":"4","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/StartLoading.js":"5","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/testedit/TestEditPage.js":"6","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/testmaking/TestMakingPage.js":"7","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/main/MainPage.js":"8","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/MyPage.js":"9","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/test_end/TestEndPage.js":"10","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/QuizLoading.js":"11","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/RegisterPage.js":"12","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/test/TestPage.js":"13","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/LoginPage.js":"14","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_reducers/user_reducer.js":"15","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/ContentComponent.js":"16","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/MyPageButton.js":"17","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/TitleComponent.js":"18","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/LoadingComponent.js":"19","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/BlankTop.js":"20","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/BoldTextComponent.js":"21","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/TextComponent.js":"22","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/UnderLineWrap.js":"23","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TMBackground.js":"24","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TMInner.js":"25","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Header.js":"26","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/Button.js":"27","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/UnderLineComponent.js":"28","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/ColorButton.js":"29","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/Text.js":"30","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/ColorButton.js":"31","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/Text.js":"32","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/UnderLineComponent.js":"33","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testedit/form/TestEditFormContainer.js":"34","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/form/TestMakingFormContainer.js":"35","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_actions/user_action.js":"36","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/main/MainContainer.js":"37","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test/TestWrapperContainer.js":"38","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test/TestCd/TestCdWrapperContainer.js":"39","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test_end/TestEndContainer.js":"40","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_actions/types.js":"41","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/Button.js":"42","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TopInner.js":"43","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/InputCategoryContainer.js":"44","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInput.js":"45","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInputWrap.js":"46","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInputText.js":"47","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/player/PlayerContainer.js":"48","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListTitle.js":"49","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/player/StartTimeContainer.js":"50","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListSaveButton.js":"51","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListInner.js":"52","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/InputsWrap.js":"53","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListPlusButton.js":"54","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputLeftWrap.js":"55","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputWrap.js":"56","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputRightWrap.js":"57","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListHeader.js":"58","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputText.js":"59","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListHintWrap.js":"60","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QusitonListYoutubeInput.js":"61","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/PlayerWrap.js":"62","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInput.js":"63","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/config.js":"64","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/TestBackground.js":"65","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/testcd/TestCd.js":"66","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/TestEnd.js":"67","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/Main.js":"68","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/InputCategory.js":"69","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/Wave.js":"70","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/StartTime.js":"71","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/Divider.js":"72","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/testcd/ProgressBar.js":"73","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/QuizHeader.js":"74","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/Bg.js":"75","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/Header.js":"76","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/LogoTitle.js":"77","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/TestTitle.js":"78","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/ThankYouText.js":"79","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/RecommendText.js":"80","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/RecommendCardList.js":"81","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/BackToMain.js":"82","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/Bg.js":"83","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/header/Header.js":"84","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/banner/Banner.js":"85","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/footer/Footer.js":"86","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/test/TextComponent.js":"87","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/modal/ModalPage.js":"88","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/category/Category.js":"89","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/test_card/TestCard.js":"90","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/modal/ModalWrapperContainer.js":"91","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalContent.js":"92","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/MenuIcon.js":"93","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/category/CategoryList.js":"94","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalInner.js":"95","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalOverlay.js":"96","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalWrapper.js":"97"},{"size":693,"mtime":1610257823558,"results":"98","hashOfConfig":"99"},{"size":1563,"mtime":1610257823523,"results":"100","hashOfConfig":"99"},{"size":153,"mtime":1610257823523,"results":"101","hashOfConfig":"99"},{"size":1560,"mtime":1610264484747,"results":"102","hashOfConfig":"99"},{"size":2396,"mtime":1610256573942,"results":"103","hashOfConfig":"99"},{"size":1336,"mtime":1610256573972,"results":"104","hashOfConfig":"99"},{"size":1329,"mtime":1610256573973,"results":"105","hashOfConfig":"99"},{"size":359,"mtime":1610257823559,"results":"106","hashOfConfig":"99"},{"size":6926,"mtime":1610257823560,"results":"107","hashOfConfig":"99"},{"size":343,"mtime":1610257823561,"results":"108","hashOfConfig":"99"},{"size":1982,"mtime":1610257823542,"results":"109","hashOfConfig":"99"},{"size":8303,"mtime":1610271051504,"results":"110","hashOfConfig":"99"},{"size":434,"mtime":1610257823560,"results":"111","hashOfConfig":"99"},{"size":7689,"mtime":1610257823552,"results":"112","hashOfConfig":"99"},{"size":615,"mtime":1610257823523,"results":"113","hashOfConfig":"99"},{"size":640,"mtime":1610256573940,"results":"114","hashOfConfig":"99"},{"size":401,"mtime":1610256573970,"results":"115","hashOfConfig":"99"},{"size":665,"mtime":1610256573942,"results":"116","hashOfConfig":"99"},{"size":1117,"mtime":1609399740269,"results":"117","hashOfConfig":"99"},{"size":689,"mtime":1609164036564,"results":"118","hashOfConfig":"99"},{"size":725,"mtime":1609480916395,"results":"119","hashOfConfig":"99"},{"size":695,"mtime":1609480882051,"results":"120","hashOfConfig":"99"},{"size":771,"mtime":1610256573938,"results":"121","hashOfConfig":"99"},{"size":776,"mtime":1610256573952,"results":"122","hashOfConfig":"99"},{"size":494,"mtime":1609579505928,"results":"123","hashOfConfig":"99"},{"size":1170,"mtime":1609610067267,"results":"124","hashOfConfig":"99"},{"size":947,"mtime":1610257823559,"results":"125","hashOfConfig":"99"},{"size":783,"mtime":1610257823554,"results":"126","hashOfConfig":"99"},{"size":808,"mtime":1610257823554,"results":"127","hashOfConfig":"99"},{"size":672,"mtime":1610257823554,"results":"128","hashOfConfig":"99"},{"size":808,"mtime":1610257823552,"results":"129","hashOfConfig":"99"},{"size":672,"mtime":1610257823552,"results":"130","hashOfConfig":"99"},{"size":783,"mtime":1610257823553,"results":"131","hashOfConfig":"99"},{"size":38778,"mtime":1610263033555,"results":"132","hashOfConfig":"99"},{"size":39188,"mtime":1610279433075,"results":"133","hashOfConfig":"99"},{"size":1880,"mtime":1610257823523,"results":"134","hashOfConfig":"99"},{"size":3749,"mtime":1610257823555,"results":"135","hashOfConfig":"99"},{"size":302,"mtime":1610257823556,"results":"136","hashOfConfig":"99"},{"size":1447,"mtime":1610257823555,"results":"137","hashOfConfig":"99"},{"size":2617,"mtime":1610257823556,"results":"138","hashOfConfig":"99"},{"size":246,"mtime":1610257823523,"results":"139","hashOfConfig":"99"},{"size":881,"mtime":1610257823541,"results":"140","hashOfConfig":"99"},{"size":671,"mtime":1610256573953,"results":"141","hashOfConfig":"99"},{"size":1981,"mtime":1610256573965,"results":"142","hashOfConfig":"99"},{"size":792,"mtime":1610256573952,"results":"143","hashOfConfig":"99"},{"size":540,"mtime":1609521772391,"results":"144","hashOfConfig":"99"},{"size":1041,"mtime":1609681136841,"results":"145","hashOfConfig":"99"},{"size":6484,"mtime":1610256573968,"results":"146","hashOfConfig":"99"},{"size":618,"mtime":1610256573956,"results":"147","hashOfConfig":"99"},{"size":1835,"mtime":1610278890902,"results":"148","hashOfConfig":"99"},{"size":1595,"mtime":1610256573955,"results":"149","hashOfConfig":"99"},{"size":514,"mtime":1610256573954,"results":"150","hashOfConfig":"99"},{"size":725,"mtime":1610256573956,"results":"151","hashOfConfig":"99"},{"size":880,"mtime":1609694498470,"results":"152","hashOfConfig":"99"},{"size":392,"mtime":1609577892705,"results":"153","hashOfConfig":"99"},{"size":532,"mtime":1609577577841,"results":"154","hashOfConfig":"99"},{"size":394,"mtime":1609577980022,"results":"155","hashOfConfig":"99"},{"size":1276,"mtime":1609698176408,"results":"156","hashOfConfig":"99"},{"size":1059,"mtime":1609681122424,"results":"157","hashOfConfig":"99"},{"size":571,"mtime":1609578967462,"results":"158","hashOfConfig":"99"},{"size":1112,"mtime":1610279117717,"results":"159","hashOfConfig":"99"},{"size":432,"mtime":1609613562562,"results":"160","hashOfConfig":"99"},{"size":801,"mtime":1610256573958,"results":"161","hashOfConfig":"99"},{"size":77,"mtime":1610257823541,"results":"162","hashOfConfig":"99"},{"size":900,"mtime":1610256573947,"results":"163","hashOfConfig":"99"},{"size":17600,"mtime":1610257823547,"results":"164","hashOfConfig":"99"},{"size":1387,"mtime":1610257823549,"results":"165","hashOfConfig":"99"},{"size":3363,"mtime":1610257823542,"results":"166","hashOfConfig":"99"},{"size":6328,"mtime":1610256573951,"results":"167","hashOfConfig":"99"},{"size":8967,"mtime":1610256573960,"results":"168","hashOfConfig":"99"},{"size":2679,"mtime":1610276188673,"results":"169","hashOfConfig":"99"},{"size":582,"mtime":1610256573937,"results":"170","hashOfConfig":"99"},{"size":1105,"mtime":1610257823546,"results":"171","hashOfConfig":"99"},{"size":2549,"mtime":1610257823541,"results":"172","hashOfConfig":"99"},{"size":806,"mtime":1610256573948,"results":"173","hashOfConfig":"99"},{"size":333,"mtime":1610256573949,"results":"174","hashOfConfig":"99"},{"size":357,"mtime":1610256573949,"results":"175","hashOfConfig":"99"},{"size":706,"mtime":1610257823550,"results":"176","hashOfConfig":"99"},{"size":439,"mtime":1610256573950,"results":"177","hashOfConfig":"99"},{"size":601,"mtime":1610256573949,"results":"178","hashOfConfig":"99"},{"size":2629,"mtime":1610257823548,"results":"179","hashOfConfig":"99"},{"size":1064,"mtime":1610257823547,"results":"180","hashOfConfig":"99"},{"size":697,"mtime":1610257823542,"results":"181","hashOfConfig":"99"},{"size":1191,"mtime":1610256573946,"results":"182","hashOfConfig":"99"},{"size":879,"mtime":1610256573944,"results":"183","hashOfConfig":"99"},{"size":5194,"mtime":1610256573944,"results":"184","hashOfConfig":"99"},{"size":752,"mtime":1610256573940,"results":"185","hashOfConfig":"99"},{"size":2784,"mtime":1610257823559,"results":"186","hashOfConfig":"99"},{"size":2341,"mtime":1610257823543,"results":"187","hashOfConfig":"99"},{"size":17561,"mtime":1610257823544,"results":"188","hashOfConfig":"99"},{"size":507,"mtime":1610257823555,"results":"189","hashOfConfig":"99"},{"size":549,"mtime":1610257823544,"results":"190","hashOfConfig":"99"},{"size":465,"mtime":1610256573937,"results":"191","hashOfConfig":"99"},{"size":2788,"mtime":1610257823543,"results":"192","hashOfConfig":"99"},{"size":1082,"mtime":1610257823545,"results":"193","hashOfConfig":"99"},{"size":978,"mtime":1610257823545,"results":"194","hashOfConfig":"99"},{"size":531,"mtime":1610257823545,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"1rrwt6t",{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"198"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"198"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"198"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"198"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"198"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"198"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"198"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"198"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"198"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"198"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"198"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"198"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"198"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"198"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"198"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"198"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"198"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"198"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"198"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"198"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"198"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"198"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/index.js",[],["413","414"],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/App.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_reducers/index.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/hoc/auth.js",["415","416"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nexport default function(SpecificComponent,option,adminRoute=null){\n\n    // null => 아무나 출입이 가능한 페이지\n    // true => 로그인한 유저만 출입이 가능한 페이지\n    // false => 로그인한 유저는 출입 불가능한 페이지\n\n    function AuthenticationCheck(props){\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n        if(window.localStorage.getItem('isAuth')===null){\n            window.localStorage.setItem('isAuth','false');\n        }\n        \n\n        useEffect(()=>{\n        \n            dispatch(()=>{\n                console.log(window.localStorage.getItem('isAuth'));\n                    //로그인 하지 않은 상태\n                    if(window.localStorage.getItem('isAuth')==='false'){\n                            props.history.push('/login');\n                    }else{\n                        //로그인 한 상태\n                        if(adminRoute && window.localStorage.getItem('isAuth')==='true'){\n                            props.history.push('/');\n                        }else{\n                            if(option===false){\n                                props.history.push('/');\n                            }\n                        }\n                    }\n                    \n            })\n\n        },[])\n        \n        return(\n            <SpecificComponent {...props} user={user}/>\n        )\n\n    }\n\n    return AuthenticationCheck;\n\n}","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/StartLoading.js",["417"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport ContentComponent from \"./ContentComponent\";\nimport BlankTop from '../common/BlankTop';\nimport LoadingComponent from '../common/LoadingComponent';\nimport UnderLineWrap from '../common/UnderLineWrap';\nimport Bg1 from '../../assets/images/start_background1.png';\nimport Bg2 from '../../assets/images/all_background2.png';\nimport logo1 from '../../assets/images/image_watermark.png';\n\n\nconst Background = styled.div`\n    width:100vw;\n    height:1000vh;\n    background-repeat: no-repeat;\n    background-position: center top;\n    background-color: rgba( 12, 26, 34, 1);\n    background-size:contain;\n    @media  (max-width:768px) {\n  background-image: url(${Bg2});\n    }\n    @media (min-width: 768px) {\n      background-image: url(${Bg1});\n    }\n`;\n\n\nconst Wrapper=styled.div`\n position: absolute;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    margin-top:15%;\n      width:100%auto;\n    }\n\n    @media (min-width: 1024px) { //desktop\n      margin-top:15%;\n      width:100%auto;\n    }\n    @media (max-width: 767px) { //iphone\n      width:100%auto;\n        margin-top:30%;\n  }\n\n`;\n\n\nconst MyIcon = styled.img`\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    width:300px;\n    }\n\n    @media (min-width: 1024px) { //desktop\n    }\n    @media (max-width: 767px) { //iphone\n      width:150px;\n  }\n`;\n\nMyIcon.defaultProps = {\n  src: logo1,\n};\n\nconst StartLoading = () => {\n\n    return(\n        <div>\n          <Background>\n            <Wrapper>\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\n                <ContentComponent title=\"소리로 하는 모든 즐거움\" />\n                <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\n                <MyIcon></MyIcon>\n            <BlankTop DesktopMargin='3' TabletMargin='2' MobileMargin='2' />\n            <LoadingComponent></LoadingComponent>\n            <BlankTop DesktopMargin='5' TabletMargin='2' MobileMargin='2' />\n            <ContentComponent title=\"오늘밤 사픽 주인공은 나야나~ 나야나~ \" />\n            <div></div>\n            \n            </Wrapper>\n            </Background>\n        </div>\n    );\n\n};\nexport default StartLoading;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/testedit/TestEditPage.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/testmaking/TestMakingPage.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/main/MainPage.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/MyPage.js",["418","419","420"],"import React from \"react\";\nimport { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from \"styled-components\";\nimport BlankTop from '../../components/common/BlankTop';\nimport UnderLineWrap from '../../components/common/UnderLineWrap';\nimport TextComponent from '../../components/common/TextComponent';\nimport Button from './Button';\nimport BoldTextComponent from '../../components/common/BoldTextComponent';\nimport Bg1 from '../../assets/images/mypage_background1.png';\nimport Bg2 from '../../assets/images/mypage_background2.png';\nimport logo1 from '../../assets/images/image_watermark.png';\nimport MyPageButton from \"./MyPageButton\";\nimport {auth, changeName,changePassword} from \"../../_actions/user_action\";\nimport { Input } from 'antd';\n\n\nconst Background = styled.div`\n    width:100vw;\n    height:200vh;\n    background-repeat: no-repeat;\n    background-position: center top;\n    background-color: rgba( 12, 26, 34, 1);\n    background-size:contain;\n    @media  (max-width:768px) {\n    background-image: url(${Bg2});\n    }\n    @media (min-width: 768px) {\n      background-image: url(${Bg1});\n    }\n`;\n\n\nconst Wrapper=styled.div`\n position: absolute;\n  width: 100%;\n  height: 200%;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  \n\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    margin-top:3%;\n      width:100%auto;\n    }\n\n    @media (min-width: 1024px) { //desktop\n      margin-top:3%;\n      width:100%auto;\n    }\n    @media (max-width: 767px) { //iphone\n      width:100%auto;\n        margin-top:3%;\n  }\n\n`;\n\nconst Content=styled.div`\n    display: flex;\n  flex-direction: row;\n  width: 70%;\n  justify-content: space-between;\n  `\n\nconst Detail=styled.div`\n    display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n`\n\nconst MyIcon = styled.img`\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    width:221px;\n    }\n\n    @media (min-width: 1024px) { //desktop\n    width:297px;\n    }\n    @media (max-width: 767px) { //iphone\n      width:150px;\n  }\n`;\n\nMyIcon.defaultProps = {\n  src: logo1,\n};\n\n\n\n\nfunction MyPage({props}) {\n\n  const [myState, setMyState] =useState({status: 'idle', member:null});\n  const dispatch = useDispatch();\n  const nameInput = useRef();\n  const passwordInput = useRef();\n  useEffect(()=>{\n    dispatch(()=>{\n      dispatch(auth()).then(response => {\n        setMyState({status:'pending'});\n        const data=response.payload.data;\n        setTimeout(() => setMyState({ status: 'resolved' , member:data}), 600);\n         })});\n\n\n    (async()=>{\n      try{\n        //setMyState({status:'pending'});\n        //const result=await auth().payload;\n        //console.log(result);\n       // setTimeout(() => setMyState({ status: 'resolved' , member:data}), 600);\n      }catch(e){\n       // setMyState({status:'rejected', member:null});\n      }\n    })();\n  },[]);\n\n  const onChangeInputs = async (evt) => {\n    const { name, value } = evt.target;\n    try {\n        await changeName( {\n            ...myState.member,\n            [name]: value,\n        });\n        setMyState({\n            status: 'resolved',\n            member: {\n                ...myState.member,\n                [name]: value,\n            }\n        });\n    } catch (e) {\n        console.error(e);\n    }\n};\n\nconst onChangePassword = async (evt) => {\n  const { name, value } = evt.target;\n  try {\n      await changePassword( {\n          ...myState.member,\n          [name]: value,\n      });\n      setMyState({\n          status: 'resolved',\n          member: {\n              ...myState.member,\n              [name]: value,\n          }\n      });\n  } catch (e) {\n      console.error(e);\n  }\n};\n\n\n\n\n\nswitch (myState.status) {\n  case 'pending':\n      return <h1></h1>;\n  case 'resolved':\n      return (\n        <Background>\n            <Wrapper>\n                <MyIcon></MyIcon>\n                <BlankTop DesktopMargin='3' TabletMargin='3' MobileMargin='3' />\n                <TextComponent title=\"마이페이지\"  DesktopLength='20' TabletLength='15' MobileLength='10'/>  \n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\n                <Content><BoldTextComponent title=\"개인정보 수정\"  DesktopLength='25' TabletLength='20' MobileLength='15'/></Content>\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\n                <Content>\n                <Input  style={{ color: 'white'  }} ref={nameInput} bordered={false} name=\"nickname\" value={myState.member.nickname} onChange={onChangeInputs}/>\n                <Button font='12' onClick = {() => {nameInput.current.focus(); console.log(\"click\"); }} >닉네임 변경</Button>\n                </Content>\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\n                <Content>\n                <Input  style={{ color: 'white'  }} bordered={false} name=\"nickname\" value={myState.member.email} disabled={true}/>\n                <Button font='12' color='gray'>이메일 변경불가</Button>\n                </Content>\n                <BlankTop DesktopMargin='5' TabletMargin='5' MobileMargin='5' />\n                <Content>\n                <Input placeholder='******'\n                style={{ color: 'white'  }} ref={passwordInput} bordered={false} name=\"password\" onChange={onChangePassword}/>\n               <Button font='12' onClick = {() => {passwordInput.current.focus(); console.log(\"click\"); }} >비밀번호 변경</Button>\n                </Content>\n                <BlankTop DesktopMargin='8' TabletMargin='5' MobileMargin='5' />\n                <Content><BoldTextComponent title=\"마이테스트 수정\"  DesktopLength='25' TabletLength='20' MobileLength='15'/></Content>\n                <BlankTop DesktopMargin='7' TabletMargin='3' MobileMargin='3' />\n            \n                  {myState.member.Tests && myState?.member?.Tests.map((member,i)=>\n                  <div>\n                  <Detail>\n                  <BoldTextComponent title={member.title}  DesktopLength='15' TabletLength='10' MobileLength='10'/>\n                  <MyPageButton />  </Detail>  \n                  <Detail>\n                  <TextComponent title={member.description}  DesktopLength='10' TabletLength='10' MobileLength='10'/>\n                    </Detail> <BlankTop DesktopMargin='2' TabletMargin='2' MobileMargin='2' />\n                    <UnderLineWrap  DesktopLength='130'BetweenLength='95' TabletLength='70' MobileLength='45' ></UnderLineWrap>\n                    <BlankTop DesktopMargin='4' TabletMargin='2' MobileMargin='2' /> </div>\n                  )}\n               \n              \n                </Wrapper></Background> \n       \n\n      );\n  case 'rejected':\n      return <h1>해당 멤버가 없습니다</h1>;\n  case 'idle':\n  default: \n      return <div></div>\n}\n\n};\nexport default MyPage;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/test_end/TestEndPage.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/QuizLoading.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/RegisterPage.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/test/TestPage.js",["421"],"import BlankTop from '../../components/common/BlankTop'\nimport TestCdWrapperContainer from '../../containers/test/TestCd/TestCdWrapperContainer'\nimport TestWrapperContainer from '../../containers/test/TestWrapperContainer'\n\nconst TestPage = ({ match }) => {\n  // state\n  return (\n    <>\n      <TestWrapperContainer>\n        <TestCdWrapperContainer match={match} />\n      </TestWrapperContainer>\n    </>\n  )\n}\n\nexport default TestPage\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/LoginPage.js",["422","423","424"],"import React, { useState } from \"react\";\nimport { withRouter,Link } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_action\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form,  Button,  } from 'antd';\nimport {UserOutlined,LockOutlined} from '@ant-design/icons';\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\"\nimport TextComponent from '../../../components/common/TextComponent';\nimport BlankTop from '../../../components/common/BlankTop';\nimport UnderLineComponent from './UnderLineComponent';\nimport Bg1 from '../../../assets/images/login_background1.png';\nimport Bg2 from '../../../assets/images/login_background2.png';\nimport Bg3 from '../../../assets/images/login_background3.png';\nimport logo1 from '../../../assets/images/image_watermark.png';\nimport Text from './Text';\nimport ColorButton from './ColorButton';\n\nconst Background = styled.div`\n    width:100vw;\n    height:1000vh;\n    background-repeat: no-repeat;\n    background-position: center top;\n    background-color:  rgba( 12, 26, 34, 1);\n    background-size:contain;\n    @media (min-width: 768px) and (max-width:1024px){\n      background-image: url(${Bg2});\n    }\n @media  (min-width:1024px) {\n  background-image: url(${Bg1});\n    }\n    @media (max-width: 768px) {\n      background-image: url(${Bg3});\n    }\n`;\nconst Wrapper=styled.div`\n position: absolute;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    margin-top:50%;\n      width:100%auto;\n    }\n\n    @media (min-width: 1024px) { //desktop \n      margin-top:17%;\n      width:100%auto;\n    }\n    @media (max-width: 767px) { //iphone\n      width:100%auto;\n        margin-top:30%;\n  }` \n\n\nconst MyIcon = styled.img`\n  @media (min-width: 768px) and (max-width:1024px) { //between\n    width:180px;\n    }\n\n    @media (min-width: 1024px) { //desktop\n    width:221px;\n    }\n    @media (max-width: 767px) { //iphone\n      width:300px;\n  }\n`;\n\nMyIcon.defaultProps = {\n  src: logo1,\n};\n\nconst Input =styled.input`\nbackground-color:  rgba( 12, 26, 34, 0);\nborder-radius:0px;\nborder-color:rgba( 12, 26, 34, 0);\nwidth: 400px;\ncolor:white;\noutline:none;\n@media (max-width: 767px) { //iphone\n      width:200px;\n  }\n`\n\nconst Content=styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  @media (max-width: 767px) { //iphone\n    margin-left:20%;\n  }\n`\n\n\nfunction LoginPage(props) {\n  \n  const dispatch = useDispatch();\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n\n  const goToMain = () => {\n    props.history.push('/register');}\n\n  return (\n    <Background><Wrapper>\n       <MyIcon></MyIcon>\n  <BlankTop DesktopMargin='3' TabletMargin='3' MobileMargin='3' />\n  <TextComponent title=\"로그인\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \n  <BlankTop DesktopMargin='5' TabletMargin='3' MobileMargin='5' />\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.success) {\n                window.localStorage.setItem('isAuth','true');\n                window.localStorage.setItem('jwt',response.payload.data.accessToken);\n                props.history.push(\"/mypage\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again');\n                window.localStorage.setItem('isAuth','false');\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          \n\n            <form onSubmit={handleSubmit} style={{ minWidth: '100px' }}>\n\n              <Form.Item required>\n              <Content>\n              <Text title=\"아이디&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  \n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                \n                 </Content>\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='30' />\n              </Form.Item>\n\n              <Form.Item required>\n              <Content>\n              <Text title=\"패스워드&nbsp; &nbsp;\"  DesktopLength='15' TabletLength='15' MobileLength='15'/> \n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                </Content>\n                <UnderLineComponent DesktopLength='45' BetweenLength='45' TabletLength='45' MobileLength='30' />\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <div>\n                <ColorButton font='12' border=\"#60FFDA\" color=\"#ffffff\"  ><Button onClick={goToMain} ghost='true' type='text'  style={{ minWidth: '100%' }} >\n                <p style={{ color: '#ffffff'}}>&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;회원가입&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;</p>\n                </Button></ColorButton>\n\n                <ColorButton font='12' background=\"#60FFDA\" color=\"#000000\" border=\"#60FFDA\"  ><Button ghost='true' type='text' htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; 로그인&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\n                </Button></ColorButton>\n                </div>\n              </Form.Item>\n            </form>\n        );\n      }}\n    </Formik> </Wrapper></Background>\n  );\n};\n\nexport default withRouter(LoginPage);","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_reducers/user_reducer.js",["425","426","427","428"],"import{LOGIN_USER,REGISTER_USER, AUTH_USER, LOGOUT_USER,} from '../_actions/types'\n\n\nexport default function (state={},action){\n    switch (action.type){\n        case LOGIN_USER:\n                return {...state,loginSuccess:action.payload};\n            break;\n        case REGISTER_USER:\n                return {...state,register:action.payload};\n            break;\n            case AUTH_USER:\n                return {...state,userData:action.payload};\n            break; \n            case LOGOUT_USER:\n                return {...state }       \n        \n        default:\n            return state;\n\n        \n    }\n}","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/ContentComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/MyPageButton.js",["429"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../components/common/Button\";\n\n\n\nconst MyPageButton = () => { \n\n\n    return(\n        <div>\n        <Button font='12' >수정</Button>\n        <Button font='12' >삭제</Button>\n        <Button font='12' color=\"#60FFDA\" border=\"#60FFDA\"> 플레이</Button>\n        </div>\n\n    );\n\n};\nexport default MyPageButton;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/loading/TitleComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/LoadingComponent.js",["430"],"import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst CircleBorder = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 50%;\n  background: linear-gradient( rgba(96,255,205,1) ,rgba(96,255,205,0.2) ,rgba(96,255,205,0.01) );\n  box-shadow:  5px 0px 20px -5px  rgba(96,255,205,0.5);\n  animation: spin .8s linear 0s infinite;\n\n  @media  (max-width:1024px) { \n    width: 30px;\n  height: 30px;\n  padding: 4px;\n    }\n    \n    @media (min-width: 1024px) {\n      width: 65px;\n     height: 65px;\n     padding: 7px;\n    }\n`;\n\n\nconst CircleCore =styled.div`\n width: 100%;\n  height: 100%;\n  background-color: rgba(12,28,48,1);\n  border-radius: 50%;\n`;\n\nconst SpinnerBox = styled.div`\n@keyframes spin {\n  from {\n    transform: rotate(359deg);\n  }\n  to{\n    transform: rotate(0);\n  }\n}\n* {\n  box-sizing: border-box;\n}\n`;\n\nconst LoadingComponent = ({}) => {\n    return(\n   \n        <SpinnerBox>\n        <CircleBorder>\n            <CircleCore></CircleCore>\n        </CircleBorder>\n    </SpinnerBox>\n\n    );\n\n};\nexport default LoadingComponent;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/BlankTop.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/BoldTextComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/TextComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/UnderLineWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TMBackground.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TMInner.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Header.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/mypage/Button.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/UnderLineComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/ColorButton.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/RegisterPage/Text.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/ColorButton.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/Text.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/views/LoginPage/UnderLineComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testedit/form/TestEditFormContainer.js",["431","432","433","434"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport BlankTop from \"../../../components/common/BlankTop\";\nimport LoadingComponent from \"../../../components/common/LoadingComponent\";\nimport TextComponent from \"../../../components/common/TextComponent\";\nimport TopInput from \"../../../components/testmaking/Input/TopInput\";\nimport TopInputText from \"../../../components/testmaking/Input/TopInputText\";\nimport TopInputWrap from \"../../../components/testmaking/Input/TopInputWrap\";\nimport InputsWrap from \"../../../components/testmaking/questionlist/input/InputsWrap\";\nimport PlayerWrap from \"../../../components/testmaking/questionlist/player/PlayerWrap\";\nimport TopInner from \"../../../components/testmaking/TopInner\";\nimport InputCategoryContainer from \"../../testmaking/InputCategoryContainer\";\nimport PlayerContainer from \"../../testmaking/player/PlayerContainer\";\nimport StartTimeContainer from \"../../testmaking/player/StartTimeContainer\";\nimport QuestionListLeftWrap from \"../../../components/testmaking/questionlist/input/QustionListInputLeftWrap\";\nimport QuestionListRightWrap from \"../../../components/testmaking/questionlist/input/QustionListInputRightWrap\";\nimport QuestionListInputWrap from \"../../../components/testmaking/questionlist/input/QustionListInputWrap\";\nimport QuestionListInputText from \"../../../components/testmaking/questionlist/input/QustionListInputText\";\nimport QuestionListInput from \"../../../components/testmaking/questionlist/input/QustionListInput\";\nimport QuestionListHintWrap from \"../../../components/testmaking/questionlist/input/QustionListHintWrap\";\nimport QuestionListYoutubeInput from \"../../../components/testmaking/questionlist/input/QusitonListYoutubeInput\";\nimport QuestionLustPlusButton from \"../../../components/testmaking/questionlist/QuestionListPlusButton\";\nimport QuestionSaveButton from \"../../../components/testmaking/questionlist/QuestionListSaveButton\";\nimport QuestionListHeader from \"../../../components/testmaking/questionlist/QuestionListHeader\";\nimport QuestionListInner from \"../../../components/testmaking/questionlist/QuestionListInner\";\nimport QuestionListTitle from \"../../../components/testmaking/questionlist/QuestionListTitle\";\n\nexport let player0;\nexport let player1;\nexport let player2;\nexport let player3;\nexport let player4;\nexport let player5;\nexport let player6;\nexport let player7;\nexport let player8;\nexport let player9;\nexport let send=true ;\nexport let viewLoadingCount = 0;\n\nconst TestEditFormContainer = ({history,match}) => {\n    const jwt = window.localStorage.getItem('jwt');\n    let checkCurrentTime0;\n    let checkCurrentTime1;\n    let checkCurrentTime2;\n    let checkCurrentTime3;\n    let checkCurrentTime4;\n    let checkCurrentTime5;\n    let checkCurrentTime6;\n    let checkCurrentTime7;\n    let checkCurrentTime8;\n    let checkCurrentTime9;\n\n    const [testTitle,setTestTitle] = useState('');\n    const [testDescription,setTestDescription] = useState('');\n    const [testCategory,setTestCategory] = useState('');\n\n    const [questions,setQuestions] = useState([{\n        questionNumber : 1,\n        questionYoutubeURL : \"\",\n        questionStartsfrom : \"\",\n        hint : \"\",\n        answer: \"\",\n        answerYoutubeURL: \"\",\n    }]);\n    const [viewLoading,setViewLoading] = useState(false);\n    const [timer, setTimer] = useState(0);\n\n    const [isPlaying0, setPlaying0] = useState(false);\n    const [isLoading0, setLoading0] = useState(false);\n    const [currentTime0, setCurrentTime0] = useState(\"00:00\");\n    const [totalTime0, setTotalTime0] = useState(\"00:00\");\n\n    const [isPlaying1, setPlaying1] = useState(false);\n    const [isLoading1, setLoading1] = useState(false);\n    const [currentTime1, setCurrentTime1] = useState(\"00:00\");\n    const [totalTime1, setTotalTime1] = useState(\"00:00\");\n\n    const [isPlaying2, setPlaying2] = useState(false);\n    const [isLoading2, setLoading2] = useState(false);\n    const [currentTime2, setCurrentTime2] = useState(\"00:00\");\n    const [totalTime2, setTotalTime2] = useState(\"00:00\");\n\n    const [isPlaying3, setPlaying3] = useState(false);\n    const [isLoading3, setLoading3] = useState(false);\n    const [currentTime3, setCurrentTime3] = useState(\"00:00\");\n    const [totalTime3, setTotalTime3] = useState(\"00:00\");\n\n    const [isPlaying4, setPlaying4] = useState(false);\n    const [isLoading4, setLoading4] = useState(false);\n    const [currentTime4, setCurrentTime4] = useState(\"00:00\");\n    const [totalTime4, setTotalTime4] = useState(\"00:00\");\n\n    const [isPlaying5, setPlaying5] = useState(false);\n    const [isLoading5, setLoading5] = useState(false);\n    const [currentTime5, setCurrentTime5] = useState(\"00:00\");\n    const [totalTime5, setTotalTime5] = useState(\"00:00\");\n\n    const [isPlaying6, setPlaying6] = useState(false);\n    const [isLoading6, setLoading6] = useState(false);\n    const [currentTime6, setCurrentTime6] = useState(\"00:00\");\n    const [totalTime6, setTotalTime6] = useState(\"00:00\");\n\n    const [isPlaying7, setPlaying7] = useState(false);\n    const [isLoading7, setLoading7] = useState(false);\n    const [currentTime7, setCurrentTime7] = useState(\"00:00\");\n    const [totalTime7, setTotalTime7] = useState(\"00:00\");\n\n    const [isPlaying8, setPlaying8] = useState(false);\n    const [isLoading8, setLoading8] = useState(false);\n    const [currentTime8, setCurrentTime8] = useState(\"00:00\");\n    const [totalTime8, setTotalTime8] = useState(\"00:00\");\n\n    const [isPlaying9, setPlaying9] = useState(false);\n    const [isLoading9, setLoading9] = useState(false);\n    const [currentTime9, setCurrentTime9] = useState(\"00:00\");\n    const [totalTime9, setTotalTime9] = useState(\"00:00\");\n\n    const changeTitle = e => {\n      const {target: {value}} = e;\n      setTestTitle(value);\n    }\n    const changeDescription = e => {\n      const {target: {value}} = e;\n      setTestDescription(value);\n    }\n\n    const changeCategory = e => {\n      setTestCategory(e);\n    }\n\n    const changeText = questionNumber => e => {\n        const { target: { value } } = e;\n        const { target: { name } } = e;\n        const tempsQustios = questions.map(question => {\n            if( question.questionNumber === questionNumber+1 ){\n                question[name] = value;\n            }\n\n            return question;\n\n        });\n\n        setQuestions(tempsQustios);\n\n    }\n\n    const changeStartTime = questionNumber => e => {\n        const tempsQustios = questions.map(question => {\n            if( question.questionNumber === questionNumber+1 ){\n                question[\"questionStartsfrom\"] = e;\n            }\n\n            return question;\n\n        });\n\n        setQuestions(tempsQustios);\n    }\n\n    \n\n    const addQuestions = () => {\n        if(questions.length === 10) return\n        let data = {\n            questionNumber : questions.length +1,\n            questionYoutubeURL : \"\",\n            questionStartsfrom : \"\",\n            hint : \"\",\n            answer: \"\",\n            answerYoutubeURL: \"\"\n\n        };\n\n        setQuestions([...questions, data]);\n    }\n\n    const deleteQuestions = questionNumber => () => {\n        let tempQuestions = questions.filter(question => {\n            return question.questionNumber !== questionNumber + 1;\n        })\n        let i = 1;\n        const reTempQuestions = tempQuestions.map(question => {\n            question.questionNumber = i;\n            i++;\n            return question;\n        })\n\n        setQuestions(reTempQuestions);\n    }\n\n    const getYoutubeId = questionNumber => e => {\n        const { target: { value } } = e;\n        const { target: { name } } = e;\n        if(value)  {\n            const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n            const matchs = value.match(regExp);\n            if(value!==''&&matchs&&matchs[7].length===11){\n\n                const tempsQustios = questions.map(question => {\n                    if( question.questionNumber === questionNumber+1 ){\n                        question[name] = matchs[7];\n                    }\n        \n                    return question;\n        \n                });  \n                setQuestions(tempsQustios);\n            }else{\n                const tempsQustios = questions.map(question => {\n                    if( question.questionNumber === questionNumber+1 ){\n                        question[name] = \"\";\n                    }\n        \n                    return question;\n        \n                });  \n                setQuestions(tempsQustios);\n            }\n        }else{\n          const tempsQustios = questions.map(question => {\n            if( question.questionNumber === questionNumber+1 ){\n                question[name] = \"\";\n            }\n\n            return question;\n\n        });  \n        setQuestions(tempsQustios);\n        }\n        \n    }\n\n  const playerState0 = (e) => {\n    if (e.data === 1) {\n      setPlaying0(true);\n    } else if (e.data === 2) {\n      setPlaying0(false);\n    }\n  };\n  const playerState1 = (e) => {\n    if (e.data === 1) {\n      setPlaying1(true);\n    } else if (e.data === 2) {\n      setPlaying1(false);\n    }\n  };\n  const playerState2 = (e) => {\n    if (e.data === 1) {\n      setPlaying2(true);\n    } else if (e.data === 2) {\n      setPlaying2(false);\n    }\n  };\n  const playerState3 = (e) => {\n    if (e.data === 1) {\n      setPlaying3(true);\n    } else if (e.data === 2) {\n      setPlaying3(false);\n    }\n  };\n  const playerState4 = (e) => {\n    if (e.data === 1) {\n      setPlaying4(true);\n    } else if (e.data === 2) {\n      setPlaying4(false);\n    }\n  };\n  const playerState5 = (e) => {\n    if (e.data === 1) {\n      setPlaying5(true);\n    } else if (e.data === 2) {\n      setPlaying5(false);\n    }\n  };\n  const playerState6 = (e) => {\n    if (e.data === 1) {\n      setPlaying6(true);\n    } else if (e.data === 2) {\n      setPlaying6(false);\n    }\n  };\n  const playerState7 = (e) => {\n    if (e.data === 1) {\n      setPlaying7(true);\n    } else if (e.data === 2) {\n      setPlaying7(false);\n    }\n  };\n  const playerState8 = (e) => {\n    if (e.data === 1) {\n      setPlaying8(true);\n    } else if (e.data === 2) {\n      setPlaying8(false);\n    }\n  };\n  const playerState9 = (e) => {\n    if (e.data === 1) {\n      setPlaying9(true);\n    } else if (e.data === 2) {\n      setPlaying9(false);\n    }\n  };\n\n  const transTime = (seconds) => {\n    if (!seconds) {      return;\n    }\n    const hour = parseInt(seconds / 3600);\n    const min = parseInt((seconds % 3600) / 60);\n    const sec = seconds % 60;\n\n    return `${hour > 0 ? String(hour) + \":\" : \"\"} ${min}:${\n      sec < 10 ? \"0\" + String(sec) : sec\n    }`;\n  };\n  const onSubmitHandler = (e) =>{\n    e.preventDefault();\n\n    const variable ={\n        title: testTitle,\n        description: testDescription,\n        CategoryId: testCategory,\n        questions: questions,\n\n    }\n    const config = {\n      headers : {\"jwt\":jwt}\n  }\n  if(testTitle.length !== 0 && testDescription.length !== 0 && testCategory.length !== 0){\n    for(let i = 0; i < questions.length; i++ ){\n      if(questions[i].questionYoutubeURL.length === 0 ||questions[i].questionStartsfrom.length === 0 ||questions[i].hint.length === 0 ||\n      questions[i].answer.length === 0 ||questions[i].answerYoutubeURL.length === 0){\n        send = false;\n      }\n    }\n    if(send===true){\n        if (timer) {\n            console.log('clear timer');\n            clearTimeout(timer);\n        }\n        const newTimer = setTimeout(async () => {\n            try {\n                axios.put(`http://3.35.187.65:3000/test/${match.params.id}`,variable,config)\n                .then(response=> {\n                    if(response.data.success){\n                      history.push(\"/\");\n                    }\n                })\n            } catch (e) {\n              console.error('error', e);\n            }\n          }, 5000);\n          setTimer(newTimer);\n\n    }\n\n  }\n\n}\n\n  const setTime0 = () => {\n    setCurrentTime0(transTime(player0.getCurrentTime().toFixed()));\n  };\n  const setTime1 = () => {\n    setCurrentTime1(transTime(player1.getCurrentTime().toFixed()));\n  };\n  const setTime2 = () => {\n    setCurrentTime2(transTime(player2.getCurrentTime().toFixed()));\n  };\n  const setTime3 = () => {\n    setCurrentTime3(transTime(player3.getCurrentTime().toFixed()));\n  };\n  const setTime4 = () => {\n    setCurrentTime4(transTime(player4.getCurrentTime().toFixed()));\n  };\n  const setTime5 = () => {\n    setCurrentTime5(transTime(player5.getCurrentTime().toFixed()));\n  };\n  const setTime6 = () => {\n    setCurrentTime6(transTime(player6.getCurrentTime().toFixed()));\n  };\n  const setTime7 = () => {\n    setCurrentTime7(transTime(player7.getCurrentTime().toFixed()));\n  };\n  const setTime8 = () => {\n    setCurrentTime8(transTime(player8.getCurrentTime().toFixed()));\n  };\n  const setTime9 = () => {\n    setCurrentTime9(transTime(player9.getCurrentTime().toFixed()));\n  };\n\n  const onReadyAPI0 = () => {\n      setLoading0(true);\n      setPlaying0(false);\n      checkCurrentTime0 = setInterval(setTime0, 1000);\n      setTotalTime0(player0.getDuration());\n\n  };\n  const onReadyAPI1 = () => {\n    setLoading1(true);\n    setPlaying1(false);\n    checkCurrentTime1 = setInterval(setTime1, 1000);\n    setTotalTime1(player1.getDuration());\n  };\n  const onReadyAPI2 = () => {\n    setLoading2(true);\n    setPlaying2(false);\n    checkCurrentTime2 = setInterval(setTime2, 1000);\n    setTotalTime2(player2.getDuration());\n  };\n  const onReadyAPI3 = () => {\n    setLoading3(true);\n    setPlaying3(false);\n    checkCurrentTime3 = setInterval(setTime3, 1000);\n    setTotalTime3(player3.getDuration());\n  };\n  const onReadyAPI4 = () => {\n    setLoading4(true);\n    setPlaying4(false);\n    checkCurrentTime4 = setInterval(setTime4, 1000);\n    setTotalTime4(player4.getDuration());\n  };\n  const onReadyAPI5 = () => {\n    setLoading5(true);\n    setPlaying5(false);\n    checkCurrentTime5 = setInterval(setTime5, 1000);\n    setTotalTime5(player5.getDuration());\n  };\n  const onReadyAPI6 = () => {\n    setLoading6(true);\n    setPlaying6(false);\n    checkCurrentTime6 = setInterval(setTime6, 1000);\n    setTotalTime6(player6.getDuration());\n  };\n  const onReadyAPI7 = () => {\n    setLoading7(true);\n    setPlaying7(false);\n    checkCurrentTime7 = setInterval(setTime7, 1000);\n    setTotalTime7(player7.getDuration());\n  };\n  const onReadyAPI8 = () => {\n    setLoading8(true);\n    setPlaying8(false);\n    checkCurrentTime8 = setInterval(setTime8, 1000);\n    setTotalTime8(player8.getDuration());\n  };\n  const onReadyAPI9 = () => {\n    setLoading9(true);\n    setPlaying9(false);\n    checkCurrentTime9 = setInterval(setTime9, 1000);\n    setTotalTime9(player9.getDuration());\n  };\n\n\n    const playHandler0 = () => {\n    setPlaying0(!isPlaying0);\n    } \n\n    const playHandler1 = () => {\n    setPlaying1(!isPlaying1);\n    } \n    const playHandler2 = () => {\n    setPlaying2(!isPlaying2);\n    } \n    const playHandler3 = () => {\n        setPlaying3(!isPlaying3);\n    } \n    const playHandler4 = () => {\n        setPlaying4(!isPlaying4);\n    } \n    const playHandler5 = () => {\n        setPlaying5(!isPlaying5);\n    } \n    const playHandler6 = () => {\n        setPlaying6(!isPlaying6);\n    } \n    const playHandler7 = () => {\n        setPlaying7(!isPlaying7);\n    } \n    const playHandler8 = () => {\n        setPlaying8(!isPlaying8);\n    } \n    const playHandler9 = () => {\n        setPlaying9(!isPlaying9);\n    } \n    \n\n    const backClick0 = () => {\n        if(isLoading0)player0.seekTo(player0.getCurrentTime() - 10, true)\n\n    }\n    const backClick1 = () => {\n        if(isLoading1)player1.seekTo(player1.getCurrentTime() - 10, true)\n\n    }\n    const backClick2 = () => {\n        if(isLoading2)player2.seekTo(player2.getCurrentTime() - 10, true)\n\n    }\n    const backClick3 = () => {\n        if(isLoading3)player3.seekTo(player3.getCurrentTime() - 10, true)\n\n    }\n    const backClick4 = () => {\n        if(isLoading4)player4.seekTo(player4.getCurrentTime() - 10, true)\n\n    }\n    const backClick5 = () => {\n        if(isLoading5)player5.seekTo(player5.getCurrentTime() - 10, true)\n\n    }\n    const backClick6 = () => {\n        if(isLoading6)player6.seekTo(player6.getCurrentTime() - 10, true)\n\n    }\n    const backClick7 = () => {\n        if(isLoading7)player7.seekTo(player7.getCurrentTime() - 10, true)\n\n    }\n    const backClick8 = () => {\n        if(isLoading8)player8.seekTo(player8.getCurrentTime() - 10, true)\n\n    }\n    const backClick9 = () => {\n        if(isLoading9)player9.seekTo(player9.getCurrentTime() - 10, true)\n\n    }\n\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n          firstScriptTag.parentNode.insertBefore(script, firstScriptTag);\n        \n        window.onYouTubeIframeAPIReady = () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          player0 = new window.YT.Player(`player0`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3001'\n            },\n            events: {\n              onReady: onReadyAPI0,\n              onStateChange: playerState0,\n            },\n          });\n          player1 = new window.YT.Player(`player1`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI1,\n              onStateChange: playerState1,\n            },\n          });\n          player2 = new window.YT.Player(`player2`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI2,\n              onStateChange: playerState2,\n            },\n          });\n          player3 = new window.YT.Player(`player3`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI3,\n              onStateChange: playerState3,\n            },\n          });\n          player4 = new window.YT.Player(`player4`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI4,\n              onStateChange: playerState4,\n            },\n          });\n          player5 = new window.YT.Player(`player5`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI5,\n              onStateChange: playerState5,\n            },\n          });\n          player6 = new window.YT.Player(`player6`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI6,\n              onStateChange: playerState6,\n            },\n          });\n          player7 = new window.YT.Player(`player7`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI7,\n              onStateChange: playerState7,\n            },\n          });\n          player8 = new window.YT.Player(`player8`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI8,\n              onStateChange: playerState8,\n            },\n          });\n          player9 = new window.YT.Player(`player9`, {\n            height: \"0\",\n            width: \"0\",\n            videoId: \"7y7roXhpK-8\",\n            host: 'https://www.youtube.com',\n            playerVars: {\n              autoplay: 0,\n              controls: 0,\n              fs: 0,\n              showinfo:0,\n              enablejsapi: 1,\n              origin:'http://localhost:3000'\n            },\n            events: {\n              onReady: onReadyAPI9,\n              onStateChange: playerState9,\n            },\n          });\n\n        }\n        return () => {\n          clearInterval(checkCurrentTime0);\n          clearInterval(checkCurrentTime1);\n          clearInterval(checkCurrentTime2);\n          clearInterval(checkCurrentTime3);\n          clearInterval(checkCurrentTime4);\n          clearInterval(checkCurrentTime5);\n          clearInterval(checkCurrentTime6);\n          clearInterval(checkCurrentTime7);\n          clearInterval(checkCurrentTime8);\n          clearInterval(checkCurrentTime9);\n        };\n        \n      }, []);\n      const getTestData = async id =>{\n          try{\n              await axios.get(`http://3.35.187.65:3000/test/${id}/updatepage`)\n              .then(response=> {\n                  if(response.data.success){\n                    setTestTitle(response.data.data.test.title);\n                    setTestDescription(response.data.data.test.description);\n                    setTestCategory(response.data.data.test.CategoryId)\n                    setQuestions(response.data.data.questions)\n                    setViewLoading(true)\n                    viewLoadingCount++;   \n                  }else{\n                    history.push(\"/\");\n                  }\n              })\n          }catch(e){\n\n          }\n      }\n\n      useEffect(()=>{\n        if(viewLoadingCount===0){\n          if(isLoading0&&\n            isLoading1&&\n            isLoading2&&\n            isLoading3&&\n            isLoading4&&\n            isLoading5&&\n            isLoading6&&\n            isLoading7&&\n            isLoading8&&\n            isLoading9){\n              setLoading0(false);\n              setLoading1(false);\n              setLoading2(false);\n              setLoading3(false);\n              setLoading4(false);\n              setLoading5(false);\n              setLoading6(false);\n              setLoading7(false);\n              setLoading8(false);\n              setLoading9(false);\n              getTestData(match.params.id)\n              }\n            }\n        },[isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9]);\n\n\n      if (isLoading0) {\n        if (isPlaying0) {\n          player0?.playVideo();\n        } else {\n          player0?.pauseVideo();\n        }\n      }\n\n      if (isLoading1) {    \n        if (isPlaying1) {\n          player1?.playVideo();\n\n        } else {\n          player1?.pauseVideo();\n        }\n      }\n\n      if (isLoading2) {\n          if (isPlaying2) {\n              player2?.playVideo();\n            } else {\n             player2?.pauseVideo();\n        }\n      }\n\n      if (isLoading3) {\n        if (isPlaying3) {\n            player3?.playVideo();\n          } else {\n           player3?.pauseVideo();\n      }\n    }\n    if (isLoading4) {\n        if (isPlaying4) {\n            player4?.playVideo();\n          } else {\n           player4?.pauseVideo();\n      }\n    }\n    if (isLoading5) {\n        if (isPlaying5) {\n            player5?.playVideo();\n          } else {\n           player5?.pauseVideo();\n      }\n    }\n    if (isLoading6) {\n        if (isPlaying6) {\n            player6?.playVideo();\n          } else {\n           player6?.pauseVideo();\n      }\n    }\n    if (isLoading7) {\n        if (isPlaying7) {\n            player7?.playVideo();\n          } else {\n           player7?.pauseVideo();\n      }\n    }\n    if (isLoading8) {\n        if (isPlaying8) {\n            player8?.playVideo();\n          } else {\n           player8?.pauseVideo();\n      }\n    }\n    if (isLoading8) {\n        if (isPlaying8) {\n            player8?.playVideo();\n          } else {\n           player8?.pauseVideo();\n      }\n    }\n\n    return(\n      !viewLoading ?  \n      <div style={{display:\"flex\", justifyContent:\"center\",alignItems:'center',flexDirection:\"column\"}}>\n         <LoadingComponent/>\n         <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\n         <TextComponent title={\"로딩중...\"} DesktopLength=\"14\" TabletLength=\"14\" MobileLength='14'/>\n      </div>\n       : \n      \n      <form method='post' onSubmit={onSubmitHandler} >\n            <TopInner>\n                <table></table>\n                <BlankTop DesktopMargin='3.6' TabletMargin='2' MobileMargin='2.6'/>\n                <TopInputWrap>\n                    <TopInputText text='제목'/>\n                    <TopInput inputName='title' inputPlaceholder='최대 20자' inputMaxLength='20' changeHandler={changeTitle} value={testTitle} />\n                </TopInputWrap>\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.4' MobileMargin='2.6'/>\n                <TopInputWrap>\n                    <TopInputText text='내용'/>\n                    <TopInput inputName='description' inputPlaceholder='최대 40자' inputMaxLength='40' changeHandler={changeDescription} value={testDescription}/>\n                </TopInputWrap>\n                <BlankTop DesktopMargin='3.6' TabletMargin='3.7' MobileMargin='2.6'/>\n                <TopInputWrap>\n                    <TopInputText text='카테고리'/>\n                    <InputCategoryContainer inputName='CategoryId' inputPlaceholder='오른쪽 화살표를 눌러 카테고리를 골라주세요' changeCategory={changeCategory} testCategory={testCategory}/>\n                </TopInputWrap>\n            </TopInner>\n            <BlankTop DesktopMargin='6.4' TabletMargin='8.7' MobileMargin ='6.2'/>\n            <QuestionListTitle/>\n\n            {questions.length !== 0 && (\n            <QuestionListInner>\n                {questions.map((d,i)=>(\n                 <div key={i}>\n                    <QuestionListHeader deleteQuestions={deleteQuestions(i)} i={i} />\n                    <InputsWrap >\n                        <QuestionListLeftWrap >\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='2.6'/>\n                            <QuestionListInputWrap>\n                                <QuestionListInputText text={i!==9?\"Qustion00\"+(i+1):\"Qustion010\"} />\n                                <QuestionListInput inputName='answer' inputPlaceholder='정답을 적어주세요'  changeText={changeText(i)} value={d.answer}/>\n                            </QuestionListInputWrap>\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\n                            <QuestionListHintWrap>\n                                <QuestionListInputText text='Hint' />\n                                <QuestionListInput inputName='hint' inputPlaceholder='힌트를 자유롭게 적어주세요'  changeText={changeText(i)} value={d.hint} />\n                            </QuestionListHintWrap>\n                        </QuestionListLeftWrap>\n\n                        <QuestionListRightWrap>\n\n                            <BlankTop DesktopMargin='1.9' TabletMargin='3.9' MobileMargin='2.6'/>\n                            <QuestionListInputWrap>\n                                <QuestionListInputText text='Youtube Link' />\n                                <QuestionListYoutubeInput inputName='questionYoutubeURL' inputPlaceholder='1초/3초간 나올 음악 주소를 넣어주세요'  getYoutubeId={getYoutubeId(i)} value={questions[i].questionYoutubeURL} />\n                            </QuestionListInputWrap>\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2' MobileMargin='1.6'/>\n\n                           {questions[i].questionYoutubeURL!==\"\"||questions[i].questionYoutubeURL ? \n                            <PlayerWrap>\n                               <PlayerContainer questionUrl={questions[i].questionYoutubeURL} \n                                                        player={\n                                                            i===0?player0:\n                                                            i===1?player1:\n                                                            i===2?player2:\n                                                            i===3?player3:\n                                                            i===4?player4:\n                                                            i===5?player5:\n                                                            i===6?player6:\n                                                            i===7?player7:\n                                                            i===8?player8:\n                                                            player9\n\n                                                        } \n                                                        i={i} \n                                                        isPlaying={\n                                                            i===0?isPlaying0:\n                                                            i===1?isPlaying1:\n                                                            i===2?isPlaying2:\n                                                            i===3?isPlaying3:\n                                                            i===4?isPlaying4:\n                                                            i===5?isPlaying5:\n                                                            i===6?isPlaying6:\n                                                            i===7?isPlaying7:\n                                                            i===8?isPlaying8:\n                                                                  isPlaying9\n                                                            }\n                                                        isLoading={\n                                                            i===0?isLoading0:\n                                                            i===1?isLoading1:\n                                                            i===2?isLoading2:\n                                                            i===3?isLoading3:\n                                                            i===4?isLoading4:\n                                                            i===5?isLoading5:\n                                                            i===6?isLoading6:\n                                                            i===7?isLoading7:\n                                                            i===8?isLoading8:\n                                                            isLoading9\n\n                                                        }\n                                                        currentTime={\n                                                            i===0?currentTime0:\n                                                            i===1?currentTime1:\n                                                            i===2?currentTime2:\n                                                            i===3?currentTime3:\n                                                            i===4?currentTime4:\n                                                            i===5?currentTime5:\n                                                            i===6?currentTime6:\n                                                            i===7?currentTime7:\n                                                            i===8?currentTime8:\n                                                            currentTime9\n\n                                                        }\n                                                        totalTime={\n                                                            i===0?totalTime0:\n                                                            i===1?totalTime1:\n                                                            i===2?totalTime2:\n                                                            i===3?totalTime3:\n                                                            i===4?totalTime4:\n                                                            i===5?totalTime5:\n                                                            i===6?totalTime6:\n                                                            i===7?totalTime7:\n                                                            i===8?totalTime8:\n                                                            totalTime9\n\n                                                        }\n                                                        playHandler={\n                                                            i===0?playHandler0:\n                                                            i===1?playHandler1:\n                                                            i===2?playHandler2:\n                                                            i===3?playHandler3:\n                                                            i===4?playHandler4:\n                                                            i===5?playHandler5:\n                                                            i===6?playHandler6:\n                                                            i===7?playHandler7:\n                                                            i===8?playHandler8:\n                                                            playHandler9\n                                                        }\n                                                        backClick={\n                                                            i===0?backClick0:\n                                                            i===1?backClick1:\n                                                            i===2?backClick2:\n                                                            i===3?backClick3:\n                                                            i===4?backClick4:\n                                                            i===5?backClick5:\n                                                            i===6?backClick6:\n                                                            i===7?backClick7:\n                                                            i===8?backClick8:\n                                                            backClick9\n\n                                                        }\n                                                        /> \n                                                            \n                                                      \n                                <StartTimeContainer  changeStartTime={changeStartTime(i)} \n                                                      totalTime={\n                                                            i===0?totalTime0:\n                                                            i===1?totalTime1:\n                                                            i===2?totalTime2:\n                                                            i===3?totalTime3:\n                                                            i===4?totalTime4:\n                                                            i===5?totalTime5:\n                                                            i===6?totalTime6:\n                                                            i===7?totalTime7:\n                                                            i===8?totalTime8:\n                                                            totalTime9 }\n                                                      questionStartsfrom={\n                                                         questions[i].questionStartsfrom\n                                                            }/>\n                            </PlayerWrap>\n                            : \"\"}\n\n                            <BlankTop DesktopMargin='1.9' TabletMargin='2.4' MobileMargin='1.7'/>\n                            <QuestionListInputWrap>\n                                <QuestionListInputText text='Youtube Link' />\n                                <QuestionListYoutubeInput inputName='answerYoutubeURL' inputPlaceholder='정답 공개 후 보여줄 영상을 넣어주세요'  getYoutubeId={getYoutubeId(i)} value={questions[i].answerYoutubeURL}/>\n                            </QuestionListInputWrap>\n\n                        </QuestionListRightWrap>\n                    </InputsWrap>\n                </div>\n                ))}\n\n                <BlankTop DesktopMargin='4.7' TabletMargin='5.2' MobileMargin='4.7'/>\n                <QuestionLustPlusButton addQuestions={addQuestions} />\n                <BlankTop DesktopMargin='3.6' TabletMargin='6' MobileMargin='3.5'/>\n                <QuestionSaveButton onSubmitHandler={onSubmitHandler} />\n                <BlankTop DesktopMargin='3.6' TabletMargin='9.1' MobileMargin='3.5'/>\n                <table></table>\n            </QuestionListInner>     \n\n               \n            )}\n\n        </form>\n      \n    )\n\n}\n\nexport default TestEditFormContainer;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/form/TestMakingFormContainer.js",["435","436","437","438"],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_actions/user_action.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/main/MainContainer.js",["439"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Background from \"../../components/main/Main\";\nimport axios from \"axios\";\nimport StartLoading from \"../../components/loading/StartLoading\";\n\nconst MainContainer = ({ match }) => {\n  const [category, setCategory] = useState({\n    status: \"idle\",\n    item: null,\n  });\n\n  const url = \"http://3.35.187.65:3000\";\n\n  // categoryList\n  const getCategoryAPI = async () => {\n    const { data } = await axios.get(`${url}/main/`);\n    try {\n      console.log(\"[SUCCESS] GET CATEGORY\", data);\n      return data;\n    } catch (e) {\n      console.log(\"[FAIL] GET CATEGORY\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getCategoryAPI();\n      try {\n        setCategory({\n          status: \"pending\",\n          item: null,\n        });\n        setCategory({\n          status: \"resolved\",\n          item: data,\n        });\n      } catch (e) {\n        setCategory({\n          status: \"rejected\",\n          item: null,\n        });\n      }\n    })();\n  }, []);\n\n  // testList\n  const [test, setTest] = useState({\n    status: \"idle\",\n    item: null,\n  });\n\n  const getTestAPI = async () => {\n    const { data } = await axios.get(`${url}/main/`);\n    try {\n      console.log(\"[SUCCESS] GET TEST\", data);\n      return data;\n    } catch (e) {\n      console.log(\"[FAIL] GET TEST\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getTestAPI();\n      try {\n        setTest({\n          status: \"pending\",\n          item: null,\n        });\n        setTest({\n          status: \"resolved\",\n          item: data,\n        });\n      } catch (e) {\n        setTest({\n          status: \"rejected\",\n          item: null,\n        });\n      }\n    })();\n  }, []);\n\n  const [sort, setSort] = useState({\n    status: \"idle\",\n    item: null,\n    onClick: false,\n  });\n\n  const onClickDisplay = useCallback(\n    (id) => {\n      const sortId = id;\n      console.log(\"최상위 컴포넌트\", sortId);\n      (async () => {\n        const finalData = { ...(await getSortAPI(sortId)) };\n        console.log(finalData);\n        try {\n          setSort({\n            status: \"pending\",\n            item: null,\n            onClick: false,\n          });\n          setSort({\n            status: \"resolved\",\n            item: finalData,\n            onClick: true,\n          });\n        } catch (e) {\n          setSort({\n            status: \"rejected\",\n            item: null,\n            onClick: false,\n          });\n        }\n      })();\n\n      console.log(sort.item);\n    },\n    [sort]\n  );\n\n  // 클릭한 카테고리 id를 받아와서, 해당하는 테스트만 return하는 메소드\n  const getSortAPI = async (sortId) => {\n    const { data } = await axios.get(`${url}/main`);\n    console.log(data);\n    let finalData = [];\n    data.data.tests.forEach((req) => {\n      if (req.Category.id === sortId) {\n        finalData.push(req);\n      }\n    });\n    if (sortId === 10) {\n      finalData = data.data.tests;\n    }\n    try {\n      console.log(\"[SUCCESS] GET SORT\", finalData, finalData.length);\n      return finalData;\n    } catch (e) {\n      console.log(\"[FAIL] GET SORT\");\n    }\n  };\n\n  // input 관련 state\n\n  switch (category.status) {\n    case \"idle\":\n      return <StartLoading />;\n    case \"rejected\":\n      return <>Error</>;\n    case \"pending\":\n      return <StartLoading />;\n    case \"resolved\":\n    default:\n      // ={category.item.data.tests}\n\n      return (\n        <Background\n          categoryList={category.item.data.categories}\n          testList={!sort.onClick ? category.item.data.tests : sort.item}\n          allList={category.item.data.tests}\n          onClickDisplay={onClickDisplay}\n        />\n      );\n  }\n};\n\nexport default MainContainer;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test/TestWrapperContainer.js",["440"],"import React from 'react'\nimport TestBackground from '../../components/test/TestBackground'\nimport Test from '../../components/test/TestBackground'\n\nfunction TestContainer({ children, match }) {\n  return (\n    <>\n      <TestBackground children={children} />\n    </>\n  )\n}\n\nexport default TestContainer\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test/TestCd/TestCdWrapperContainer.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/test_end/TestEndContainer.js",["441"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StartLoading from \"../../components/loading/StartLoading\";\nimport TestEnd from \"../../components/test_end/TestEnd\";\nimport { useHistory, matchPath } from \"react-router-dom\";\n\nconst TestEndContainer = ({ match }) => {\n  const history = useHistory();\n  const parentMatch = matchPath(history.location.pathname, {\n    path: \"/test/:id\",\n  });\n  console.log(parentMatch);\n  console.log(parentMatch.params.id);\n\n  const [recommend, setRecommend] = useState({\n    status: \"idle\",\n    item: null,\n  });\n\n  const [title, setTitle] = useState({\n    status: \"idle\",\n    item: null,\n  });\n\n  const url = \"http://3.35.187.65:3000\";\n\n  const getRecommendAPI = async () => {\n    // id 값 추가하기\n    const { data } = await axios.get(`${url}${history.location.pathname}`);\n    try {\n      console.log(\"[SUCCESS] GET RECOMMENDATION\", data);\n      return data;\n    } catch (e) {\n      console.log(\"[FAIL] GET RECOMMENDATION\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getRecommendAPI();\n      try {\n        setRecommend({\n          status: \"pending\",\n          item: null,\n        });\n        setRecommend({\n          status: \"resolved\",\n          item: data,\n        });\n      } catch (e) {\n        setRecommend({\n          status: \"rejected\",\n          item: null,\n        });\n      }\n    })();\n  }, []);\n\n  const getTitleAPI = async (id) => {\n    // id 값 추가하기\n    const { data } = await axios.get(`${url}/test/${id}`);\n    try {\n      console.log(\"[SUCCESS] GET TITLE\", data);\n      return data;\n    } catch (e) {\n      console.log(\"[FAIL] GET TITLE\");\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const data = await getTitleAPI(parentMatch.params.id);\n      try {\n        setTitle({\n          status: \"pending\",\n          item: null,\n        });\n        setTitle({\n          status: \"resolved\",\n          item: data,\n        });\n      } catch (e) {\n        setTitle({\n          status: \"rejected\",\n          item: null,\n        });\n      }\n    })();\n  }, [parentMatch.params.id]);\n\n  if (recommend.status === \"idle\" || title.status === \"idle\") {\n    return <StartLoading />;\n  } else if (recommend.status === \"rejected\" || title.status === \"rejected\") {\n    return <>Error</>;\n  } else if (recommend.status === \"pending\" || title.status === \"pending\") {\n    return <StartLoading />;\n  } else if (recommend.status === \"resolved\" && title.status === \"resolved\") {\n    return <TestEnd recommendList={recommend.item.data} title={title.item} />;\n  }\n};\n\nexport default TestEndContainer;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/_actions/types.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/Button.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/TopInner.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/InputCategoryContainer.js",["442"],"import { useEffect, useState } from 'react';\nimport InputCategory from '../../components/testmaking/Input/InputCategory';\n\n\n\n\n\nconst InputCategoryContainer = ({inputName,inputPlaceholder,testCategory,changeCategory}) => {\n\n    const [isCategoryVisible, setIsCategoryVisible] = useState(false);\n    const [chooseCategory, setChooseCategory] = useState()\n\n    const categoryVisibleHandler = () => {\n        setIsCategoryVisible(!isCategoryVisible);\n    }\n\n    const chooseCategoryHandler = (e) => {\n        const categoryValue = e.target.childNodes[0].data;\n        setChooseCategory(categoryValue)\n        setIsCategoryVisible(!isCategoryVisible);\n        changeCategory(e.target.id)\n    }\n    useEffect(\n     ()=>{\n         if(testCategory===1){\n            setChooseCategory('여자 아이돌')\n         }else if(testCategory===2){\n            setChooseCategory('남자 아이돌')\n         }else if(testCategory===3){\n            setChooseCategory('연도별')\n         }else if(testCategory===4){\n            setChooseCategory('힙합')\n         }else if(testCategory===5){\n            setChooseCategory('핍')\n         }else if(testCategory===6){\n            setChooseCategory('게임')\n         }else if(testCategory===7){\n            setChooseCategory('영화/드라마')\n         }else if(testCategory===8){\n            setChooseCategory('애니메이션')\n         }else if(testCategory===9){\n            setChooseCategory('기타')\n         }\n     }\n    ,[])\n    return (\n        <InputCategory \n                isCategoryVisible={isCategoryVisible} \n                categoryVisibleHandler={categoryVisibleHandler}\n                inputName={inputName}\n                inputPlaceholder={inputPlaceholder}\n                chooseCategoryHandler={chooseCategoryHandler}\n                testCategory={testCategory}\n                changeCategory={changeCategory}\n                chooseCategory={chooseCategory}\n        />\n        )\n\n\n\n}\n\nexport default InputCategoryContainer;","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInput.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInputWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/TopInputText.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/player/PlayerContainer.js",["443"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Wave from '../../../components/testmaking/questionlist/player/Wave';\n\n\nconst PlayerContainer = ({questionUrl,i,isLoading,isPlaying,player,totalTime,currentTime,playHandler,backClick}) => {\n  const [mouseDragX, setMouseDragX] = useState(false);\n  const [activeButton, setactiveButton] = useState(false);\n  const [containerWidth,setContainerWidth] = useState(307);\n\n\n  const dragHandler = (e) => {\n    const nowFraction = e.offsetX / containerWidth;\n    player.seekTo(player.getDuration() * nowFraction, true);\n  };\n\n  const drag = () => {\n    document.addEventListener(\"mousemove\", dragHandler);\n    document.addEventListener(\"mouseup\", () => {\n      document.removeEventListener(\"mousemove\", dragHandler);\n      setMouseDragX(false);\n    });\n  };\n\n\n  const clickActiveButtonOver = () => {\n     setactiveButton(true)\n  }\n  const clickActiveButtonOut = () => {\n    setactiveButton(false)\n}\n  useEffect(() => {\n        const a = document.getElementsByTagName('iframe')[i];\n        a.src = `https://www.youtube.com/embed/${questionUrl}?autoplay=0&controls=0&fs=0&enablejsapi=1&origin=http%3A%2F%2Flocalhost%3A3000&widgetid=1`;\n  },[questionUrl,i]);\n\n\n  return (\n    <TotalWrap>\n\n    <ControlsWrap>\n      <ButtonCover>\n          <Button onClick={playHandler} >\n          {isLoading ? (\n              isPlaying ? (\n              <i className=\"xi-pause\" />\n              ) : (\n              <i className=\"xi-play\" />\n              )\n          ) : (\n              <i className=\"xi-spinner-3 xi-spin\" />\n          )}\n          </Button>\n      </ButtonCover>\n      <BackButtonCover>\n          <MoveButton onClick={backClick}>\n          {isLoading ? (              \n              <i className=\"xi-step-backward\" />\n          ) : (\n              <i className=\"xi-spinner-3 xi-spin\" />\n          )}\n          </MoveButton>\n      </BackButtonCover>\n\n\n      <TimeWrap>\n      {player ? `${currentTime}` : \"00:00\"}\n      </TimeWrap>\n      <WaveCenter>\n          <WaveWrap>\n          <Wave FillColor={player ? String(player?.getCurrentTime() / player?.getDuration()* 10 )  : '0'}/>\n                  <div style={{position:'absolute'}}>\n                          <LoadBar style={ {\n                              width: mouseDragX\n                              ? mouseDragX\n                              : player ? String(\n                                  (player?.getCurrentTime() / player?.getDuration()) * containerWidth\n                                  ) + \"px\" : '0px',\n\n                              border:\n                              activeButton || mouseDragX\n                                  ? \"0px solid #db021f\"\n                                  : \"0px solid #db021f\",\n                          }} >\n                              <DragButton\n                              style={{ opacity: isLoading ? activeButton || mouseDragX ? \"1\" : \"1\" :\"0\" }}\n                              onMouseOver={clickActiveButtonOver}\n                              onMouseOut={clickActiveButtonOut}\n                              onMouseDown={drag}\n                              isLoading = {isLoading}\n                              />\n                          </LoadBar>\n                  </div>\n\n          </WaveWrap>\n      </WaveCenter>\n      \n    </ControlsWrap>\n  </TotalWrap>\n  );\n};\nexport default PlayerContainer;\n\n\nconst ButtonCover = styled.div`\n  width:2rem;\n  height:2rem;\n  cursor: pointer;\n  border: 1px solid #fff;\n  border-radius:50%;\n  margin-left:1.9rem;\n  margin-right:1rem;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n\n  @media only screen and (max-width: 1024px) {\n      margin-left:0rem;\n      margin-right:1.4rem;\n      width:2.6rem;\n      height:2.6rem;\n  }\n    @media only screen and (max-width: 768px) {\n      margin-left:0.8rem;\n      margin-right:0.9rem;\n      width:2.2rem;\n      height:2.2rem;\n  }\n`\n\nconst BackButtonCover = styled.div`\n  width:2rem;\n  height:2rem;\n  cursor: pointer;\n  border: 1px solid #fff;\n  border-radius:50%;\n  margin-right:0.2rem;\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  @media only screen and (max-width: 1024px) {\n        margin-left:0;\n        margin-right:2.2rem;\n        width:2.6rem;\n        height:2.6rem;\n  }\n  @media only screen and (max-width: 768px) {\n      margin-right:0rem;\n      width:2.2rem;\n      height:2.2rem;\n\n  }\n\n`\n\nconst Button = styled.div`\n\n  all: unset;\n  font-size: 1.6rem;\n  color: #ffffff;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\n\nconst MoveButton = styled.div`\n\n   all: unset;\n   font-size: 1.6rem;\n  color: #ffffff;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\n\nconst ControlsWrap = styled.div`\n  height: 28px;\n  display: flex;\n  align-items: center;\n  color: #909090;\n  font-size: 12px;\n\n`;\n\nconst LoadBar = styled.div`\n  position: relative;\n  z-index: 100;\n  height: 1px;\n  top: 1px;\n`\n\nconst DragButton = styled.div`\n  position: absolute;\n  transform: translate(70%, -50%);\n  right: 0px;\n  top: 0px;\n  width: 8px;\n  height: 8px;\n  background-color:${props=> props.isLoading ? \"#60FFDA\" :\"\"} ;\n  border-radius: 50%;\n  transition: all 0.1s ease-in;\n  border: 1px solid white;\n`;\n\nconst TimeWrap = styled.div`\n    width: 5rem;\n    height: 2rem;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    font-size:1.4rem;\n    margin-top:0.3rem;\n    @media only screen and (max-width: 1024px) {\n        margin-right:1.8rem;\n  }\n    @media only screen and (max-width: 768px) {\n        width: 4.5rem;\n        font-size:1.2rem;\n        margin-top:0.4rem;\n        margin-right:0.4rem;\n\n\n\n  }\n`\n\nconst WaveWrap = styled.div`\n    width:31.4rem;\n    height:3.6rem;\n    display:flex;\n    align-items:center;\n    position:relative;\n    @media only screen and (max-width: 560px) {\n        width:0rem;\n        display:none;\n    }\n`\n\nconst WaveCenter = styled.div`\n    @media only screen and (max-width: 1024px) {\n        width:31.4rem;\n        height:3.6rem;\n        display:flex;\n        align-items:center;\n        justify-content:center  \n    }\n    @media only screen and (max-width: 768px) {\n        width:31.4rem;\n        height:3.6rem;\n    }\n    @media only screen and (max-width: 560px) {\n        width:0rem;\n        display:none;\n    }\n\n`\n\nconst TotalWrap = styled.div`\n  height: 28px;\n  display: flex;\n  align-items: center;\n    @media only screen and (max-width: 768px) {\n        justify-content:center;\n\n\n\n  }\n`;\n\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListTitle.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/testmaking/player/StartTimeContainer.js",["444","445"],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListSaveButton.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListInner.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/InputsWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListPlusButton.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputLeftWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputRightWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/QuestionListHeader.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInputText.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListHintWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QusitonListYoutubeInput.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/PlayerWrap.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/input/QustionListInput.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/config.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/TestBackground.js",["446"],"import styled from 'styled-components'\nimport bg1920 from '../../assets/images/test/all_background1920.png'\nimport bg1440 from '../../assets/images/test/all_background1440.png'\nimport bg1024 from '../../assets/images/test/all_background1024.png'\nimport bg768 from '../../assets/images/test/all_background768.png'\n\nconst TestWrap = styled.div`\n  height: 500vh;\n  width: 100%;\n  position: relative;\n  background-repeat: no-repeat;\n  background-position: center top;\n  background-color: #081923;\n  background-size: contain;\n  background-image: url(${bg1920});\n  overflow: hidden;\n  @media only screen and (max-width: 1024px) {\n    background-image: url(${bg1024});\n  }\n  @media only screen and (max-width: 768px) {\n    background-image: url(${bg768});\n  }\n`\n\nconst TestBackground = ({ children }) => {\n  return (\n    <>\n      <TestWrap>{children}</TestWrap>\n    </>\n  )\n}\n\nexport default TestBackground\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/testcd/TestCd.js",["447","448"],"\nimport React, { useEffect, useState } from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport recordImg from '../../../assets/images/test/graphic_black_cd.png'\nimport cdImg from '../../../assets/images/test/blackcd_house-1.png'\nimport defaultCdImg from '../../../assets/images/test/blackcd_house.png'\nimport BlankTop from '../../common/BlankTop'\nimport logo from '../../../assets/images/test/image_watermark.png'\nimport TextComponent from '../../common/test/TextComponent'\nimport { useHistory } from 'react-router-dom'\nimport ProgressBar from '../testcd/ProgressBar'\nimport ModalPage from '../../../pages/modal/ModalPage'\nimport QuizHeader from '../../common/QuizHeader'\n\nconst TestCd = ({ newList, match }) => {\n  //state정의\n  const [hintText, setHintText] = useState('힌트 보기')\n  const [buttonText, setButtonText] = useState('정답 보기') //클릭한 버튼명(버튼명으로 현재 상태비교)\n  const [rotateSecond, setRotateSecond] = useState(0) //1초재생인지 3초재생인지 상태값(0일때는 애니메이션 없음)\n  const [recordInside, isRecordInside] = useState(false) //레코드판을 넣는 애니메이션 트리거\n  const [activeIndex, setActiveIndex] = useState(0) //현재 선택된 레코드판 index넘버\n  const [answer, setAnswer] = useState() //정답 text state\n  const [sound1Url, setSound1Url] = useState()\n  const [sound3Url, setSound3Url] = useState()\n  const [modalVisible, setModalVisible] = useState(false)\n  const [isHint, setIsHint] = useState(false)\n  const [modalIn, setModalIn] = useState(false)\n  const [modalOut, setModalOut] = useState(false)\n\n  const history = useHistory()\n\n  // const hintBtn = document.getElementById('hintBtn')\n\n  useEffect(() => {\n    isRecordInside(false);\n    setButtonText(\"정답 보기\");\n    setAnswer(undefined);\n    setSound1Url(newList[activeIndex].sound1URL);\n    setSound3Url(newList[activeIndex].sound3URL);\n  }, [activeIndex]);\n\n  const openModal = () => {\n\n    setModalVisible(true)\n    setModalOut(false)\n  }\n\n  const closeModal = () => {\n    setModalOut(true)\n    setModalVisible(false)\n  }\n\n\n  //다음문제 버튼 이벤트 정의\n  const handleHintButton = () => {\n    if (hintText === \"힌트 보기\") {\n      setIsHint(true);\n      setTimeout(() => {\n        setHintText(`${newList[activeIndex].hint}`);\n      }, 500);\n    } else if (hintText === \"관련 영상 보기\") {\n      console.log(\"여기서 모달을 띄울거에요\");\n      setModalIn(true);\n      openModal();\n    }\n  };\n\n  const handleNextButton = () => {\n    //버튼 텍스트가 '정답보기' 일때 버튼명을 '다음문제'로 변경 후 레코드 집어넣는 트리거를true로 바꿔줌\n    if (buttonText === \"정답 보기\") {\n      isRecordInside(true);\n      setHintText(\"관련 영상 보기\");\n\n      if (activeIndex + 1 < newList.length) {\n        setButtonText(\"다음 문제\");\n        setAnswer(newList[activeIndex].answer);\n        setIsHint(false);\n      } else {\n        setAnswer(newList[activeIndex].answer);\n        setButtonText(\"테스트 완료\");\n      }\n    } else if (buttonText === \"다음 문제\") {\n      //버튼 텍스트가 '다음문제'일때 선택된 레코드를 1증가하여 다음 레코드를 불러옴\n      setHintText(\"힌트 보기\");\n      if (activeIndex + 1 < newList.length) {\n        setActiveIndex(activeIndex + 1);\n      }\n    } else if (buttonText === \"테스트 완료\") {\n      history.push(`/test/${match.params.id}/recommendation`);\n      console.log(history);\n    }\n  };\n\n  //레코드판 돌아가는 애니메이션 핸들러\n  const handleRotateAnimation = (second) => {\n    //레코드판 재생시간이 0초일때만 에니메이션 실행을 하여 마구 연타하였을때 애니메이션 꼬이는것을 방지\n    if (rotateSecond === 0) {\n      setRotateSecond(second);\n      //이곳에 사운드 재생\n      if (second === 1) {\n        // 1초 사운드\n        var audio = new Audio(sound1Url);\n        audio.play();\n      } else {\n        // 3초 사운드\n        var audio = new Audio(sound3Url);\n        audio.play();\n      }\n    }\n  };\n\n  return (\n    <>\n      <table></table>\n      {modalVisible && (\n        <ModalPage\n          modalIn={modalIn}\n          modalOut={modalOut}\n          urlId={newList[activeIndex].answerYoutubeURL}\n          visible={modalVisible}\n          maskClosable={true}\n          closeModal={closeModal}\n        />\n      )}\n      <QuizHeader />\n      <BlankTop DesktopMargin=\"15\" TabletMargin=\"32\" MobileMargin=\"21\" />\n      <IconWrapper>\n        <MyIcon />\n      </IconWrapper>\n      <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\n      <TitleWrapper>\n        <TextComponent\n          title={newList[activeIndex].testTitle}\n          // title=\"quiztitle 수정중\"\n          DesktopLength=\"2\"\n          TabletLength=\"2\"\n          MobileLength=\"1.8\"\n        />\n      </TitleWrapper>\n      <BlankTop DesktopMargin=\"4.2\" TabletMargin=\"5\" MobileMargin=\"9\" />\n      <Container>\n        <ContentContainer>\n          <ProgressBar percentual={(100 / newList.length) * activeIndex} />\n          {newList.map((item, index) => {\n            return (\n              <SwiperContainer\n                key={index}\n                activeIndex={activeIndex}\n                thisIndex={index}\n              >\n                <CaseImg\n                  src={activeIndex === index ? cdImg : defaultCdImg}\n                  // src={cdImg}\n                />\n                {index === activeIndex && (\n                  <>\n                    <AnswerText inside={recordInside}>\n                      {answer ?? \"정답은?\"}\n                    </AnswerText>\n                    <RecordImg\n                      src={recordImg}\n                      rotateSecond={rotateSecond}\n                      onAnimationEnd={() => setRotateSecond(0)} // 해당요소의 애니메이션이 종료됐을때 레코드판 돌리는 재생시간을 다시 0초로 초기화\n                      inside={recordInside} //레코드가 들어가는 애니메이션을위한 트리거 변수\n                    />\n                  </>\n                )}\n              </SwiperContainer>\n            );\n          })}\n        </ContentContainer>\n      </Container>\n      <BlankTop DesktopMargin=\"1\" TabletMargin=\"5\" MobileMargin=\"10\" />\n\n      <ButtonContainer>\n        <RowContainer>\n          <ListenButtonWrapper>\n            <ListenButtonStyle onClick={() => handleRotateAnimation(1)}>\n              1초 듣기\n            </ListenButtonStyle>\n            <ListenButtonDisinguish>/</ListenButtonDisinguish>\n            <ListenButtonStyle onClick={() => handleRotateAnimation(3)}>\n              3초 듣기\n            </ListenButtonStyle>\n          </ListenButtonWrapper>\n        </RowContainer>\n        <BlankTop DesktopMargin=\"3\" TabletMargin=\"1\" MobileMargin=\"3\" />\n\n        <BigButtonWrapper>\n          <HintButtonStyle onClick={handleHintButton} hint={isHint}>\n            {hintText}\n          </HintButtonStyle>\n          <AnswerButtonStyle onClick={handleNextButton}>\n            {buttonText}\n          </AnswerButtonStyle>\n        </BigButtonWrapper>\n      </ButtonContainer>\n    </>\n  );\n};\n\n/**키프레임 시작 */\n\nconst HintFade = keyframes`{\n  0% { \n   opacity: 1;\n  }\n  50% {\n   width: 0;\n   opacity: 0;\n  }\n  100% {\n  opacity: 1;\n  }\n`;\n\n//1초 레코드판 돌리는 키프레임\nconst Rotate1Record = keyframes`\n  0% {\n    transform: rotate( 0deg )\n  }\n  100% {\n    transform: rotate( 360deg )\n  }\n`;\n//3초 레코드판 돌리는 키프레임\nconst Rotate3Record = keyframes`\n  0% {\n    transform: rotate( 0deg )\n  }\n  100% {\n    transform: rotate( 1080deg )\n  }\n`;\n//레코드판을 집어넣는 키프레임\nconst RecordInside = keyframes`\n  0% {\n    margin-left: -25%\n  }\n  100% {\n    margin-left: -50%\n  }\n  `;\n\nconst TextInside = keyframes`\n0% {\n  margin-left: -25%\n}\n100% {\n  \n  margin-left: 0;\n}\n`;\n\n//신규 레코드판이 선택될때 나오는 애니메이션 키프레임\nconst ActiveAnimation = keyframes`\n0% {\n    opacity: .5;\n    transform: translateX(50%) scale(.6);\n \n}\n100% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n`;\nconst ActiveAnimation1024 = keyframes`\n0% {\n    opacity: .5;\n    transform: translateX(40%) scale(.6);\n \n}\n100% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n`;\nconst ActiveAnimation768 = keyframes`\n0% {\n    opacity: .5;\n    transform: translateX(50%) scale(.6);\n \n}\n100% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n`;\n\n//레코드판이 왼쪽으로 들어갈때 나오는 애니메이션 키프레임\nconst UnActiveAnimation = keyframes`\n0% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n100% {\n    opacity: .5; /*여기*/ \n    transform: translateX(-65%) scale(0.6);\n}\n`;\n\nconst UnActiveAnimation1024 = keyframes`\n0% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n100% {\n    opacity: .5; /*여기*/ \n    transform: translateX(-60%) scale(0.6);\n}\n`;\n\nconst UnActiveAnimation768 = keyframes`\n0% {\n    transform: translateX(0%) scale(1);\n    opacity: 1;\n}\n100% {\n    opacity: .5; /*여기*/ \n    transform: translateX(-130%) scale(0.6);\n}\n`;\n/* 키프레임 종료 */\n\n/* Start Logo */\nconst IconWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  justify-content: center;\n`;\n\nconst MyIcon = styled.img`\n  width: 19rem;\n  @media only screen and (max-width: 1024px) {\n    width: 19rem;\n  }\n  @media only screen and (max-width: 768px) {\n    width: 18.5rem;\n  }\n`;\n\nMyIcon.defaultProps = {\n  src: logo,\n};\n/* End Logo */\n\n/* Start Title  */\nconst TitleWrapper = styled.div`\n  width: 100%;\n  height: auto;\n`;\n/* End Title */\n\nconst Container = styled.div`\n  width: 100%;\n  height: auto;\n  position: relative;\n  display: flex;\n\n  /* border: 1px solid blue; */\n`\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  height: 41rem;\n  padding-right: 11rem;\n  // 1920 기준\u001b\n  @media only screen and (max-width: 1024px) {\n    height: 38rem;\n    padding-right: 8rem; // 여기\n  }\n  @media only screen and (max-width: 768px) {\n    height: 26rem;\n    padding-left: 5rem;\n  }\n`;\nconst AnswerText = styled.p`\n  font-size: 1.4rem;\n  font-weight: bold;\n  color: #030f2c;\n  position: absolute;\n  z-index: 10;\n  padding-left: 40px;\n  /* border: 1px solid red; */\n  object-fit: contain;\n  margin-left: -25%; // -25%\n  animation-fill-mode: forwards;\n  ${(props) =>\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 0.5s;\n      animation-iteration-count: 1;\n      animation-name: ${TextInside};\n    `}\n`;\n\nconst SwiperContainer = styled.div`\n  & > img {\n    height: 100%;\n  }\n  /* border: 1px solid green; */\n  margin-right: 10rem;\n  display: flex;\n  height: 100%;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  animation-fill-mode: forwards;\n  ${({ activeIndex, thisIndex }) => {\n    // 선택된 index와 각요소의 index를 비교해서 애니메이션과 위치를 처리해줌\n    const compare = Math.abs(activeIndex - thisIndex); //index비교 절대값\n    if (activeIndex === thisIndex) {\n      //선택된index와 현재요소의 값이 같다면(즉 active상태의 요소일때) 오른쪽에서 가운데로 나오는 애니메이션을 넣어줌\n      return css`\n        animation-timing-function: ease-in-out;\n        animation-duration: 0.5s;\n        animation-iteration-count: 1;\n        animation-name: ${ActiveAnimation};\n        @media only screen and (max-width: 1024px) {\n          animation-name: ${ActiveAnimation1024};\n        }\n        @media only screen and (max-width: 768px) {\n          animation-name: ${ActiveAnimation768};\n        }\n        z-index: 10;\n      `;\n    } else if (activeIndex > thisIndex) {\n      //선택된index가 현재요소의 값보다 크다면(즉 active상태의 요소보다 왼쪽에 있을때)\n      if (compare === 1) {\n        //비교값이 1일때(즉 현재 active상태였다가 왼쪽으로 들어가야 하는 상태) 왼쪽으로 슬라이드되는 애니메이션을 넣어줌\n        return css`\n          animation-timing-function: ease-in-out;\n          animation-duration: 0.5s;\n          animation-iteration-count: 1;\n          animation-name: ${UnActiveAnimation};\n          @media only screen and (max-width: 1024px) {\n            animation-name: ${UnActiveAnimation1024};\n          }\n          @media only screen and (max-width: 768px) {\n            animation-name: ${UnActiveAnimation768};\n          }\n        `;\n      }\n      //그이외 그냥 위치만 잡아줌\n      return css`\n        /* border: 1px solid blue; */\n        opacity: 0.5;\n        transform: translateX(-65%) scale(0.6);\n        @media only screen and (max-width: 1024px) {\n          transform: translateX(-60%) scale(0.6);\n        }\n        @media only screen and (max-width: 768px) {\n          transform: translateX(-130%) scale(0.7);\n        }\n      `;\n    } else if (activeIndex < thisIndex) {\n      //선택된index가 현재요소의 값보다 작다면(즉 active상태의 요소보다 오른쪽에 있을때)위치만 잡아줌\n      return `\n      opacity: .5;\n      width: 40rem;\n      overflow: hidden;        \n      transform: translateX(101%) scale(0.6);\n      @media only screen and (max-width: 1024px) {\n        transform: translateX(89%) scale(0.6);\n      }\n      @media only screen and (max-width: 768px) {\n        transform: translateX(100%) scale(0.7);\n      }\n    `;\n    }\n  }}\n`;\n\nconst RecordImg = styled.img`\n  /* border: 1px solid orange; */\n  object-fit: contain;\n  z-index: 1;\n  margin-left: -25%;\n  animation-fill-mode: forwards;\n  ${(props) =>\n    props.rotateSecond > 0 && //레코드판을 돌리는 css애니메이션 추가 0초 이상일때만 작동하도록 한다.\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: ${props.rotateSecond}s;\n      animation-iteration-count: 1;\n      animation-name: ${props.rotateSecond === 1\n        ? Rotate1Record\n        : Rotate3Record}; //1초일때 3초일때 분기해서 키프레임을 넣어줌\n    `}\n  ${(props) =>\n    props.inside && //레코드판을 집어넣는 css애니메이션 추가 트리거가 true일때 실행.\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 0.5s;\n      animation-iteration-count: 1;\n      animation-name: ${RecordInside};\n    `}\n`;\n\n/* activeIndex={activeIndex} thisIndex={index} */\n\nconst CaseImg = styled.img`\n  margin-left: 30%;\n  overflow: hidden;\n\n  object-fit: contain;\n  z-index: 2;\n  /* border: 1px solid red; */\n  /* width: 28rem; */\n`;\n\n/* Start button */\n\nconst ButtonContainer = styled.div`\n  /* border: 1px solid orange; */\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nconst RowContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n`;\n\nconst ListenButtonWrapper = styled.div`\n  width: 100%;\n  height: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ListenButtonDisinguish = styled.span`\n  color: #fff;\n  font-weight: 300;\n  font-size: 4rem;\n  text-align: center;\n  padding: 0 6rem;\n  @media only screen and (max-width: 1024px) {\n    font-size: 3.2rem;\n    padding: 0 6rem;\n  }\n  @media only screen and (max-width: 768px) {\n    font-size: 3rem;\n    padding: 0 6rem;\n  }\n`;\n\nconst ListenButtonStyle = styled.button`\n  color: #ffffff;\n  font-size: 1.8rem;\n  font-family: \"Nanum Gothic\";\n  font-weight: 100;\n  border: none;\n  outline: none;\n  background: none;\n  padding: 0px;\n  font-size: 1.5rem;\n  @media only screen and (max-width: 1024px) {\n    font-size: 1.3rem;\n    padding-bottom: 0.5rem;\n  }\n  @media only screen and (max-width: 768px) {\n    font-size: 1.2rem;\n    padding-bottom: 0.5rem;\n  }\n  cursor: pointer;\n  &:hover {\n    color: #60ffc6;\n  }\n`;\n\nconst BigButtonWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /* border: 1px solid orange; */\n`;\n\nconst HintButtonStyle = styled.button`\n  cursor: pointer;\n  display: inline-block;\n  white-space: nowrap;\n  color: #fff;\n  border: 1px solid #ffffff;\n  outline: none;\n  background: none;\n  padding: 0px;\n  width: 44rem;\n  height: 5rem;\n  margin-bottom: 2rem;\n  @media only screen and (max-width: 1024px) {\n    width: 35rem;\n    height: 4rem;\n    margin-bottom: 1.5rem;\n  }\n  @media only screen and (max-width: 768px) {\n    width: 32rem;\n    height: 4rem;\n    margin-bottom: 1rem;\n  }\n  &:hover {\n    color: #49fff2;\n    transition: color 0.1s ease-in-out;\n  }\n  ${(props) =>\n    props.hint &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 0.6s;\n      /* animation-iteration-count: 1; */\n      animation-name: ${HintFade};\n    `}\n`;\n\nconst AnswerButtonStyle = styled.button`\n  cursor: pointer;\n  color: #030f2c;\n  border: none;\n  outline: none;\n  box-shadow: 0px 0px 21px -6px #49fff2;\n  padding: 0px;\n  width: 44rem;\n  height: 5rem;\n  @media only screen and (max-width: 1024px) {\n    width: 35rem;\n    height: 4rem;\n  }\n  @media only screen and (max-width: 768px) {\n    width: 32rem;\n    height: 4rem;\n  }\n  background: linear-gradient(\n    90deg,\n    rgba(73, 255, 242, 1) 0%,\n    rgba(73, 255, 233, 1) 35%,\n    rgba(56, 245, 238, 1) 66%,\n    rgba(0, 212, 255, 1) 100%\n  );\n  &:hover {\n    transition: box-shadow 0.5s ease-in-out;\n    box-shadow: 0px 0px 40px -6px #49fff2;\n  }\n`;\n/* End button */\nexport default TestCd;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/TestEnd.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/Main.js",["449"],"import Background from \"../../components/main/Bg\";\nimport Header from \"../../components/main/header/Header\";\nimport Banner from \"../main/banner/Banner\";\nimport Category from \"../main/category/Category\";\nimport CardList from \"../main/test_card/TestCard\";\nimport Footer from \"../main/footer/Footer\";\nimport BlankTop from \"../common/BlankTop\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchIconImg from \"../../assets/ic_search.png\";\n\nconst Wrap = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 52.4rem;\n  position: relative;\n  margin: 0 auto 1.3rem;\n  @media (max-width: 1024px) {\n    width: 46.5rem;\n    margin-bottom: 1rem;\n  }\n  @media (max-width: 768px) {\n    width: 33.8rem;\n    margin-bottom: 1.2rem;\n  }\n`;\n\nconst SearchIcon = styled.img.attrs({\n  src: SearchIconImg,\n})`\n  display: block;\n  width: 2rem;\n  height: 2rem;\n  position: absolute;\n  left: -1.2rem;\n  @media (max-width: 768px) {\n    left: -5.6rem;\n  }\n`;\n\nconst Input = styled.input`\n  width: 52.4rem;\n  text-align: center;\n  font-size: 1.6rem;\n  line-height: 1.035;\n  border-style: none;\n  color: #dadada;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n    color: #dadada;\n  }\n\n  @media (max-width: 1024px) {\n    width: 46.5rem;\n  }\n\n  @media (max-width: 768px) {\n    width: 33.9rem;\n    font-size: 1.4rem;\n    line-height: 1;\n  }\n`;\n\nconst SearchBorder = styled.hr`\n  display: block;\n  width: 88.6rem;\n  height: 0.2rem;\n  margin: 0 auto;\n  border: none;\n  color: #000;\n  background: #fff;\n  background: radial-gradient(\n    80.42% 65929741.39% at 50% 74.84%,\n    rgba(255, 255, 255, 0.85) 0%,\n    rgba(255, 255, 255, 0) 57.29%\n  );\n  @media (max-width: 1024px) {\n    width: 72.4rem;\n  }\n  @media (max-width: 768px) {\n    width: 54.9rem;\n  }\n`;\n\n// testList는 내가 선택한 카테고리에 따라 오게됨.\nconst Main = ({ categoryList, testList, onClickDisplay, allList }) => {\n  console.log(testList);\n\n  const first = Object.values(allList);\n  console.log(first);\n\n  const [search, setSearch] = useState(\"\");\n\n  const [result, setResult] = useState([]);\n\n  const handleChange = (event) => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    // 제목, 내용에 해당되는 거\n    const title = first.filter((item) => {\n      // console.log(item.title.toLowerCase());\n      return (\n        item.title.toLowerCase().includes(search) ||\n        item.description.toLowerCase().includes(search)\n      );\n    });\n    setResult(title);\n  }, [search]);\n\n  console.log(result);\n\n  return (\n    <Background>\n      <Header />\n      <BlankTop DesktopMargin={11} TabletMargin={12} MobileMargin={8.8} />\n      <Banner />\n      <BlankTop DesktopMargin={8} TabletMargin={5.5} MobileMargin={7.4} />\n      <>\n        <Wrap>\n          <SearchIcon />\n          <Input\n            type=\"text\"\n            placeholder=\"사용자들이 만들어놓은 다양한 테스트들을 검색해보세요!\"\n            value={search}\n            onChange={handleChange}\n          />\n        </Wrap>\n        <SearchBorder />\n      </>\n      <BlankTop DesktopMargin={9.7} TabletMargin={7.3} MobileMargin={7.3} />\n      <Category categoryList={categoryList} onClickDisplay={onClickDisplay} />\n      <CardList testList={testList} testList2={result} />\n      <Footer />\n    </Background>\n  );\n};\n\nexport default Main;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/Input/InputCategory.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/Wave.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/testmaking/questionlist/player/StartTime.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/Divider.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test/testcd/ProgressBar.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/QuizHeader.js",["450"],"import React, { useEffect, useState } from 'react'\nimport styled, { css, keyframes } from 'styled-components'\nimport ham from '../../assets/menu.png'\nimport arrow from '../../assets/button_back.png'\nimport BlankTop from './BlankTop'\n\nfunction QuizHeader() {\n  const [clickArrow, setClickArrow] = useState(true)\n\n  useEffect(() => console.log(clickArrow), [clickArrow])\n\n  return (\n    <>\n      <QuizWrapper>\n        <HamImg\n          onClick={() => setClickArrow(false)}\n          src={ham}\n          onClick={() => {\n            setClickArrow(false)\n          }}\n        />\n        <MenuBox clickArrow={clickArrow}>\n          <ArrowWrapper>\n            <ArrowImg\n              src={arrow}\n              onClick={() => {\n                setClickArrow(true)\n              }}\n            />\n            <BlankTop DesktopMargin=\"3\" TabletMargin=\"3\" MobileMargin=\"2.6\" />\n          </ArrowWrapper>\n          <ContentWrapper>\n            <div>ddd</div>\n          </ContentWrapper>\n        </MenuBox>\n      </QuizWrapper>\n    </>\n  )\n}\n\nconst SlideOff = keyframes`\n  from {\n    width: 20%;\n    \n  }\n  to {\n    width: 0%;\n  }\n`\n\nconst SlideOn = keyframes`\n  from {\n    width: 0%;\n    \n  }\n  to {\n    width: 20%;\n    \n  }\n`\n\nconst QuizWrapper = styled.div`\n  width: 100%;\n  height: 4rem;\n  position: fixed;\n`\nconst HamImg = styled.img`\n  /* width: 100%; */\n  cursor: pointer;\n  height: 4rem;\n  /* border: 1px solid blue; */\n`\nconst ArrowImg = styled.img`\n  display: block;\n  width: 3rem;\n  margin-right: 1rem;\n  cursor: pointer;\n  /* z-index: 999999; */\n  /* position: fixed; */\n`\n\nconst ArrowWrapper = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  /* border: 1px solid red; */\n  justify-content: flex-end;\n\n  width: 100%;\n`\nconst ContentWrapper = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  /* border: 1px solid red; */\n  justify-content: center;\n  font-size: 1.4rem;\n  /* font-weight: 500; */\n  color: #fff;\n  width: 100%;\n`\n\nconst MenuBox = styled.div`\n  width: 0%;\n  height: 85vh;\n  flex: 1;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  ${props =>\n    props.clickArrow &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 0.5s;\n      /* animation-iteration-count: 1; */\n      animation-name: ${SlideOff};\n      width: 0%;\n    `}\n  ${props =>\n    !props.clickArrow &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 0.5s;\n      /* animation-iteration-count: 1; */\n      animation-name: ${SlideOn};\n      width: 20%;\n    `}\n`\n\nexport default QuizHeader\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/Bg.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/Header.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/LogoTitle.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/TestTitle.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/ThankYouText.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/RecommendText.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/RecommendCardList.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/test_end/BackToMain.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/Bg.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/header/Header.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/banner/Banner.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/footer/Footer.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/test/TextComponent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/pages/modal/ModalPage.js",["451"],"import React, { useEffect, useState } from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport ModalContent from '../../components/modal/ModalContent.js'\nimport ModalInner from '../../components/modal/ModalInner'\nimport ModalOverlay from '../../components/modal/ModalOverlay'\nimport ModalWrapperContainer from '../../containers/modal/ModalWrapperContainer.js'\n\nfunction ModalPage({\n  visible,\n  closeModal,\n  maskClosable,\n  urlId,\n  modalIn,\n  modalOut,\n}) {\n  const [data, setData] = useState('')\n  //   const [modalOut, setModalOut] = useState(false)\n\n  useEffect(() => {\n    setData(urlId)\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`\n    return () => {\n      const scrollY = document.body.style.top\n      document.body.style.cssText = `position: \"\"; top: \"\";`\n      window.scrollTo(0, parseInt(scrollY || '0') * -1)\n    }\n  }, [])\n  return (\n    <>\n      <ModalOverlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\n\n      <ModalWrapperContainer\n        closeModal={closeModal}\n        maskClosable={maskClosable}\n        visible={visible}\n      >\n        <ModalInner modalIn={modalIn}>\n          <ModalContent data={data} />\n        </ModalInner>\n\n        <AnswerButtonStyle\n          modalOut={modalOut}\n          modalIn={modalIn}\n          onClick={e => {\n            closeModal(e)\n          }}\n        >\n          돌아가기\n        </AnswerButtonStyle>\n      </ModalWrapperContainer>\n    </>\n  )\n}\n\nconst FadeIn = keyframes`{\n    0% { \n     opacity: 0;\n    }\n    100% {\n    opacity: 1;\n    }\n  `\n\nconst FadeOut = keyframes`{\n    0% { \n     opacity: 1;\n    }\n    100% {\n    opacity: 0;\n    }\n  `\n\nconst AnswerButtonStyle = styled.button`\n  cursor: pointer;\n  color: #030f2c;\n  border: none;\n  outline: none;\n  box-shadow: 0px 0px 21px -6px #49fff2;\n  padding: 0px;\n  width: 44rem;\n  height: 5rem;\n  position: fixed;\n  margin: 0 auto;\n  left: 0;\n  right: 0;\n  bottom: 50px;\n  z-index: 1000;\n  overflow: auto;\n\n  @media only screen and (max-width: 1024px) {\n    width: 35rem;\n    height: 4rem;\n  }\n  @media only screen and (max-width: 768px) {\n    width: 32rem;\n    height: 4rem;\n  }\n  background: linear-gradient(\n    90deg,\n    rgba(73, 255, 242, 1) 0%,\n    rgba(73, 255, 233, 1) 35%,\n    rgba(56, 245, 238, 1) 66%,\n    rgba(0, 212, 255, 1) 100%\n  );\n  &:hover {\n    transition: box-shadow 0.5s ease-in-out;\n    box-shadow: 0px 0px 40px -6px #49fff2;\n  }\n  ${props =>\n    props.modalIn &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 1s;\n      animation-name: ${FadeIn};\n    `}\n\n  ${props =>\n    props.modalOut &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 1s;\n      animation-name: ${FadeOut};\n    `}\n`\n\nexport default ModalPage\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/category/Category.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/test_card/TestCard.js",["452","453","454","455","456"],"// 카드 크기 때문에 breakpoint - 1440(추가), 768 -> 828로 변경\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PlusDesktop from \"../../../assets/desktop/button_add.png\";\nimport PlusTablet from \"../../../assets/tablet/button_add.png\";\nimport PlusMobile from \"../../../assets/mobile/button_add.png\";\nimport BlankTop from \"../../common/BlankTop\";\nimport PlayImg from \"../../../assets/play.png\";\n\nconst PlusBtn = styled.div`\n  display: block;\n  width: 29.6rem;\n  height: 5.6rem;\n  position: relative;\n  background-image: url(${PlusDesktop});\n  background-repeat: no-repeat;\n  background-position: center center;\n  border-radius: 8px;\n  // border: 3px solid transparent;\n  background-color: transparent;\n  cursor: pointer;\n  overflow: hidden;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 1024px) {\n    width: 26.2rem;\n    height: 4.8rem;\n    background-image: url(${PlusTablet});\n  }\n  @media (max-width: 828px) {\n    width: 27.6rem;\n    height: 5.5rem;\n    background-image: url(${PlusMobile});\n  }\n`;\n\nconst Card = styled.div`\n  display: block;\n  width: 29.6rem;\n  position: relative;\n  padding: 3.6rem 2.1rem 2rem 2.7rem;\n  border-radius: 10px;\n  border: 3px solid transparent;\n  cursor: pointer;\n  color: #ffffff;\n  background-color: transparent;\n  overflow: hidden;\n\n  border-right-color: rgba(93, 79, 255, 0.4);\n  border-left-color: rgba(96, 255, 218, 0.8);\n  background: linear-gradient(\n        135deg,\n        rgba(96, 255, 218, 1) 0%,\n        rgba(93, 79, 255, 0.4) 100%\n      )\n      top/100% 3px,\n    linear-gradient(\n        135deg,\n        rgba(96, 255, 218, 1) 0%,\n        rgba(93, 79, 255, 0.4) 100%\n      )\n      bottom/100% 3px;\n\n  background-repeat: no-repeat;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    background: linear-gradient(\n      180deg,\n      rgba(96, 255, 205, 0.38) 10%,\n      rgba(96, 255, 218, 0) 90%\n    );\n  }\n\n  @media (max-width: 1024px) {\n    width: 26.2rem;\n    padding: 3.2rem 1.9rem 1.8rem 2.4rem;\n  }\n  @media (max-width: 828px) {\n    width: 27.6rem;\n    padding: 3.4rem 2.5rem 2.9rem 2.4rem;\n  }\n`;\n\nconst RotateBorder = styled.span`\n  position: absolute;\n  display: block;\n  filter: blur(3px);\n  &:nth-child(1) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 3px;\n    background: linear-gradient(90deg, transparent, #60ffda);\n    animation: animate1 1s linear infinite;\n  }\n  @keyframes animate1 {\n    0% {\n      left: 100%;\n    }\n    50%,\n    100% {\n      left: -100%;\n    }\n  }\n  &:nth-child(2) {\n    top: -100%;\n    left: 0;\n    width: 3px;\n    height: 100%;\n    background: linear-gradient(180deg, transparent, #60ffda);\n    animation: animate2 1s linear infinite;\n    animation-delay: 0.25s;\n  }\n  @keyframes animate2 {\n    0% {\n      top: -100%;\n    }\n    50%,\n    100% {\n      top: 100%;\n    }\n  }\n  &:nth-child(3) {\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 3px;\n    background: linear-gradient(270deg, transparent, #60ffda);\n    animation: animate3 1s linear infinite;\n    animation-delay: 0.5s;\n  }\n  @keyframes animate3 {\n    0% {\n      left: -100%;\n    }\n    50%,\n    100% {\n      left: 100%;\n    }\n  }\n  &:nth-child(4) {\n    bottom: -100%;\n    right: 0;\n    width: 3px;\n    height: 100%;\n    background: linear-gradient(360deg, transparent, #60ffda);\n    animation: animate4 1s linear infinite;\n    animation-delay: 0.75s;\n  }\n  @keyframes animate4 {\n    0% {\n      bottom: -100%;\n    }\n    50%,\n    100% {\n      bottom: 100%;\n    }\n  }\n`;\n\nconst CardTitle = styled.div`\n  width: 22.5rem;\n  text-align: left;\n  font-size: 3.2rem;\n  font-weight: 700;\n  line-height: 4.65rem;\n\n  @media (max-width: 1024px) {\n    font-size: 2.8rem;\n    line-height: 4rem;\n  }\n  @media (max-width: 828px) {\n    font-size: 2.4rem;\n    line-height: 3.4rem;\n  }\n`;\n\nconst CardContent = styled.div`\n  width: 22.2rem;\n  text-align: left;\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n\n  @media (max-width: 1024px) {\n    line-height: 1.8rem;\n  }\n  @media (max-width: 828px) {\n    line-height: 2.2rem;\n  }\n`;\n\nconst TestNumber = styled.div`\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n`;\n\nconst Play = styled.span`\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n`;\n\nconst PlayBtn = styled.div`\n  width: 2.8rem;\n  height: 2.8rem;\n  background-image: url(${PlayImg});\n  background-repeat: no-repeat;\n  background-position: center center;\n`;\n\nconst PlayBtnBox = styled.div`\n  display: flex;\n  width: 6.6rem;\n  align-items: center;\n`;\n\nconst PlayBox = () => {\n  return (\n    <PlayBtnBox>\n      <Play>플레이</Play>\n      <PlayBtn />\n    </PlayBtnBox>\n  );\n};\n\nconst PlayFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CardWrapOne = styled.div``;\n\nconst CardWrapTwo = styled.div``;\n\nconst CardWrapThree = styled.div`\n  @media (max-width: 828px) {\n    display: none;\n  }\n`;\n\nconst CardWrapFour = styled.div`\n  @media (max-width: 1440px) {\n    display: none;\n  }\n`;\n\nconst CardListWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 123.2rem;\n  height: ${(props) => props.height}rem;\n  position: relative;\n  margin: 0 auto;\n  overflow: hidden;\n\n  @media (max-width: 1440px) {\n    width: 92rem;\n  }\n\n  @media (max-width: 1024px) {\n    width: 81.6rem;\n  }\n\n  @media (max-width: 828px) {\n    width: 57rem;\n  }\n`;\n\nconst GradientBox = styled.div`\n  width: 130.3rem;\n  height: 22.2rem;\n  position: absolute;\n  bottom: 0;\n  left: -3.55rem;\n  background: linear-gradient(to bottom, transparent, #071923);\n\n  @media (max-width: 1440px) {\n    width: 95.7rem;\n    left: -1.85rem;\n  }\n\n  @media (max-width: 1024px) {\n    width: 86rem;\n    left: -2.2rem;\n  }\n\n  @media (max-width: 828px) {\n    width: 60.1rem;\n    left: -1.55rem;\n  }\n`;\n\nconst LoadMoreBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60.7rem;\n  height: 6rem;\n  margin: 1.4rem auto 0;\n  font-size: 2rem;\n  font-weight: 700;\n  letter-spacing: 0.025em;\n  border-radius: 8px;\n  border: 2px solid transparent;\n  cursor: pointer;\n  color: #ffffff;\n  background-color: transparent;\n\n  border-radius: 14px;\n  border-right-color: #00ffa3;\n  border-left-color: rgba(82, 0, 255, 0.8);\n  background: linear-gradient(to left, #00ffa3 0%, rgba(82, 0, 255, 0.8) 100%)\n      top/100% 3px,\n    linear-gradient(to left, #00ffa3 0%, rgba(82, 0, 255, 0.8) 100%) bottom/100%\n      3px;\n  background-repeat: no-repeat;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 1440px) {\n    width: 29.6rem;\n    height: 6rem;\n    margin: 0.9rem auto 0;\n  }\n\n  @media (max-width: 1024px) {\n    width: 26.2rem;\n    height: 5.2rem;\n    margin: 1.5rem auto 0;\n    font-size: 1.8rem;\n    letter-spacing: 0;\n  }\n  @media (max-width: 828px) {\n    width: 35.2rem;\n    height: 4.8rem;\n    margin: 0.7rem auto 0;\n    letter-spacing: 0.005em;\n  }\n`;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width } = window;\n  return {\n    width,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst CardList = ({ testList, testList2 }) => {\n  testList = Object.values(testList);\n  console.log(testList);\n  console.log(testList2, testList2.length);\n\n  // testList와 testList2에 공통으로 있는 것만 리턴\n  let finalList = [];\n  testList.forEach((item) => {\n    testList2.forEach((item2) => {\n      if (\n        item.title.toLowerCase().includes(item2.title.toLowerCase()) &&\n        item.description.toLowerCase().includes(item2.description.toLowerCase())\n      ) {\n        finalList.push(item2);\n      }\n    });\n  });\n  console.log(finalList);\n  // testList = finalList;\n\n  const history = useHistory();\n\n  const [count, setCount] = useState(2);\n  const [height, setHeight] = useState(116.5);\n  const countPlus = (e) => {\n    setCount(count + 1);\n    console.log(count);\n    setHeight(count * 116.5);\n    console.log(height);\n  };\n\n  const { width } = useWindowDimensions();\n\n  const divideNum = width > 1440 ? 4 : width > 828 ? 3 : 2;\n  const divided = parseInt(testList.length / divideNum);\n  const leftOver = testList.length % divideNum;\n\n  let one = divided + leftOver,\n    two = divided,\n    three = divided,\n    four = divided;\n  if (leftOver === 2) {\n    two += 1;\n    one -= 1;\n  }\n  if (leftOver === 3) {\n    two += 1;\n    three += 1;\n    one -= 2;\n  }\n  if (leftOver === 4) {\n    two += 1;\n    three += 1;\n    four += 1;\n    one -= 3;\n  }\n\n  const maxHeight =\n    width > 1024 ? 35 * (divided + leftOver) : 29 * (divided + leftOver);\n  console.log(maxHeight);\n\n  return (\n    <>\n      <CardListWrap height={height}>\n        <CardWrapOne>\n          <Link to=\"/testmaking\">\n            <PlusBtn>\n              <RotateBorder />\n              <RotateBorder />\n              <RotateBorder />\n              <RotateBorder />\n            </PlusBtn>\n          </Link>\n          <BlankTop DesktopMargin={1.6} TabletMargin={1.6} MobileMargin={1.8} />\n          <>\n            {finalList.map((item, index) => {\n              if (index < one) {\n                return (\n                  <>\n                    <Card\n                      key={index}\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                    >\n                      <CardTitle>{item[\"title\"]}</CardTitle>\n                      <BlankTop\n                        DesktopMargin={3}\n                        TabletMargin={2.7}\n                        MobileMargin={0.4}\n                      />\n                      <CardContent>{item[\"description\"]}</CardContent>\n                      <BlankTop\n                        DesktopMargin={3.8}\n                        TabletMargin={3.3}\n                        MobileMargin={4.8}\n                      />\n                      <PlayFooter>\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                        <PlayBox />\n                      </PlayFooter>\n                    </Card>\n                    <BlankTop\n                      DesktopMargin={1.6}\n                      TabletMargin={1.6}\n                      MobileMargin={1.8}\n                    />\n                  </>\n                );\n              }\n            })}\n          </>\n        </CardWrapOne>\n        <CardWrapTwo>\n          <>\n            {finalList.map((item, index) => {\n              if (width <= 828) {\n                if (index >= one) {\n                  return (\n                    <>\n                      <Card\n                        key={index}\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                      >\n                        <CardTitle>{item[\"title\"]}</CardTitle>\n                        <BlankTop\n                          DesktopMargin={3}\n                          TabletMargin={2.7}\n                          MobileMargin={0.4}\n                        />\n                        <CardContent>{item[\"description\"]}</CardContent>\n                        <BlankTop\n                          DesktopMargin={3.8}\n                          TabletMargin={3.3}\n                          MobileMargin={4.8}\n                        />\n                        <PlayFooter>\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                          <PlayBox />\n                        </PlayFooter>\n                      </Card>\n                      <BlankTop\n                        DesktopMargin={1.6}\n                        TabletMargin={1.6}\n                        MobileMargin={1.8}\n                      />\n                    </>\n                  );\n                }\n              } else {\n                if (index >= one && index < one + two) {\n                  return (\n                    <>\n                      <Card\n                        key={index}\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                      >\n                        <CardTitle>{item[\"title\"]}</CardTitle>\n                        <BlankTop\n                          DesktopMargin={3}\n                          TabletMargin={2.7}\n                          MobileMargin={0.4}\n                        />\n                        <CardContent>{item[\"description\"]}</CardContent>\n                        <BlankTop\n                          DesktopMargin={3.8}\n                          TabletMargin={3.3}\n                          MobileMargin={4.8}\n                        />\n                        <PlayFooter>\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                          <PlayBox />\n                        </PlayFooter>\n                      </Card>\n                      <BlankTop\n                        DesktopMargin={1.6}\n                        TabletMargin={1.6}\n                        MobileMargin={1.8}\n                      />\n                    </>\n                  );\n                }\n              }\n            })}\n          </>\n        </CardWrapTwo>\n        <CardWrapThree>\n          <>\n            {finalList.map((item, index) => {\n              if (width <= 1440) {\n                if (index >= one + two) {\n                  return (\n                    <>\n                      <Card\n                        key={index}\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                      >\n                        <CardTitle>{item[\"title\"]}</CardTitle>\n                        <BlankTop\n                          DesktopMargin={3}\n                          TabletMargin={2.7}\n                          MobileMargin={0.4}\n                        />\n                        <CardContent>{item[\"description\"]}</CardContent>\n                        <BlankTop\n                          DesktopMargin={3.8}\n                          TabletMargin={3.3}\n                          MobileMargin={4.8}\n                        />\n                        <PlayFooter>\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                          <PlayBox />\n                        </PlayFooter>\n                      </Card>\n                      <BlankTop\n                        DesktopMargin={1.6}\n                        TabletMargin={1.6}\n                        MobileMargin={1.8}\n                      />\n                    </>\n                  );\n                }\n              } else {\n                if (index >= one + two && index < one + two + three) {\n                  return (\n                    <>\n                      <Card\n                        key={index}\n                        onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                      >\n                        <CardTitle>{item[\"title\"]}</CardTitle>\n                        <BlankTop\n                          DesktopMargin={3}\n                          TabletMargin={2.7}\n                          MobileMargin={0.4}\n                        />\n                        <CardContent>{item[\"description\"]}</CardContent>\n                        <BlankTop\n                          DesktopMargin={3.8}\n                          TabletMargin={3.3}\n                          MobileMargin={4.8}\n                        />\n                        <PlayFooter>\n                          <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                          <PlayBox />\n                        </PlayFooter>\n                      </Card>\n                      <BlankTop\n                        DesktopMargin={1.6}\n                        TabletMargin={1.6}\n                        MobileMargin={1.8}\n                      />\n                    </>\n                  );\n                }\n              }\n            })}\n          </>\n        </CardWrapThree>\n        <CardWrapFour>\n          <>\n            {finalList.map((item, index) => {\n              if (index >= one + two + three) {\n                return (\n                  <>\n                    <Card\n                      key={index}\n                      onClick={() => history.push(`/test/${item[\"id\"]}`)}\n                    >\n                      <CardTitle>{item[\"title\"]}</CardTitle>\n                      <BlankTop\n                        DesktopMargin={3}\n                        TabletMargin={2.7}\n                        MobileMargin={0.4}\n                      />\n                      <CardContent>{item[\"description\"]}</CardContent>\n                      <BlankTop\n                        DesktopMargin={3.8}\n                        TabletMargin={3.3}\n                        MobileMargin={4.8}\n                      />\n                      <PlayFooter>\n                        <TestNumber>{item[\"questionCount\"]}문제</TestNumber>\n                        <PlayBox />\n                      </PlayFooter>\n                    </Card>\n                    <BlankTop\n                      DesktopMargin={1.6}\n                      TabletMargin={1.6}\n                      MobileMargin={1.8}\n                    />\n                  </>\n                );\n              }\n            })}\n          </>\n        </CardWrapFour>\n        <GradientBox />\n      </CardListWrap>\n      {height < maxHeight && (\n        <LoadMoreBtn onClick={countPlus}>더보기</LoadMoreBtn>\n      )}\n    </>\n  );\n};\n\nexport default CardList;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/containers/modal/ModalWrapperContainer.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalContent.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/common/MenuIcon.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/main/category/CategoryList.js",["457","458"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n// 서버랑 통신해서 카테고리 이름 받아오기\nconst CategoryName = styled.span`\n  font-size: 1.3rem;\n  line-height: 1.035;\n  color: #dadada;\n  @media (max-width: 1440px) {\n    font-size: 1.2rem;\n  }\n  @media (max-width: 1047px) {\n    font-size: 1.15rem;\n  }\n  @media (max-width: 1024px) {\n    font-size: 1.2rem;\n    line-height: 1.035;\n  }\n`;\n\nconst CategoryBtn = styled.button`\n  display: block;\n  width: 1.2rem;\n  height: 1.2rem;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 0 9px 0 #ffffff;\n  background-color: #ffffff;\n  cursor: pointer;\n  &:focus {\n    width: 2rem;\n    height: 2rem;\n    outline: none;\n    box-shadow: 0 0 12px 0 #60ffda;\n    background-color: #60ffda;\n  }\n  &:hover {\n    width: 2rem;\n    height: 2rem;\n    box-shadow: 0 0 12px 0 #ffffff;\n    outline: none;\n  }\n`;\n\nconst CategoryItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  width: 6.9rem;\n  height: 5.3rem;\n  margin-right: 4.3rem;\n  &:nth-child(9) {\n    margin-right: 8rem;\n  }\n  @media (max-width: 1024px) {\n    &:nth-child(7) {\n      margin-right: 1.4rem;\n    }\n  }\n  @media (max-width: 828px) {\n    &:nth-child(5) {\n      margin-right: 3.2rem;\n    }\n  }\n`;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width } = window;\n  return {\n    width,\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst CategoryList = ({ categoryList, startNum, onClickDisplay }) => {\n  console.log(categoryList);\n  const { width } = useWindowDimensions();\n\n  const categoryNum = width > 1024 ? 7 : width > 828 ? 5 : 3;\n\n  return (\n    <>\n      {categoryList.map((item, index) => {\n        if (index === 9) {\n          return (\n            <CategoryItem>\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\n              <CategoryBtn onClick={() => onClickDisplay(item[\"id\"])} />\n            </CategoryItem>\n          );\n        }\n      })}\n      {categoryList.map((item, index) => {\n        if (index < startNum + categoryNum && index >= startNum) {\n          return (\n            <CategoryItem>\n              <CategoryName key={index}>{item[\"description\"]}</CategoryName>\n              <CategoryBtn onClick={() => onClickDisplay(item[\"id\"])} />\n            </CategoryItem>\n          );\n        }\n      })}\n    </>\n  );\n};\n\nexport default CategoryList;\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalInner.js",[],"/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalOverlay.js",["459"],"import styled, { css, keyframes } from 'styled-components'\n\nconst Overlay = styled.div`\n  display: ${props => (props.visible ? 'block' : 'none')};\n  /* visibility: ${props => (props.visible ? 'visible' : 'hidden')}; */\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n  transition: all 1s ease-in-out;\n  ${props =>\n    props.modalIn &&\n    css`\n      animation-timing-function: ease-in-out;\n      animation-duration: 1s;\n      animation-name: ${FadeIn};\n    `}\n`\n\nconst FadeIn = keyframes`{\n  0% { \n    background-color: rgba(0, 0, 0, 0);\n  }\n  100% {\n    background-color: rgba(0, 0, 0, 0.5);\n  }\n`\n\nconst FadeOut = keyframes`{\n  0% { \n    background-color: rgba(0, 0, 0, 0.5);\n  }\n  100% {\n    background-color: rgba(0, 0, 0, 0);\n  }\n`\n\nconst ModalOverlay = ({ visible, modalIn, modalOut }) => {\n  return <Overlay visible={visible} modalIn={modalIn} modalOut={modalOut} />\n}\n\nexport default ModalOverlay\n","/Users/leejaehoon/Desktop/project/soundpicker_frontend/src/components/modal/ModalWrapper.js",[],{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":5,"column":1,"nodeType":"466","endLine":50,"endColumn":2},{"ruleId":"467","severity":1,"message":"468","line":40,"column":11,"nodeType":"469","endLine":40,"endColumn":13,"suggestions":"470"},{"ruleId":"471","severity":1,"message":"472","line":6,"column":8,"nodeType":"473","messageId":"474","endLine":6,"endColumn":21},{"ruleId":"471","severity":1,"message":"475","line":3,"column":23,"nodeType":"473","messageId":"474","endLine":3,"endColumn":34},{"ruleId":"467","severity":1,"message":"476","line":120,"column":5,"nodeType":"469","endLine":120,"endColumn":7,"suggestions":"477"},{"ruleId":"478","severity":1,"message":"479","line":166,"column":14,"nodeType":"480","endLine":166,"endColumn":18},{"ruleId":"471","severity":1,"message":"481","line":1,"column":8,"nodeType":"473","messageId":"474","endLine":1,"endColumn":16},{"ruleId":"471","severity":1,"message":"482","line":2,"column":21,"nodeType":"473","messageId":"474","endLine":2,"endColumn":25},{"ruleId":"471","severity":1,"message":"483","line":161,"column":11,"nodeType":"473","messageId":"474","endLine":161,"endColumn":16},{"ruleId":"471","severity":1,"message":"484","line":166,"column":11,"nodeType":"473","messageId":"474","endLine":166,"endColumn":22},{"ruleId":"464","severity":1,"message":"465","line":4,"column":1,"nodeType":"466","endLine":23,"endColumn":2},{"ruleId":"485","severity":1,"message":"486","line":8,"column":13,"nodeType":"487","messageId":"488","endLine":8,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":11,"column":13,"nodeType":"487","messageId":"488","endLine":11,"endColumn":19},{"ruleId":"485","severity":1,"message":"486","line":14,"column":13,"nodeType":"487","messageId":"488","endLine":14,"endColumn":19},{"ruleId":"471","severity":1,"message":"489","line":2,"column":8,"nodeType":"473","messageId":"474","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"491","line":50,"column":27,"nodeType":"492","messageId":"493","endLine":50,"endColumn":29},{"ruleId":"494","severity":1,"message":"495","line":196,"column":95,"nodeType":"496","messageId":"497","endLine":196,"endColumn":96,"suggestions":"498"},{"ruleId":"494","severity":1,"message":"499","line":196,"column":97,"nodeType":"496","messageId":"497","endLine":196,"endColumn":98,"suggestions":"500"},{"ruleId":"467","severity":1,"message":"501","line":733,"column":10,"nodeType":"469","endLine":733,"endColumn":12,"suggestions":"502"},{"ruleId":"467","severity":1,"message":"503","line":779,"column":11,"nodeType":"469","endLine":779,"endColumn":131,"suggestions":"504"},{"ruleId":"494","severity":1,"message":"495","line":218,"column":95,"nodeType":"496","messageId":"497","endLine":218,"endColumn":96,"suggestions":"505"},{"ruleId":"494","severity":1,"message":"499","line":218,"column":97,"nodeType":"496","messageId":"497","endLine":218,"endColumn":98,"suggestions":"506"},{"ruleId":"471","severity":1,"message":"507","line":433,"column":7,"nodeType":"473","messageId":"474","endLine":433,"endColumn":17},{"ruleId":"467","severity":1,"message":"501","line":776,"column":10,"nodeType":"469","endLine":776,"endColumn":12,"suggestions":"508"},{"ruleId":"471","severity":1,"message":"509","line":47,"column":10,"nodeType":"473","messageId":"474","endLine":47,"endColumn":14},{"ruleId":"471","severity":1,"message":"510","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":12},{"ruleId":"467","severity":1,"message":"511","line":57,"column":6,"nodeType":"469","endLine":57,"endColumn":8,"suggestions":"512"},{"ruleId":"467","severity":1,"message":"513","line":45,"column":6,"nodeType":"469","endLine":45,"endColumn":8,"suggestions":"514"},{"ruleId":"471","severity":1,"message":"515","line":9,"column":25,"nodeType":"473","messageId":"474","endLine":9,"endColumn":42},{"ruleId":"467","severity":1,"message":"516","line":49,"column":7,"nodeType":"469","endLine":49,"endColumn":9,"suggestions":"517"},{"ruleId":"467","severity":1,"message":"518","line":62,"column":7,"nodeType":"469","endLine":62,"endColumn":24,"suggestions":"519"},{"ruleId":"471","severity":1,"message":"520","line":3,"column":8,"nodeType":"473","messageId":"474","endLine":3,"endColumn":14},{"ruleId":"467","severity":1,"message":"521","line":40,"column":6,"nodeType":"469","endLine":40,"endColumn":19,"suggestions":"522"},{"ruleId":"523","severity":1,"message":"524","line":106,"column":13,"nodeType":"473","messageId":"525","endLine":106,"endColumn":18},{"ruleId":"467","severity":1,"message":"526","line":112,"column":6,"nodeType":"469","endLine":112,"endColumn":14,"suggestions":"527"},{"ruleId":"528","severity":1,"message":"529","line":18,"column":11,"nodeType":"530","endLine":20,"endColumn":13},{"ruleId":"467","severity":1,"message":"531","line":27,"column":6,"nodeType":"469","endLine":27,"endColumn":8,"suggestions":"532"},{"ruleId":"471","severity":1,"message":"533","line":428,"column":5,"nodeType":"473","messageId":"474","endLine":428,"endColumn":9},{"ruleId":"534","severity":1,"message":"535","line":450,"column":42,"nodeType":"536","messageId":"537","endLine":450,"endColumn":44},{"ruleId":"534","severity":1,"message":"535","line":488,"column":42,"nodeType":"536","messageId":"537","endLine":488,"endColumn":44},{"ruleId":"534","severity":1,"message":"535","line":561,"column":42,"nodeType":"536","messageId":"537","endLine":561,"endColumn":44},{"ruleId":"534","severity":1,"message":"535","line":634,"column":42,"nodeType":"536","messageId":"537","endLine":634,"endColumn":44},{"ruleId":"534","severity":1,"message":"535","line":100,"column":39,"nodeType":"536","messageId":"537","endLine":100,"endColumn":41},{"ruleId":"534","severity":1,"message":"535","line":110,"column":39,"nodeType":"536","messageId":"537","endLine":110,"endColumn":41},{"ruleId":"471","severity":1,"message":"538","line":32,"column":7,"nodeType":"473","messageId":"474","endLine":32,"endColumn":14},"no-native-reassign",["539"],"no-negated-in-lhs",["540"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["541"],"no-unused-vars","'UnderLineWrap' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["542"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'BlankTop' is defined but never used.","'Link' is defined but never used.","'dirty' is assigned a value but never used.","'handleReset' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'styled' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["543","544"],"Unnecessary escape character: \\?.",["545","546"],"React Hook useEffect has missing dependencies: 'checkCurrentTime0', 'checkCurrentTime1', 'checkCurrentTime2', 'checkCurrentTime3', 'checkCurrentTime4', 'checkCurrentTime5', 'checkCurrentTime6', 'checkCurrentTime7', 'checkCurrentTime8', 'checkCurrentTime9', 'onReadyAPI0', 'onReadyAPI1', 'onReadyAPI2', 'onReadyAPI3', 'onReadyAPI4', 'onReadyAPI5', 'onReadyAPI6', 'onReadyAPI7', 'onReadyAPI8', and 'onReadyAPI9'. Either include them or remove the dependency array.",["547"],"React Hook useEffect has missing dependencies: 'getTestData' and 'match.params.id'. Either include them or remove the dependency array.",["548"],["549","550"],["551","552"],"'readyCount' is assigned a value but never used.",["553"],"'test' is assigned a value but never used.","'Test' is defined but never used.","React Hook useEffect has a missing dependency: 'getRecommendAPI'. Either include it or remove the dependency array.",["554"],"React Hook useEffect has a missing dependency: 'testCategory'. Either include it or remove the dependency array.",["555"],"'setContainerWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questionStartsfrom'. Either include it or remove the dependency array. If 'setMinutes' needs the current value of 'questionStartsfrom', you can also switch to useReducer instead of useState and read 'questionStartsfrom' in the reducer.",["556"],"React Hook useEffect has missing dependencies: 'changeStartTime' and 'totalTime'. Either include them or remove the dependency array. If 'changeStartTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["557"],"'bg1440' is defined but never used.","React Hook useEffect has a missing dependency: 'newList'. Either include it or remove the dependency array. If 'setSound1Url' needs the current value of 'newList', you can also switch to useReducer instead of useState and read 'newList' in the reducer.",["558"],"no-redeclare","'audio' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'first'. Either include it or remove the dependency array.",["559"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'urlId'. Either include it or remove the dependency array. If 'setData' needs the current value of 'urlId', you can also switch to useReducer instead of useState and read 'urlId' in the reducer.",["560"],"'four' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FadeOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"messageId":"565","fix":"566","desc":"567"},{"messageId":"568","fix":"569","desc":"570"},{"messageId":"565","fix":"571","desc":"567"},{"messageId":"568","fix":"572","desc":"570"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"messageId":"565","fix":"577","desc":"567"},{"messageId":"568","fix":"578","desc":"570"},{"messageId":"565","fix":"579","desc":"567"},{"messageId":"568","fix":"580","desc":"570"},{"desc":"573","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"596","text":"597"},"Update the dependencies array to be: [dispatch]",{"range":"598","text":"599"},"removeEscape",{"range":"600","text":"601"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"602","text":"603"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"604","text":"601"},{"range":"605","text":"603"},"Update the dependencies array to be: [checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",{"range":"606","text":"607"},"Update the dependencies array to be: [getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",{"range":"608","text":"609"},{"range":"610","text":"601"},{"range":"611","text":"603"},{"range":"612","text":"601"},{"range":"613","text":"603"},{"range":"614","text":"607"},"Update the dependencies array to be: [getRecommendAPI]",{"range":"615","text":"616"},"Update the dependencies array to be: [testCategory]",{"range":"617","text":"618"},"Update the dependencies array to be: [questionStartsfrom]",{"range":"619","text":"620"},"Update the dependencies array to be: [changeStartTime, minutes, seconds, totalTime]",{"range":"621","text":"622"},"Update the dependencies array to be: [activeIndex, newList]",{"range":"623","text":"624"},"Update the dependencies array to be: [first, search]",{"range":"625","text":"626"},"Update the dependencies array to be: [urlId]",{"range":"627","text":"628"},[1305,1307],"[dispatch, props.history]",[2974,2976],"[dispatch]",[7714,7715],"",[7714,7714],"\\",[7716,7717],[7716,7716],[22749,22751],"[checkCurrentTime0, checkCurrentTime1, checkCurrentTime2, checkCurrentTime3, checkCurrentTime4, checkCurrentTime5, checkCurrentTime6, checkCurrentTime7, checkCurrentTime8, checkCurrentTime9, onReadyAPI0, onReadyAPI1, onReadyAPI2, onReadyAPI3, onReadyAPI4, onReadyAPI5, onReadyAPI6, onReadyAPI7, onReadyAPI8, onReadyAPI9]",[24200,24320],"[getTestData, isLoading0, isLoading1, isLoading2, isLoading3, isLoading4, isLoading5, isLoading6, isLoading7, isLoading8, isLoading9, match.params.id]",[8283,8284],[8283,8283],[8285,8286],[8285,8285],[23755,23757],[1401,1403],"[getRecommendAPI]",[1404,1406],"[testCategory]",[1235,1237],"[questionStartsfrom]",[1614,1631],"[changeStartTime, minutes, seconds, totalTime]",[1772,1785],"[activeIndex, newList]",[2463,2471],"[first, search]",[888,890],"[urlId]"]