[{"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/index.js":"1","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/App.js":"2","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/pages/main/MainPage.js":"3","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/pages/test/TestPage.js":"4","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/common/BlankTop.js":"5","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/main/MainContainer.js":"6","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/main/Main.js":"7","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/test/TestBackground.js":"8","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/test/TestWrapperContainer.js":"9","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/test/TestCd/TestCdWrapperContainer.js":"10","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/test/testcd/TestCd.js":"11","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/common/test/TextComponent.js":"12"},{"size":219,"mtime":1609089770687,"results":"13","hashOfConfig":"14"},{"size":463,"mtime":1609681867283,"results":"15","hashOfConfig":"14"},{"size":443,"mtime":1609165693436,"results":"16","hashOfConfig":"14"},{"size":412,"mtime":1609680270865,"results":"17","hashOfConfig":"14"},{"size":689,"mtime":1609165693435,"results":"18","hashOfConfig":"14"},{"size":273,"mtime":1609230876649,"results":"19","hashOfConfig":"14"},{"size":346,"mtime":1609089770686,"results":"20","hashOfConfig":"14"},{"size":900,"mtime":1609664936117,"results":"21","hashOfConfig":"14"},{"size":295,"mtime":1609327231333,"results":"22","hashOfConfig":"14"},{"size":1966,"mtime":1609685613545,"results":"23","hashOfConfig":"14"},{"size":15930,"mtime":1609685698952,"results":"24","hashOfConfig":"14"},{"size":752,"mtime":1609588913873,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1cvqak3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/index.js",[],["54","55"],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/App.js",["56","57"],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/pages/main/MainPage.js",[],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/pages/test/TestPage.js",["58"],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/common/BlankTop.js",[],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/main/MainContainer.js",["59"],"import { useState } from 'react'\nimport Main from '../../components/main/Main'\n\nconst MainContainer = () => {\n  // container는 useState 및 useEffet나 함수 정의\n  const [sibal, setSibal] = useState('')\n\n  return <Main sibal={sibal} />\n}\n\nexport default MainContainer\n","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/main/Main.js",[],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/test/TestBackground.js",["60"],"import styled from 'styled-components'\nimport bg1920 from '../../assets/images/test/all_background1920.png'\nimport bg1440 from '../../assets/images/test/all_background1440.png'\nimport bg1024 from '../../assets/images/test/all_background1024.png'\nimport bg768 from '../../assets/images/test/all_background768.png'\n\nconst TestWrap = styled.div`\n  height: 500vh;\n  width: 100%;\n  position: relative;\n  background-repeat: no-repeat;\n  background-position: center top;\n  background-color: #081923;\n  background-size: contain;\n  background-image: url(${bg1920});\n  overflow: hidden;\n  @media only screen and (max-width: 1024px) {\n    background-image: url(${bg1024});\n  }\n  @media only screen and (max-width: 768px) {\n    background-image: url(${bg768});\n  }\n`\n\nconst TestBackground = ({ children }) => {\n  return (\n    <>\n      <TestWrap>{children}</TestWrap>\n    </>\n  )\n}\n\nexport default TestBackground\n","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/test/TestWrapperContainer.js",["61"],"import React from 'react'\nimport TestBackground from '../../components/test/TestBackground'\nimport Test from '../../components/test/TestBackground'\n\nfunction TestContainer({ children }) {\n  return (\n    <>\n      <TestBackground children={children} />\n    </>\n  )\n}\n\nexport default TestContainer\n","/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/containers/test/TestCd/TestCdWrapperContainer.js",["62"],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/test/testcd/TestCd.js",["63","64"],"/Users/jeahyenjung/Desktop/SoundPicker-Frontend/src/components/common/test/TextComponent.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":3,"nodeType":"71","messageId":"72","endLine":5,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":16},{"ruleId":"69","severity":1,"message":"75","line":6,"column":17,"nodeType":"71","messageId":"72","endLine":6,"endColumn":25},{"ruleId":"69","severity":1,"message":"76","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"77","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":27,"column":6,"nodeType":"81","endLine":27,"endColumn":19,"suggestions":"82"},{"ruleId":"69","severity":1,"message":"83","line":262,"column":7,"nodeType":"71","messageId":"72","endLine":262,"endColumn":20},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'BlankTop' is defined but never used.","'setSibal' is assigned a value but never used.","'bg1440' is defined but never used.","'Test' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recordList'. Either include it or remove the dependency array. If 'setSoundUrl' needs the current value of 'recordList', you can also switch to useReducer instead of useState and read 'recordList' in the reducer.","ArrayExpression",["86"],"'TestCdWrapper' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [activeIndex, recordList]",{"range":"89","text":"90"},[1218,1231],"[activeIndex, recordList]"]